{
  "version": 3,
  "sources": ["../packages/housing/src/filters/endpoint.ts", "../packages/housing/src/filters/type.ts", "../packages/housing/src/filters/kind.ts", "../packages/housing/src/filters/region.ts", "../packages/housing/src/filters/function.ts", "../packages/housing/src/filters/section.ts", "../packages/housing/src/filters/metro_station.ts", "../packages/housing/src/filters/school.ts", "../packages/housing/src/filters/circles.ts", "../packages/housing/src/filters/location.ts", "../packages/housing/src/category.ts", "../packages/housing/src/state.ts", "../packages/housing/src/index.ts", "../src/rent/encrypt.js", "../src/rent/query.ts", "../node_modules/json-formatter-js/dist/json-formatter.mjs", "../src/rent/decrypt.js", "../src/index.ts"],
  "sourcesContent": ["import type { State } from '@/state';\n\nconst ENDPOINT = {\n    businessList: \"https://bff-business.591.com.tw/v2/web/business/list\",\n    rentList: \"https://bff-house.591.com.tw/v3/web/rent/list\"\n}\n\nexport function getEndpont(state: State): string {\n    const { kind } = state;\n    if (![1, 2, 3, 4].map(e => e.toString()).includes(kind))\n        return ENDPOINT.businessList;\n    return ENDPOINT.rentList;\n}", "import type { FilterOption } from './option';\n\ninterface TypeFilter {\n    type: number;\n    name: string;\n    [key: string]: number | string;\n}\n\nconst TYPE: TypeFilter[] = [\n    {\n        \"type\": 1,\n        \"name\": \"\u51FA\u79DF\"\n    },\n    {\n        \"type\": 2,\n        \"name\": \"\u8CB7\u8CE3\"\n    },\n    {\n        \"type\": 6,\n        \"name\": \"\u9802\u8B93\"\n    }\n]\n\nexport function getTypeList(): FilterOption[] {\n    return TYPE.map(e => {\n        return {\n            id: e.type.toString(),\n            key: 'type',\n            name: e.name\n        };\n    });\n}", "import type { State } from '@/state';\nimport type { FilterOption } from './option';\n\ninterface KindFilter {\n    type: number;\n    kind: number | string;\n    name: string;\n}\n\nconst KIND: KindFilter[] = [\n    {\n        \"type\": 1,\n        \"kind\": \"\",\n        \"name\": \"\u79DF\u5C4B\"\n    },\n    {\n        \"type\": 1,\n        \"kind\": 1,\n        \"name\": \"\u6574\u5C64\u4F4F\u5BB6\"\n    },\n    {\n        \"type\": 1,\n        \"kind\": 2,\n        \"name\": \"\u7368\u7ACB\u5957\u623F\"\n    },\n    {\n        \"type\": 1,\n        \"kind\": 3,\n        \"name\": \"\u5206\u79DF\u5957\u623F\"\n    },\n    {\n        \"type\": 1,\n        \"kind\": 4,\n        \"name\": \"\u96C5\u623F\"\n    },\n    {\n        \"type\": 1,\n        \"kind\": 5,\n        \"name\": \"\u5E97\u9762\u51FA\u79DF\"\n    },\n    {\n        \"type\": 2,\n        \"kind\": 5,\n        \"name\": \"\u5E97\u9762\u8CB7\u8CE3\"\n    },\n    {\n        \"type\": 6,\n        \"kind\": 5,\n        \"name\": \"\u5E97\u9762\u9802\u8B93\"\n    },\n    {\n        \"type\": 1,\n        \"kind\": 6,\n        \"name\": \"\u8FA6\u516C\u51FA\u79DF\"\n    },\n    {\n        \"type\": 2,\n        \"kind\": 6,\n        \"name\": \"\u8FA6\u516C\u8CB7\u8CE3\"\n    },\n    {\n        \"type\": 1,\n        \"kind\": 7,\n        \"name\": \"\u5EE0\u623F\u51FA\u79DF\"\n    },\n    {\n        \"type\": 2,\n        \"kind\": 7,\n        \"name\": \"\u5EE0\u623F\u8CB7\u8CE3\"\n    },\n    {\n        \"type\": 1,\n        \"kind\": 8,\n        \"name\": \"\u8ECA\u4F4D\"\n    },\n    {\n        \"type\": 1,\n        \"kind\": 11,\n        \"name\": \"\u571F\u5730\u51FA\u79DF\"\n    },\n    {\n        \"type\": 2,\n        \"kind\": 11,\n        \"name\": \"\u571F\u5730\u8CB7\u8CE3\"\n    },\n    {\n        \"type\": 1,\n        \"kind\": 12,\n        \"name\": \"\u4F4F\u8FA6\u51FA\u79DF\"\n    },\n    {\n        \"type\": 2,\n        \"kind\": 12,\n        \"name\": \"\u4F4F\u8FA6\u8CB7\u8CE3\"\n    },\n    {\n        \"type\": 1,\n        \"kind\": 24,\n        \"name\": \"\u5176\u4ED6\"\n    }\n]\nexport function getKindList(state: State): FilterOption[] {\n    const { type } = state;\n    return KIND.filter(k => k.type.toString() === type)\n        .map(e => {\n            return {\n                id: e.kind.toString(),\n                key: 'kind',\n                name: e.name\n            };\n        });\n}", "import type { FilterOption } from './option';\n\ninterface RegionCategory {\n    name: string,\n    child: RegionFilter[]\n}\n\ninterface RegionFilter {\n    id: number,\n    name: string,\n    lat: string,\n    lng: string\n}\n\nconst REGION: RegionCategory[] = [{\n    name: \"\u5317\u90E8\",\n    child: [{\n        id: 1,\n        name: \"\u53F0\u5317\u5E02\",\n        lat: \"25.0329694\",\n        lng: \"121.5654177\"\n    }, {\n        id: 3,\n        name: \"\u65B0\u5317\u5E02\",\n        lat: \"25.0169826\",\n        lng: \"121.4627868\"\n    }, {\n        id: 6,\n        name: \"\u6843\u5712\u5E02\",\n        lat: \"24.9936281\",\n        lng: \"121.3009798\"\n    }, {\n        id: 4,\n        name: \"\u65B0\u7AF9\u5E02\",\n        lat: \"24.8138287\",\n        lng: \"120.9674798\"\n    }, {\n        id: 5,\n        name: \"\u65B0\u7AF9\u7E23\",\n        lat: \"24.8387226\",\n        lng: \"121.0177246\"\n    }, {\n        id: 21,\n        name: \"\u5B9C\u862D\u7E23\",\n        lat: \"24.7021073\",\n        lng: \"121.7377502\"\n    }, {\n        id: 2,\n        name: \"\u57FA\u9686\u5E02\",\n        lat: \"25.1276033\",\n        lng: \"121.7391833\"\n    }]\n}, {\n    name: \"\u4E2D\u90E8\",\n    child: [{\n        id: 8,\n        name: \"\u53F0\u4E2D\u5E02\",\n        lat: \"24.1477358\",\n        lng: \"120.6736482\"\n    }, {\n        id: 10,\n        name: \"\u5F70\u5316\u7E23\",\n        lat: \"24.0517963\",\n        lng: \"120.5161352\"\n    }, {\n        id: 14,\n        name: \"\u96F2\u6797\u7E23\",\n        lat: \"23.7092033\",\n        lng: \"120.4313373\"\n    }, {\n        id: 7,\n        name: \"\u82D7\u6817\u7E23\",\n        lat: \"24.5601590\",\n        lng: \"120.8214265\"\n    }, {\n        id: 11,\n        name: \"\u5357\u6295\u7E23\",\n        lat: \"23.9609981\",\n        lng: \"120.9718638\"\n    }]\n}, {\n    name: \"\u5357\u90E8\",\n    child: [{\n        id: 17,\n        name: \"\u9AD8\u96C4\u5E02\",\n        lat: \"22.6272784\",\n        lng: \"120.3014353\"\n    }, {\n        id: 15,\n        name: \"\u53F0\u5357\u5E02\",\n        lat: \"22.9997281\",\n        lng: \"120.2270277\"\n    }, {\n        id: 12,\n        name: \"\u5609\u7FA9\u5E02\",\n        lat: \"23.4800751\",\n        lng: \"120.4491113\"\n    }, {\n        id: 13,\n        name: \"\u5609\u7FA9\u7E23\",\n        lat: \"23.4518428\",\n        lng: \"120.2554615\"\n    }, {\n        id: 19,\n        name: \"\u5C4F\u6771\u7E23\",\n        lat: \"22.5519759\",\n        lng: \"120.5487597\"\n    }]\n}, {\n    name: \"\u6771\u90E8\",\n    child: [{\n        id: 22,\n        name: \"\u53F0\u6771\u7E23\",\n        lat: \"22.7972447\",\n        lng: \"121.0713702\"\n    }, {\n        id: 23,\n        name: \"\u82B1\u84EE\u7E23\",\n        lat: \"23.9871589\",\n        lng: \"121.6015714\"\n    }, {\n        id: 24,\n        name: \"\u6F8E\u6E56\u7E23\",\n        lat: \"23.5711899\",\n        lng: \"119.5793157\"\n    }, {\n        id: 25,\n        name: \"\u91D1\u9580\u7E23\",\n        lat: \"24.3487792\",\n        lng: \"118.3285644\"\n    }, {\n        id: 26,\n        name: \"\u9023\u6C5F\u7E23\",\n        lat: \"26.1602430\",\n        lng: \"119.9516652\"\n    }]\n}];\n\nexport function getRegionList(): FilterOption[] {\n    return REGION.map(e => {\n        return {\n            id: \"\",\n            key: \"\",\n            name: e.name,\n            child: e.child.map(ee => {\n                return {\n                    ...ee,\n                    id: ee.id.toString(),\n                    key: 'region'\n                }\n            })\n        };\n    });;\n}", "import type { FilterOption } from './option';\n\nexport function getFilterAllOption(key: string): FilterOption[] {\n    return [{\n        id: \"\",\n        key: key,\n        name: \"\u4E0D\u9650\"\n    }]\n}", "import type { State } from '@/state';\nimport type { FilterOption } from './option';\nimport { getFilterAllOption } from './function';\n\ninterface SectionCategory {\n    id: number,\n    child: SectionFilter[]\n}\n\ninterface SectionFilter {\n    id: number,\n    name: string,\n    lat: string,\n    lng: string\n}\n\nconst SECTION: SectionCategory[] = [{\n    id: 1,\n    child: [{\n        id: 5,\n        name: \"\u5927\u5B89\u5340\",\n        lat: \"25.0249441\",\n        lng: \"121.5433783\"\n    }, {\n        id: 10,\n        name: \"\u5167\u6E56\u5340\",\n        lat: \"25.0689422\",\n        lng: \"121.5909027\"\n    }, {\n        id: 8,\n        name: \"\u58EB\u6797\u5340\",\n        lat: \"25.0950492\",\n        lng: \"121.5246077\"\n    }, {\n        id: 12,\n        name: \"\u6587\u5C71\u5340\",\n        lat: \"24.9929212\",\n        lng: \"121.5712500\"\n    }, {\n        id: 9,\n        name: \"\u5317\u6295\u5340\",\n        lat: \"25.1151759\",\n        lng: \"121.5150180\"\n    }, {\n        id: 3,\n        name: \"\u4E2D\u5C71\u5340\",\n        lat: \"25.0792018\",\n        lng: \"121.5427093\"\n    }, {\n        id: 7,\n        name: \"\u4FE1\u7FA9\u5340\",\n        lat: \"25.0409201\",\n        lng: \"121.5720055\"\n    }, {\n        id: 4,\n        name: \"\u677E\u5C71\u5340\",\n        lat: \"25.0541591\",\n        lng: \"121.5638621\"\n    }, {\n        id: 6,\n        name: \"\u842C\u83EF\u5340\",\n        lat: \"25.0262857\",\n        lng: \"121.4970294\"\n    }, {\n        id: 1,\n        name: \"\u4E2D\u6B63\u5340\",\n        lat: \"25.0421407\",\n        lng: \"121.5198716\"\n    }, {\n        id: 2,\n        name: \"\u5927\u540C\u5340\",\n        lat: \"25.0627243\",\n        lng: \"121.5113064\"\n    }, {\n        id: 11,\n        name: \"\u5357\u6E2F\u5340\",\n        lat: \"25.0312347\",\n        lng: \"121.6111949\"\n    }]\n}, {\n    id: 2,\n    child: [{\n        id: 17,\n        name: \"\u5B89\u6A02\u5340\",\n        lat: \"25.1474144\",\n        lng: \"121.7024448\"\n    }, {\n        id: 14,\n        name: \"\u4FE1\u7FA9\u5340\",\n        lat: \"25.1284336\",\n        lng: \"121.7822278\"\n    }, {\n        id: 19,\n        name: \"\u4E03\u5835\u5340\",\n        lat: \"25.1143924\",\n        lng: \"121.6853410\"\n    }, {\n        id: 15,\n        name: \"\u4E2D\u6B63\u5340\",\n        lat: \"25.1489988\",\n        lng: \"121.7736823\"\n    }, {\n        id: 16,\n        name: \"\u4E2D\u5C71\u5340\",\n        lat: \"25.1525870\",\n        lng: \"121.7252457\"\n    }, {\n        id: 13,\n        name: \"\u4EC1\u611B\u5340\",\n        lat: \"25.1187161\",\n        lng: \"121.7451927\"\n    }, {\n        id: 18,\n        name: \"\u6696\u6696\u5340\",\n        lat: \"25.0836163\",\n        lng: \"121.7480420\"\n    }]\n}, {\n    id: 3,\n    child: [{\n        id: 26,\n        name: \"\u677F\u6A4B\u5340\",\n        lat: \"25.0114095\",\n        lng: \"121.4618415\"\n    }, {\n        id: 44,\n        name: \"\u65B0\u838A\u5340\",\n        lat: \"25.0265985\",\n        lng: \"121.4178347\"\n    }, {\n        id: 38,\n        name: \"\u4E2D\u548C\u5340\",\n        lat: \"24.9962178\",\n        lng: \"121.4853103\"\n    }, {\n        id: 43,\n        name: \"\u4E09\u91CD\u5340\",\n        lat: \"25.0614534\",\n        lng: \"121.4867114\"\n    }, {\n        id: 34,\n        name: \"\u65B0\u5E97\u5340\",\n        lat: \"24.9782820\",\n        lng: \"121.5394822\"\n    }, {\n        id: 39,\n        name: \"\u571F\u57CE\u5340\",\n        lat: \"24.9683710\",\n        lng: \"121.4380340\"\n    }, {\n        id: 37,\n        name: \"\u6C38\u548C\u5340\",\n        lat: \"25.0103251\",\n        lng: \"121.5145353\"\n    }, {\n        id: 27,\n        name: \"\u6C50\u6B62\u5340\",\n        lat: \"25.0616059\",\n        lng: \"121.6397184\"\n    }, {\n        id: 47,\n        name: \"\u8606\u6D32\u5340\",\n        lat: \"25.0868908\",\n        lng: \"121.4715241\"\n    }, {\n        id: 50,\n        name: \"\u6DE1\u6C34\u5340\",\n        lat: \"25.1719805\",\n        lng: \"121.4433706\"\n    }, {\n        id: 41,\n        name: \"\u6A39\u6797\u5340\",\n        lat: \"24.9815605\",\n        lng: \"121.4198606\"\n    }, {\n        id: 46,\n        name: \"\u6797\u53E3\u5340\",\n        lat: \"25.0790108\",\n        lng: \"121.3881378\"\n    }, {\n        id: 40,\n        name: \"\u4E09\u5CFD\u5340\",\n        lat: \"24.9358605\",\n        lng: \"121.3744903\"\n    }, {\n        id: 48,\n        name: \"\u4E94\u80A1\u5340\",\n        lat: \"25.0848317\",\n        lng: \"121.4386586\"\n    }, {\n        id: 42,\n        name: \"\u9DAF\u6B4C\u5340\",\n        lat: \"24.9614967\",\n        lng: \"121.3427262\"\n    }, {\n        id: 45,\n        name: \"\u6CF0\u5C71\u5340\",\n        lat: \"25.0581641\",\n        lng: \"121.4327919\"\n    }, {\n        id: 49,\n        name: \"\u516B\u91CC\u5340\",\n        lat: \"25.1443896\",\n        lng: \"121.3983016\"\n    }, {\n        id: 30,\n        name: \"\u745E\u82B3\u5340\",\n        lat: \"25.1030520\",\n        lng: \"121.8220980\"\n    }, {\n        id: 28,\n        name: \"\u6DF1\u5751\u5340\",\n        lat: \"25.0033792\",\n        lng: \"121.6169002\"\n    }, {\n        id: 51,\n        name: \"\u4E09\u829D\u5340\",\n        lat: \"25.2593452\",\n        lng: \"121.5024341\"\n    }, {\n        id: 20,\n        name: \"\u842C\u91CC\u5340\",\n        lat: \"25.1676024\",\n        lng: \"121.6397184\"\n    }, {\n        id: 21,\n        name: \"\u91D1\u5C71\u5340\",\n        lat: \"25.2223616\",\n        lng: \"121.6367773\"\n    }, {\n        id: 33,\n        name: \"\u8CA2\u5BEE\u5340\",\n        lat: \"25.0168762\",\n        lng: \"121.9459786\"\n    }, {\n        id: 52,\n        name: \"\u77F3\u9580\u5340\",\n        lat: \"25.2908277\",\n        lng: \"121.5671383\"\n    }, {\n        id: 32,\n        name: \"\u96D9\u6EAA\u5340\",\n        lat: \"24.9971842\",\n        lng: \"121.8220980\"\n    }, {\n        id: 29,\n        name: \"\u77F3\u7887\u5340\",\n        lat: \"25.0098662\",\n        lng: \"121.6452827\"\n    }, {\n        id: 35,\n        name: \"\u576A\u6797\u5340\",\n        lat: \"24.9350844\",\n        lng: \"121.7107613\"\n    }, {\n        id: 36,\n        name: \"\u70CF\u4F86\u5340\",\n        lat: \"24.8663721\",\n        lng: \"121.5497801\"\n    }, {\n        id: 31,\n        name: \"\u5E73\u6EAA\u5340\",\n        lat: \"25.0248314\",\n        lng: \"121.7408654\"\n    }]\n}, {\n    id: 4,\n    child: [{\n        id: 371,\n        name: \"\u6771\u5340\",\n        lat: \"24.8015877\",\n        lng: \"120.9715883\"\n    }, {\n        id: 372,\n        name: \"\u5317\u5340\",\n        lat: \"24.8042436\",\n        lng: \"120.9661470\"\n    }, {\n        id: 370,\n        name: \"\u9999\u5C71\u5340\",\n        lat: \"24.7798216\",\n        lng: \"120.9302603\"\n    }]\n}, {\n    id: 5,\n    child: [{\n        id: 54,\n        name: \"\u7AF9\u5317\u5E02\",\n        lat: \"24.8346871\",\n        lng: \"120.9933678\"\n    }, {\n        id: 61,\n        name: \"\u7AF9\u6771\u93AE\",\n        lat: \"24.7749220\",\n        lng: \"121.0449768\"\n    }, {\n        id: 55,\n        name: \"\u6E56\u53E3\u9109\",\n        lat: \"24.8814458\",\n        lng: \"121.0449768\"\n    }, {\n        id: 56,\n        name: \"\u65B0\u8C50\u9109\",\n        lat: \"24.9132859\",\n        lng: \"120.9991032\"\n    }, {\n        id: 57,\n        name: \"\u65B0\u57D4\u93AE\",\n        lat: \"24.8496061\",\n        lng: \"121.0908329\"\n    }, {\n        id: 58,\n        name: \"\u95DC\u897F\u93AE\",\n        lat: \"24.8044851\",\n        lng: \"121.1481284\"\n    }, {\n        id: 59,\n        name: \"\u828E\u6797\u9109\",\n        lat: \"24.7657920\",\n        lng: \"121.1080244\"\n    }, {\n        id: 60,\n        name: \"\u5BF6\u5C71\u9109\",\n        lat: \"24.7427912\",\n        lng: \"120.9991032\"\n    }, {\n        id: 63,\n        name: \"\u6A6B\u5C71\u9109\",\n        lat: \"24.7113011\",\n        lng: \"121.1366715\"\n    }, {\n        id: 64,\n        name: \"\u5C16\u77F3\u9109\",\n        lat: \"24.5760667\",\n        lng: \"121.3084088\"\n    }, {\n        id: 65,\n        name: \"\u5317\u57D4\u9109\",\n        lat: \"24.6631393\",\n        lng: \"121.0679070\"\n    }, {\n        id: 66,\n        name: \"\u5CE8\u5D4B\u9109\",\n        lat: \"24.6783629\",\n        lng: \"120.9851227\"\n    }, {\n        id: 62,\n        name: \"\u4E94\u5CF0\u9109\",\n        lat: \"24.5915441\",\n        lng: \"121.1481284\"\n    }]\n}, {\n    id: 6,\n    child: [{\n        id: 73,\n        name: \"\u6843\u5712\u5340\",\n        lat: \"24.9553806\",\n        lng: \"121.2300015\"\n    }, {\n        id: 67,\n        name: \"\u4E2D\u58E2\u5340\",\n        lat: \"24.9721514\",\n        lng: \"121.2053963\"\n    }, {\n        id: 68,\n        name: \"\u5E73\u93AE\u5340\",\n        lat: \"24.9296022\",\n        lng: \"121.2053963\"\n    }, {\n        id: 75,\n        name: \"\u516B\u5FB7\u5340\",\n        lat: \"24.9469059\",\n        lng: \"121.2912463\"\n    }, {\n        id: 70,\n        name: \"\u694A\u6885\u5340\",\n        lat: \"24.9242108\",\n        lng: \"121.1366715\"\n    }, {\n        id: 74,\n        name: \"\u9F9C\u5C71\u5340\",\n        lat: \"25.0199092\",\n        lng: \"121.3655989\"\n    }, {\n        id: 79,\n        name: \"\u8606\u7AF9\u5340\",\n        lat: \"25.0784359\",\n        lng: \"121.2969674\"\n    }, {\n        id: 69,\n        name: \"\u9F8D\u6F6D\u5340\",\n        lat: \"24.8444927\",\n        lng: \"121.2053963\"\n    }, {\n        id: 76,\n        name: \"\u5927\u6EAA\u5340\",\n        lat: \"24.8658422\",\n        lng: \"121.2969674\"\n    }, {\n        id: 78,\n        name: \"\u5927\u5712\u5340\",\n        lat: \"25.0492632\",\n        lng: \"121.1939450\"\n    }, {\n        id: 72,\n        name: \"\u89C0\u97F3\u5340\",\n        lat: \"25.0359365\",\n        lng: \"121.1137544\"\n    }, {\n        id: 71,\n        name: \"\u65B0\u5C4B\u5340\",\n        lat: \"24.9826597\",\n        lng: \"121.0679070\"\n    }, {\n        id: 77,\n        name: \"\u5FA9\u8208\u5340\",\n        lat: \"24.7090890\",\n        lng: \"121.3770336\"\n    }]\n}, {\n    id: 7,\n    child: [{\n        id: 81,\n        name: \"\u982D\u4EFD\u5E02\",\n        lat: \"24.6884438\",\n        lng: \"120.9024836\"\n    }, {\n        id: 80,\n        name: \"\u7AF9\u5357\u93AE\",\n        lat: \"24.7009219\",\n        lng: \"120.8786026\"\n    }, {\n        id: 88,\n        name: \"\u82D7\u6817\u5E02\",\n        lat: \"24.5711502\",\n        lng: \"120.8154358\"\n    }, {\n        id: 87,\n        name: \"\u82D1\u88E1\u93AE\",\n        lat: \"24.4098262\",\n        lng: \"120.6775054\"\n    }, {\n        id: 85,\n        name: \"\u5F8C\u9F8D\u93AE\",\n        lat: \"24.6144348\",\n        lng: \"120.7906035\"\n    }, {\n        id: 86,\n        name: \"\u901A\u9704\u93AE\",\n        lat: \"24.4892617\",\n        lng: \"120.6803783\"\n    }, {\n        id: 91,\n        name: \"\u516C\u9928\u9109\",\n        lat: \"24.5111399\",\n        lng: \"120.8211796\"\n    }, {\n        id: 94,\n        name: \"\u9285\u947C\u9109\",\n        lat: \"24.4481942\",\n        lng: \"120.7924580\"\n    }, {\n        id: 97,\n        name: \"\u5353\u862D\u93AE\",\n        lat: \"24.3113039\",\n        lng: \"120.8254872\"\n    }, {\n        id: 95,\n        name: \"\u4E09\u7FA9\u9109\",\n        lat: \"24.3892633\",\n        lng: \"120.7694760\"\n    }, {\n        id: 92,\n        name: \"\u5927\u6E56\u9109\",\n        lat: \"24.3980966\",\n        lng: \"120.8728615\"\n    }, {\n        id: 89,\n        name: \"\u9020\u6A4B\u9109\",\n        lat: \"24.6248068\",\n        lng: \"120.8613785\"\n    }, {\n        id: 90,\n        name: \"\u982D\u5C4B\u9109\",\n        lat: \"24.5765856\",\n        lng: \"120.8545433\"\n    }, {\n        id: 83,\n        name: \"\u5357\u5E84\u9109\",\n        lat: \"24.5802942\",\n        lng: \"121.0105733\"\n    }, {\n        id: 96,\n        name: \"\u897F\u6E56\u9109\",\n        lat: \"24.5567613\",\n        lng: \"120.7570814\"\n    }, {\n        id: 82,\n        name: \"\u4E09\u7063\u9109\",\n        lat: \"24.6305288\",\n        lng: \"120.9302603\"\n    }, {\n        id: 93,\n        name: \"\u6CF0\u5B89\u9109\",\n        lat: \"24.3831955\",\n        lng: \"121.0335100\"\n    }, {\n        id: 84,\n        name: \"\u7345\u6F6D\u9109\",\n        lat: \"24.5238661\",\n        lng: \"120.9302603\"\n    }]\n}, {\n    id: 8,\n    child: [{\n        id: 103,\n        name: \"\u5317\u5C6F\u5340\",\n        lat: \"24.1815237\",\n        lng: \"120.6861019\"\n    }, {\n        id: 104,\n        name: \"\u897F\u5C6F\u5340\",\n        lat: \"24.1769764\",\n        lng: \"120.6424333\"\n    }, {\n        id: 107,\n        name: \"\u5927\u91CC\u5340\",\n        lat: \"24.1046899\",\n        lng: \"120.6812114\"\n    }, {\n        id: 106,\n        name: \"\u592A\u5E73\u5340\",\n        lat: \"24.1240719\",\n        lng: \"120.7170701\"\n    }, {\n        id: 105,\n        name: \"\u5357\u5C6F\u5340\",\n        lat: \"24.1471183\",\n        lng: \"120.6084832\"\n    }, {\n        id: 110,\n        name: \"\u8C50\u539F\u5340\",\n        lat: \"24.2521213\",\n        lng: \"120.7234816\"\n    }, {\n        id: 102,\n        name: \"\u5317\u5340\",\n        lat: \"24.1573171\",\n        lng: \"120.6832556\"\n    }, {\n        id: 100,\n        name: \"\u5357\u5340\",\n        lat: \"24.1208445\",\n        lng: \"120.6624117\"\n    }, {\n        id: 101,\n        name: \"\u897F\u5340\",\n        lat: \"24.1430604\",\n        lng: \"120.6631289\"\n    }, {\n        id: 116,\n        name: \"\u6F6D\u5B50\u5340\",\n        lat: \"24.2163612\",\n        lng: \"120.7062535\"\n    }, {\n        id: 120,\n        name: \"\u6C99\u9E7F\u5340\",\n        lat: \"24.2377939\",\n        lng: \"120.5854674\"\n    }, {\n        id: 117,\n        name: \"\u5927\u96C5\u5340\",\n        lat: \"24.2225023\",\n        lng: \"120.6545022\"\n    }, {\n        id: 123,\n        name: \"\u6E05\u6C34\u5340\",\n        lat: \"24.2754785\",\n        lng: \"120.5713280\"\n    }, {\n        id: 109,\n        name: \"\u70CF\u65E5\u5340\",\n        lat: \"24.1077870\",\n        lng: \"120.6380936\"\n    }, {\n        id: 121,\n        name: \"\u9F8D\u4E95\u5340\",\n        lat: \"24.2101223\",\n        lng: \"120.5057794\"\n    }, {\n        id: 99,\n        name: \"\u6771\u5340\",\n        lat: \"24.1427702\",\n        lng: \"120.6944233\"\n    }, {\n        id: 124,\n        name: \"\u5927\u7532\u5340\",\n        lat: \"24.3788233\",\n        lng: \"120.6487508\"\n    }, {\n        id: 118,\n        name: \"\u795E\u5CA1\u5340\",\n        lat: \"24.2499057\",\n        lng: \"120.6817589\"\n    }, {\n        id: 108,\n        name: \"\u9727\u5CF0\u5340\",\n        lat: \"24.0443180\",\n        lng: \"120.7350013\"\n    }, {\n        id: 122,\n        name: \"\u68A7\u68F2\u5340\",\n        lat: \"24.2490793\",\n        lng: \"120.5386546\"\n    }, {\n        id: 119,\n        name: \"\u5927\u809A\u5340\",\n        lat: \"24.1358732\",\n        lng: \"120.5624474\"\n    }, {\n        id: 111,\n        name: \"\u540E\u91CC\u5340\",\n        lat: \"24.3088765\",\n        lng: \"120.7223705\"\n    }, {\n        id: 113,\n        name: \"\u6771\u52E2\u5340\",\n        lat: \"24.2599898\",\n        lng: \"120.8272085\"\n    }, {\n        id: 125,\n        name: \"\u5916\u57D4\u5340\",\n        lat: \"24.3317733\",\n        lng: \"120.6533224\"\n    }, {\n        id: 115,\n        name: \"\u65B0\u793E\u5340\",\n        lat: \"24.1867194\",\n        lng: \"120.8154358\"\n    }, {\n        id: 126,\n        name: \"\u5927\u5B89\u5340\",\n        lat: \"24.3702355\",\n        lng: \"120.5912217\"\n    }, {\n        id: 98,\n        name: \"\u4E2D\u5340\",\n        lat: \"24.1402601\",\n        lng: \"120.6818181\"\n    }, {\n        id: 112,\n        name: \"\u77F3\u5CA1\u5340\",\n        lat: \"24.2742426\",\n        lng: \"120.7771553\"\n    }, {\n        id: 114,\n        name: \"\u548C\u5E73\u5340\",\n        lat: \"24.3207261\",\n        lng: \"121.3084088\"\n    }]\n}, {\n    id: 10,\n    child: [{\n        id: 127,\n        name: \"\u5F70\u5316\u5E02\",\n        lat: \"24.0716583\",\n        lng: \"120.5624474\"\n    }, {\n        id: 136,\n        name: \"\u54E1\u6797\u5E02\",\n        lat: \"23.9595740\",\n        lng: \"120.5854674\"\n    }, {\n        id: 134,\n        name: \"\u548C\u7F8E\u93AE\",\n        lat: \"24.1122859\",\n        lng: \"120.4983956\"\n    }, {\n        id: 131,\n        name: \"\u9E7F\u6E2F\u93AE\",\n        lat: \"24.0755127\",\n        lng: \"120.4472850\"\n    }, {\n        id: 140,\n        name: \"\u6EAA\u6E56\u93AE\",\n        lat: \"23.9583265\",\n        lng: \"120.4933624\"\n    }, {\n        id: 149,\n        name: \"\u4E8C\u6797\u93AE\",\n        lat: \"23.9141358\",\n        lng: \"120.4011911\"\n    }, {\n        id: 132,\n        name: \"\u798F\u8208\u9109\",\n        lat: \"24.0377011\",\n        lng: \"120.4242401\"\n    }, {\n        id: 129,\n        name: \"\u82B1\u58C7\u9109\",\n        lat: \"24.0288453\",\n        lng: \"120.5624474\"\n    }, {\n        id: 137,\n        name: \"\u793E\u982D\u9109\",\n        lat: \"23.8992037\",\n        lng: \"120.5827201\"\n    }, {\n        id: 141,\n        name: \"\u5927\u6751\u9109\",\n        lat: \"23.9890696\",\n        lng: \"120.5662224\"\n    }, {\n        id: 143,\n        name: \"\u7530\u4E2D\u93AE\",\n        lat: \"23.8525401\",\n        lng: \"120.5854674\"\n    }, {\n        id: 135,\n        name: \"\u4F38\u6E2F\u9109\",\n        lat: \"24.1581740\",\n        lng: \"120.4982653\"\n    }, {\n        id: 130,\n        name: \"\u79C0\u6C34\u9109\",\n        lat: \"24.0348603\",\n        lng: \"120.5106372\"\n    }, {\n        id: 138,\n        name: \"\u6C38\u9756\u9109\",\n        lat: \"23.9202279\",\n        lng: \"120.5451797\"\n    }, {\n        id: 139,\n        name: \"\u57D4\u5FC3\u9109\",\n        lat: \"23.9430014\",\n        lng: \"120.5592918\"\n    }, {\n        id: 144,\n        name: \"\u5317\u6597\u93AE\",\n        lat: \"23.8692080\",\n        lng: \"120.5336665\"\n    }, {\n        id: 151,\n        name: \"\u82B3\u82D1\u9109\",\n        lat: \"23.9455949\",\n        lng: \"120.3550808\"\n    }, {\n        id: 142,\n        name: \"\u57D4\u9E7D\u9109\",\n        lat: \"23.9898141\",\n        lng: \"120.4472850\"\n    }, {\n        id: 146,\n        name: \"\u57E4\u982D\u9109\",\n        lat: \"23.8776623\",\n        lng: \"120.4703258\"\n    }, {\n        id: 147,\n        name: \"\u6EAA\u5DDE\u9109\",\n        lat: \"23.8247844\",\n        lng: \"120.5163949\"\n    }, {\n        id: 145,\n        name: \"\u7530\u5C3E\u9109\",\n        lat: \"23.9038461\",\n        lng: \"120.5221524\"\n    }, {\n        id: 128,\n        name: \"\u82AC\u5712\u9109\",\n        lat: \"24.0135640\",\n        lng: \"120.6284031\"\n    }, {\n        id: 133,\n        name: \"\u7DDA\u897F\u9109\",\n        lat: \"24.1316695\",\n        lng: \"120.4622016\"\n    }, {\n        id: 150,\n        name: \"\u5927\u57CE\u9109\",\n        lat: \"23.8483614\",\n        lng: \"120.3089541\"\n    }, {\n        id: 148,\n        name: \"\u7AF9\u5858\u9109\",\n        lat: \"23.8448257\",\n        lng: \"120.4242401\"\n    }, {\n        id: 152,\n        name: \"\u4E8C\u6C34\u9109\",\n        lat: \"23.8115197\",\n        lng: \"120.6160709\"\n    }]\n}, {\n    id: 11,\n    child: [{\n        id: 153,\n        name: \"\u5357\u6295\u5E02\",\n        lat: \"23.9179637\",\n        lng: \"120.6775054\"\n    }, {\n        id: 155,\n        name: \"\u8349\u5C6F\u93AE\",\n        lat: \"23.9933816\",\n        lng: \"120.7234992\"\n    }, {\n        id: 157,\n        name: \"\u57D4\u91CC\u93AE\",\n        lat: \"23.9932872\",\n        lng: \"120.9646866\"\n    }, {\n        id: 164,\n        name: \"\u7AF9\u5C71\u93AE\",\n        lat: \"23.7122010\",\n        lng: \"120.6890055\"\n    }, {\n        id: 159,\n        name: \"\u540D\u9593\u9109\",\n        lat: \"23.8537843\",\n        lng: \"120.6775054\"\n    }, {\n        id: 156,\n        name: \"\u570B\u59D3\u9109\",\n        lat: \"24.0564429\",\n        lng: \"120.8728615\"\n    }, {\n        id: 165,\n        name: \"\u9E7F\u8C37\u9109\",\n        lat: \"23.7348372\",\n        lng: \"120.7809676\"\n    }, {\n        id: 161,\n        name: \"\u6C34\u91CC\u9109\",\n        lat: \"23.7919524\",\n        lng: \"120.8613785\"\n    }, {\n        id: 158,\n        name: \"\u4EC1\u611B\u9109\",\n        lat: \"24.0213745\",\n        lng: \"121.1252135\"\n    }, {\n        id: 163,\n        name: \"\u4FE1\u7FA9\u9109\",\n        lat: \"23.6679756\",\n        lng: \"120.9876321\"\n    }, {\n        id: 162,\n        name: \"\u9B5A\u6C60\u9109\",\n        lat: \"23.8753852\",\n        lng: \"120.9187827\"\n    }, {\n        id: 154,\n        name: \"\u4E2D\u5BEE\u9109\",\n        lat: \"23.9058666\",\n        lng: \"120.7809676\"\n    }, {\n        id: 160,\n        name: \"\u96C6\u96C6\u93AE\",\n        lat: \"23.8335746\",\n        lng: \"120.7694760\"\n    }]\n}, {\n    id: 12,\n    child: [{\n        id: 373,\n        name: \"\u897F\u5340\",\n        lat: \"23.4803991\",\n        lng: \"120.4242406\"\n    }, {\n        id: 374,\n        name: \"\u6771\u5340\",\n        lat: \"23.4856561\",\n        lng: \"120.4545451\"\n    }]\n}, {\n    id: 13,\n    child: [{\n        id: 180,\n        name: \"\u6C11\u96C4\u9109\",\n        lat: \"23.5203579\",\n        lng: \"120.4404090\"\n    }, {\n        id: 173,\n        name: \"\u6C34\u4E0A\u9109\",\n        lat: \"23.4287422\",\n        lng: \"120.4001659\"\n    }, {\n        id: 171,\n        name: \"\u4E2D\u57D4\u9109\",\n        lat: \"23.3995944\",\n        lng: \"120.5509358\"\n    }, {\n        id: 176,\n        name: \"\u6734\u5B50\u5E02\",\n        lat: \"23.4464152\",\n        lng: \"120.2570421\"\n    }, {\n        id: 175,\n        name: \"\u592A\u4FDD\u5E02\",\n        lat: \"23.4964492\",\n        lng: \"120.3837086\"\n    }, {\n        id: 169,\n        name: \"\u7AF9\u5D0E\u9109\",\n        lat: \"23.5049724\",\n        lng: \"120.6084832\"\n    }, {\n        id: 179,\n        name: \"\u65B0\u6E2F\u9109\",\n        lat: \"23.5381230\",\n        lng: \"120.3550808\"\n    }, {\n        id: 181,\n        name: \"\u5927\u6797\u93AE\",\n        lat: \"23.6040709\",\n        lng: \"120.4542004\"\n    }, {\n        id: 184,\n        name: \"\u5E03\u888B\u93AE\",\n        lat: \"23.3627901\",\n        lng: \"120.1704766\"\n    }, {\n        id: 177,\n        name: \"\u6771\u77F3\u9109\",\n        lat: \"23.4701923\",\n        lng: \"120.1704766\"\n    }, {\n        id: 178,\n        name: \"\u516D\u8173\u9109\",\n        lat: \"23.5298330\",\n        lng: \"120.2873266\"\n    }, {\n        id: 168,\n        name: \"\u6885\u5C71\u9109\",\n        lat: \"23.5410247\",\n        lng: \"120.6890055\"\n    }, {\n        id: 183,\n        name: \"\u7FA9\u7AF9\u9109\",\n        lat: \"23.3530108\",\n        lng: \"120.2166519\"\n    }, {\n        id: 174,\n        name: \"\u9E7F\u8349\u9109\",\n        lat: \"23.4192570\",\n        lng: \"120.3089541\"\n    }, {\n        id: 182,\n        name: \"\u6EAA\u53E3\u9109\",\n        lat: \"23.5925564\",\n        lng: \"120.4011911\"\n    }, {\n        id: 167,\n        name: \"\u756A\u8DEF\u9109\",\n        lat: \"23.4407355\",\n        lng: \"120.6084832\"\n    }, {\n        id: 170,\n        name: \"\u963F\u91CC\u5C71\u9109\",\n        lat: \"23.4354677\",\n        lng: \"120.7809676\"\n    }, {\n        id: 172,\n        name: \"\u5927\u57D4\u9109\",\n        lat: \"23.3040182\",\n        lng: \"120.5969758\"\n    }]\n}, {\n    id: 14,\n    child: [{\n        id: 194,\n        name: \"\u6597\u516D\u5E02\",\n        lat: \"23.7077947\",\n        lng: \"120.5409089\"\n    }, {\n        id: 187,\n        name: \"\u864E\u5C3E\u93AE\",\n        lat: \"23.7162184\",\n        lng: \"120.4242401\"\n    }, {\n        id: 193,\n        name: \"\u9EA5\u5BEE\u9109\",\n        lat: \"23.7485306\",\n        lng: \"120.2562662\"\n    }, {\n        id: 198,\n        name: \"\u897F\u87BA\u93AE\",\n        lat: \"23.7755286\",\n        lng: \"120.4472850\"\n    }, {\n        id: 185,\n        name: \"\u6597\u5357\u93AE\",\n        lat: \"23.6771369\",\n        lng: \"120.4760808\"\n    }, {\n        id: 200,\n        name: \"\u5317\u6E2F\u93AE\",\n        lat: \"23.5958633\",\n        lng: \"120.2858846\"\n    }, {\n        id: 196,\n        name: \"\u53E4\u5751\u9109\",\n        lat: \"23.6466411\",\n        lng: \"120.5969758\"\n    }, {\n        id: 188,\n        name: \"\u571F\u5EAB\u93AE\",\n        lat: \"23.6882639\",\n        lng: \"120.3550808\"\n    }, {\n        id: 197,\n        name: \"\u83BF\u6850\u9109\",\n        lat: \"23.7554232\",\n        lng: \"120.4967222\"\n    }, {\n        id: 202,\n        name: \"\u53E3\u6E56\u9109\",\n        lat: \"23.5775853\",\n        lng: \"120.1704766\"\n    }, {\n        id: 199,\n        name: \"\u4E8C\u5D19\u9109\",\n        lat: \"23.8155793\",\n        lng: \"120.4062196\"\n    }, {\n        id: 204,\n        name: \"\u5143\u9577\u9109\",\n        lat: \"23.6288771\",\n        lng: \"120.3320195\"\n    }, {\n        id: 192,\n        name: \"\u5D19\u80CC\u9109\",\n        lat: \"23.7601594\",\n        lng: \"120.3531749\"\n    }, {\n        id: 201,\n        name: \"\u6C34\u6797\u9109\",\n        lat: \"23.5628088\",\n        lng: \"120.2397336\"\n    }, {\n        id: 191,\n        name: \"\u81FA\u897F\u9109\",\n        lat: \"23.7229714\",\n        lng: \"120.1935663\"\n    }, {\n        id: 203,\n        name: \"\u56DB\u6E56\u9109\",\n        lat: \"23.6370834\",\n        lng: \"120.1935663\"\n    }, {\n        id: 186,\n        name: \"\u5927\u57E4\u9109\",\n        lat: \"23.6519084\",\n        lng: \"120.4242401\"\n    }, {\n        id: 195,\n        name: \"\u6797\u5167\u9109\",\n        lat: \"23.7618842\",\n        lng: \"120.6084832\"\n    }, {\n        id: 190,\n        name: \"\u6771\u52E2\u9109\",\n        lat: \"23.6932570\",\n        lng: \"120.2570421\"\n    }, {\n        id: 189,\n        name: \"\u8912\u5FE0\u9109\",\n        lat: \"23.6944368\",\n        lng: \"120.3103204\"\n    }]\n}, {\n    id: 15,\n    child: [{\n        id: 212,\n        name: \"\u6C38\u5EB7\u5340\",\n        lat: \"23.0211799\",\n        lng: \"120.2627880\"\n    }, {\n        id: 211,\n        name: \"\u5B89\u5357\u5340\",\n        lat: \"23.0585336\",\n        lng: \"120.1358346\"\n    }, {\n        id: 206,\n        name: \"\u6771\u5340\",\n        lat: \"22.9813300\",\n        lng: \"120.2224227\"\n    }, {\n        id: 209,\n        name: \"\u5317\u5340\",\n        lat: \"23.0085150\",\n        lng: \"120.2079953\"\n    }, {\n        id: 207,\n        name: \"\u5357\u5340\",\n        lat: \"22.9563522\",\n        lng: \"120.1877943\"\n    }, {\n        id: 208,\n        name: \"\u4E2D\u897F\u5340\",\n        lat: \"22.9948212\",\n        lng: \"120.1964522\"\n    }, {\n        id: 219,\n        name: \"\u4EC1\u5FB7\u5340\",\n        lat: \"22.9472553\",\n        lng: \"120.2511778\"\n    }, {\n        id: 230,\n        name: \"\u65B0\u71DF\u5340\",\n        lat: \"23.3119567\",\n        lng: \"120.3089541\"\n    }, {\n        id: 210,\n        name: \"\u5B89\u5E73\u5340\",\n        lat: \"22.9934184\",\n        lng: \"120.1647112\"\n    }, {\n        id: 213,\n        name: \"\u6B78\u4EC1\u5340\",\n        lat: \"22.9519268\",\n        lng: \"120.2858846\"\n    }, {\n        id: 224,\n        name: \"\u4F73\u91CC\u5340\",\n        lat: \"23.1694465\",\n        lng: \"120.1704766\"\n    }, {\n        id: 238,\n        name: \"\u5584\u5316\u5340\",\n        lat: \"23.1402613\",\n        lng: \"120.3089541\"\n    }, {\n        id: 223,\n        name: \"\u9EBB\u8C46\u5340\",\n        lat: \"23.1763401\",\n        lng: \"120.2397336\"\n    }, {\n        id: 214,\n        name: \"\u65B0\u5316\u5340\",\n        lat: \"23.0280873\",\n        lng: \"120.3320195\"\n    }, {\n        id: 241,\n        name: \"\u65B0\u5E02\u5340\",\n        lat: \"23.0780281\",\n        lng: \"120.2919179\"\n    }, {\n        id: 220,\n        name: \"\u95DC\u5EDF\u5340\",\n        lat: \"22.9637053\",\n        lng: \"120.3320195\"\n    }, {\n        id: 242,\n        name: \"\u5B89\u5B9A\u5340\",\n        lat: \"23.0907920\",\n        lng: \"120.2334385\"\n    }, {\n        id: 232,\n        name: \"\u767D\u6CB3\u5340\",\n        lat: \"23.3336369\",\n        lng: \"120.4588059\"\n    }, {\n        id: 225,\n        name: \"\u897F\u6E2F\u5340\",\n        lat: \"23.1257853\",\n        lng: \"120.1993381\"\n    }, {\n        id: 228,\n        name: \"\u5B78\u7532\u5340\",\n        lat: \"23.2553798\",\n        lng: \"120.1704766\"\n    }, {\n        id: 237,\n        name: \"\u9E7D\u6C34\u5340\",\n        lat: \"23.2622306\",\n        lng: \"120.2397336\"\n    }, {\n        id: 235,\n        name: \"\u4E0B\u71DF\u5340\",\n        lat: \"23.2292915\",\n        lng: \"120.2685799\"\n    }, {\n        id: 231,\n        name: \"\u5F8C\u58C1\u5340\",\n        lat: \"23.3665101\",\n        lng: \"120.3550808\"\n    }, {\n        id: 234,\n        name: \"\u516D\u7532\u5340\",\n        lat: \"23.2426813\",\n        lng: \"120.3320195\"\n    }, {\n        id: 226,\n        name: \"\u4E03\u80A1\u5340\",\n        lat: \"23.1195166\",\n        lng: \"120.1011836\"\n    }, {\n        id: 222,\n        name: \"\u5B98\u7530\u5340\",\n        lat: \"23.1948768\",\n        lng: \"120.3550808\"\n    }, {\n        id: 236,\n        name: \"\u67F3\u71DF\u5340\",\n        lat: \"23.2806957\",\n        lng: \"120.3550808\"\n    }, {\n        id: 233,\n        name: \"\u6771\u5C71\u5340\",\n        lat: \"23.2825014\",\n        lng: \"120.4472850\"\n    }, {\n        id: 227,\n        name: \"\u5C07\u8ECD\u5340\",\n        lat: \"23.2054945\",\n        lng: \"120.1011836\"\n    }, {\n        id: 216,\n        name: \"\u7389\u4E95\u5340\",\n        lat: \"23.1060822\",\n        lng: \"120.4703258\"\n    }, {\n        id: 229,\n        name: \"\u5317\u9580\u5340\",\n        lat: \"23.2866026\",\n        lng: \"120.1242853\"\n    }, {\n        id: 239,\n        name: \"\u5927\u5167\u5340\",\n        lat: \"23.1421962\",\n        lng: \"120.4011911\"\n    }, {\n        id: 217,\n        name: \"\u6960\u897F\u5340\",\n        lat: \"23.1820152\",\n        lng: \"120.5163949\"\n    }, {\n        id: 218,\n        name: \"\u5357\u5316\u5340\",\n        lat: \"23.1079133\",\n        lng: \"120.5624474\"\n    }, {\n        id: 240,\n        name: \"\u5C71\u4E0A\u5340\",\n        lat: \"23.0893067\",\n        lng: \"120.3723741\"\n    }, {\n        id: 215,\n        name: \"\u5DE6\u93AE\u5340\",\n        lat: \"23.0300785\",\n        lng: \"120.4242401\"\n    }, {\n        id: 221,\n        name: \"\u9F8D\u5D0E\u5340\",\n        lat: \"22.9540045\",\n        lng: \"120.3781380\"\n    }]\n}, {\n    id: 17,\n    child: [{\n        id: 268,\n        name: \"\u9CF3\u5C71\u5340\",\n        lat: \"22.6113591\",\n        lng: \"120.3493158\"\n    }, {\n        id: 250,\n        name: \"\u4E09\u6C11\u5340\",\n        lat: \"22.6483444\",\n        lng: \"120.3262535\"\n    }, {\n        id: 253,\n        name: \"\u5DE6\u71DF\u5340\",\n        lat: \"22.6877358\",\n        lng: \"120.2916524\"\n    }, {\n        id: 251,\n        name: \"\u6960\u6893\u5340\",\n        lat: \"22.7175372\",\n        lng: \"120.3031871\"\n    }, {\n        id: 249,\n        name: \"\u524D\u93AE\u5340\",\n        lat: \"22.5970794\",\n        lng: \"120.3147208\"\n    }, {\n        id: 245,\n        name: \"\u82D3\u96C5\u5340\",\n        lat: \"22.6268814\",\n        lng: \"120.3262535\"\n    }, {\n        id: 252,\n        name: \"\u5C0F\u6E2F\u5340\",\n        lat: \"22.5553185\",\n        lng: \"120.3608455\"\n    }, {\n        id: 247,\n        name: \"\u9F13\u5C71\u5340\",\n        lat: \"22.6495866\",\n        lng: \"120.2685799\"\n    }, {\n        id: 269,\n        name: \"\u5927\u5BEE\u5340\",\n        lat: \"22.5844810\",\n        lng: \"120.4011911\"\n    }, {\n        id: 254,\n        name: \"\u4EC1\u6B66\u5340\",\n        lat: \"22.7057951\",\n        lng: \"120.3423604\"\n    }, {\n        id: 258,\n        name: \"\u5CA1\u5C71\u5340\",\n        lat: \"22.8016472\",\n        lng: \"120.2858846\"\n    }, {\n        id: 270,\n        name: \"\u6797\u5712\u5340\",\n        lat: \"22.4986756\",\n        lng: \"120.4011911\"\n    }, {\n        id: 259,\n        name: \"\u8DEF\u7AF9\u5340\",\n        lat: \"22.8494042\",\n        lng: \"120.2628111\"\n    }, {\n        id: 243,\n        name: \"\u65B0\u8208\u5340\",\n        lat: \"22.6283893\",\n        lng: \"120.3060706\"\n    }, {\n        id: 271,\n        name: \"\u9CE5\u677E\u5340\",\n        lat: \"22.6602052\",\n        lng: \"120.3723741\"\n    }, {\n        id: 263,\n        name: \"\u6A4B\u982D\u5340\",\n        lat: \"22.7539031\",\n        lng: \"120.3089574\"\n    }, {\n        id: 272,\n        name: \"\u5927\u6A39\u5340\",\n        lat: \"22.7083710\",\n        lng: \"120.4242401\"\n    }, {\n        id: 274,\n        name: \"\u7F8E\u6FC3\u5340\",\n        lat: \"22.8853850\",\n        lng: \"120.5509358\"\n    }, {\n        id: 264,\n        name: \"\u6893\u5B98\u5340\",\n        lat: \"22.7486104\",\n        lng: \"120.2570421\"\n    }, {\n        id: 273,\n        name: \"\u65D7\u5C71\u5340\",\n        lat: \"22.8702492\",\n        lng: \"120.4703258\"\n    }, {\n        id: 255,\n        name: \"\u5927\u793E\u5340\",\n        lat: \"22.7377083\",\n        lng: \"120.3608455\"\n    }, {\n        id: 267,\n        name: \"\u6E56\u5167\u5340\",\n        lat: \"22.8954184\",\n        lng: \"120.2224227\"\n    }, {\n        id: 282,\n        name: \"\u8304\u8423\u5340\",\n        lat: \"22.8763476\",\n        lng: \"120.2108809\"\n    }, {\n        id: 262,\n        name: \"\u71D5\u5DE2\u5340\",\n        lat: \"22.7823697\",\n        lng: \"120.3781380\"\n    }, {\n        id: 260,\n        name: \"\u963F\u84EE\u5340\",\n        lat: \"22.8778606\",\n        lng: \"120.3320195\"\n    }, {\n        id: 244,\n        name: \"\u524D\u91D1\u5340\",\n        lat: \"22.6252508\",\n        lng: \"120.2953492\"\n    }, {\n        id: 248,\n        name: \"\u65D7\u6D25\u5340\",\n        lat: \"22.6141771\",\n        lng: \"120.2659394\"\n    }, {\n        id: 246,\n        name: \"\u9E7D\u57D5\u5340\",\n        lat: \"22.6235157\",\n        lng: \"120.2837442\"\n    }, {\n        id: 265,\n        name: \"\u5F4C\u9640\u5340\",\n        lat: \"22.7832231\",\n        lng: \"120.2455033\"\n    }, {\n        id: 266,\n        name: \"\u6C38\u5B89\u5340\",\n        lat: \"22.8112691\",\n        lng: \"120.2397336\"\n    }, {\n        id: 276,\n        name: \"\u5167\u9580\u5340\",\n        lat: \"22.9560087\",\n        lng: \"120.4703258\"\n    }, {\n        id: 275,\n        name: \"\u516D\u9F9C\u5340\",\n        lat: \"23.0026195\",\n        lng: \"120.6545022\"\n    }, {\n        id: 277,\n        name: \"\u6749\u6797\u5340\",\n        lat: \"23.0007902\",\n        lng: \"120.5624474\"\n    }, {\n        id: 261,\n        name: \"\u7530\u5BEE\u5340\",\n        lat: \"22.8633474\",\n        lng: \"120.4011911\"\n    }, {\n        id: 278,\n        name: \"\u7532\u4ED9\u5340\",\n        lat: \"23.1145920\",\n        lng: \"120.6314948\"\n    }, {\n        id: 279,\n        name: \"\u6843\u6E90\u5340\",\n        lat: \"23.2280755\",\n        lng: \"120.8498944\"\n    }, {\n        id: 280,\n        name: \"\u90A3\u746A\u590F\u5340\",\n        lat: \"23.2742978\",\n        lng: \"120.7349950\"\n    }, {\n        id: 281,\n        name: \"\u8302\u6797\u5340\",\n        lat: \"22.9319405\",\n        lng: \"120.7349950\"\n    }]\n}, {\n    id: 19,\n    child: [{\n        id: 295,\n        name: \"\u5C4F\u6771\u5E02\",\n        lat: \"22.6558442\",\n        lng: \"120.4703258\"\n    }, {\n        id: 308,\n        name: \"\u6F6E\u5DDE\u93AE\",\n        lat: \"22.5294168\",\n        lng: \"120.5624474\"\n    }, {\n        id: 306,\n        name: \"\u5167\u57D4\u9109\",\n        lat: \"22.6151342\",\n        lng: \"120.5663201\"\n    }, {\n        id: 307,\n        name: \"\u842C\u4E39\u9109\",\n        lat: \"22.5915220\",\n        lng: \"120.4703258\"\n    }, {\n        id: 316,\n        name: \"\u6771\u6E2F\u93AE\",\n        lat: \"22.4628783\",\n        lng: \"120.4703258\"\n    }, {\n        id: 319,\n        name: \"\u65B0\u5712\u9109\",\n        lat: \"22.4774001\",\n        lng: \"120.4421540\"\n    }, {\n        id: 326,\n        name: \"\u6046\u6625\u93AE\",\n        lat: \"22.0008277\",\n        lng: \"120.7447638\"\n    }, {\n        id: 303,\n        name: \"\u9577\u6CBB\u9109\",\n        lat: \"22.7008280\",\n        lng: \"120.5624474\"\n    }, {\n        id: 300,\n        name: \"\u91CC\u6E2F\u9109\",\n        lat: \"22.7962363\",\n        lng: \"120.5163949\"\n    }, {\n        id: 302,\n        name: \"\u9E7D\u57D4\u9109\",\n        lat: \"22.7436807\",\n        lng: \"120.5624474\"\n    }, {\n        id: 320,\n        name: \"\u678B\u5BEE\u9109\",\n        lat: \"22.3960688\",\n        lng: \"120.5854674\"\n    }, {\n        id: 301,\n        name: \"\u9AD8\u6A39\u9109\",\n        lat: \"22.8254924\",\n        lng: \"120.6003824\"\n    }, {\n        id: 299,\n        name: \"\u4E5D\u5982\u9109\",\n        lat: \"22.7416068\",\n        lng: \"120.4703258\"\n    }, {\n        id: 311,\n        name: \"\u842C\u5DD2\u9109\",\n        lat: \"22.5840460\",\n        lng: \"120.6084832\"\n    }, {\n        id: 318,\n        name: \"\u4F73\u51AC\u9109\",\n        lat: \"22.4270780\",\n        lng: \"120.5394232\"\n    }, {\n        id: 315,\n        name: \"\u6797\u908A\u9109\",\n        lat: \"22.4347039\",\n        lng: \"120.5147274\"\n    }, {\n        id: 305,\n        name: \"\u7AF9\u7530\u9109\",\n        lat: \"22.5939138\",\n        lng: \"120.5326679\"\n    }, {\n        id: 312,\n        name: \"\u5D01\u9802\u9109\",\n        lat: \"22.5158427\",\n        lng: \"120.4991209\"\n    }, {\n        id: 317,\n        name: \"\u7409\u7403\u9109\",\n        lat: \"22.3535395\",\n        lng: \"120.3732108\"\n    }, {\n        id: 304,\n        name: \"\u9E9F\u6D1B\u9109\",\n        lat: \"22.6515201\",\n        lng: \"120.5259627\"\n    }, {\n        id: 314,\n        name: \"\u5357\u5DDE\u9109\",\n        lat: \"22.4747339\",\n        lng: \"120.5163949\"\n    }, {\n        id: 313,\n        name: \"\u65B0\u57E4\u9109\",\n        lat: \"22.4817586\",\n        lng: \"120.5854674\"\n    }, {\n        id: 324,\n        name: \"\u8ECA\u57CE\u9109\",\n        lat: \"22.0843074\",\n        lng: \"120.7464897\"\n    }, {\n        id: 296,\n        name: \"\u4E09\u5730\u9580\u9109\",\n        lat: \"22.8133088\",\n        lng: \"120.6890055\"\n    }, {\n        id: 310,\n        name: \"\u4F86\u7FA9\u9109\",\n        lat: \"22.4921661\",\n        lng: \"120.6247208\"\n    }, {\n        id: 327,\n        name: \"\u6EFF\u5DDE\u9109\",\n        lat: \"22.0438500\",\n        lng: \"120.8384093\"\n    }, {\n        id: 298,\n        name: \"\u746A\u5BB6\u9109\",\n        lat: \"22.6903584\",\n        lng: \"120.6378794\"\n    }, {\n        id: 309,\n        name: \"\u6CF0\u6B66\u9109\",\n        lat: \"22.5779544\",\n        lng: \"120.6348032\"\n    }, {\n        id: 321,\n        name: \"\u678B\u5C71\u9109\",\n        lat: \"22.2606439\",\n        lng: \"120.6573779\"\n    }, {\n        id: 322,\n        name: \"\u6625\u65E5\u9109\",\n        lat: \"22.3851778\",\n        lng: \"120.6890055\"\n    }, {\n        id: 323,\n        name: \"\u7345\u5B50\u9109\",\n        lat: \"22.2471686\",\n        lng: \"120.7349950\"\n    }, {\n        id: 325,\n        name: \"\u7261\u4E39\u9109\",\n        lat: \"22.1520217\",\n        lng: \"120.7809676\"\n    }, {\n        id: 297,\n        name: \"\u9727\u81FA\u9109\",\n        lat: \"22.7509887\",\n        lng: \"120.7809676\"\n    }]\n}, {\n    id: 21,\n    child: [{\n        id: 328,\n        name: \"\u5B9C\u862D\u5E02\",\n        lat: \"24.7591148\",\n        lng: \"121.7537404\"\n    }, {\n        id: 333,\n        name: \"\u7F85\u6771\u93AE\",\n        lat: \"24.6755872\",\n        lng: \"121.7708250\"\n    }, {\n        id: 337,\n        name: \"\u51AC\u5C71\u9109\",\n        lat: \"24.6319190\",\n        lng: \"121.7537404\"\n    }, {\n        id: 336,\n        name: \"\u4E94\u7D50\u9109\",\n        lat: \"24.6887633\",\n        lng: \"121.8050125\"\n    }, {\n        id: 338,\n        name: \"\u8607\u6FB3\u93AE\",\n        lat: \"24.5942290\",\n        lng: \"121.8533264\"\n    }, {\n        id: 330,\n        name: \"\u7901\u6EAA\u9109\",\n        lat: \"24.8214206\",\n        lng: \"121.7696964\"\n    }, {\n        id: 332,\n        name: \"\u54E1\u5C71\u9109\",\n        lat: \"24.7381293\",\n        lng: \"121.6625320\"\n    }, {\n        id: 329,\n        name: \"\u982D\u57CE\u93AE\",\n        lat: \"24.8576121\",\n        lng: \"121.8234687\"\n    }, {\n        id: 331,\n        name: \"\u58EF\u570D\u9109\",\n        lat: \"24.7695690\",\n        lng: \"121.7993168\"\n    }, {\n        id: 334,\n        name: \"\u4E09\u661F\u9109\",\n        lat: \"24.6744894\",\n        lng: \"121.6625320\"\n    }, {\n        id: 339,\n        name: \"\u5357\u6FB3\u9109\",\n        lat: \"24.4065995\",\n        lng: \"121.6739371\"\n    }, {\n        id: 335,\n        name: \"\u5927\u540C\u9109\",\n        lat: \"24.5498206\",\n        lng: \"121.5141615\"\n    }]\n}, {\n    id: 22,\n    child: [{\n        id: 341,\n        name: \"\u81FA\u6771\u5E02\",\n        lat: \"22.7546009\",\n        lng: \"121.1137544\"\n    }, {\n        id: 345,\n        name: \"\u5351\u5357\u9109\",\n        lat: \"22.7848196\",\n        lng: \"121.0834446\"\n    }, {\n        id: 351,\n        name: \"\u6210\u529F\u93AE\",\n        lat: \"23.1261527\",\n        lng: \"121.3655989\"\n    }, {\n        id: 353,\n        name: \"\u592A\u9EBB\u91CC\u9109\",\n        lat: \"22.6102278\",\n        lng: \"121.0044631\"\n    }, {\n        id: 347,\n        name: \"\u95DC\u5C71\u93AE\",\n        lat: \"23.0495603\",\n        lng: \"121.1646339\"\n    }, {\n        id: 350,\n        name: \"\u6771\u6CB3\u9109\",\n        lat: \"23.0691722\",\n        lng: \"121.2855249\"\n    }, {\n        id: 349,\n        name: \"\u6C60\u4E0A\u9109\",\n        lat: \"23.1207330\",\n        lng: \"121.2161784\"\n    }, {\n        id: 346,\n        name: \"\u9E7F\u91CE\u9109\",\n        lat: \"22.9580514\",\n        lng: \"121.1595842\"\n    }, {\n        id: 352,\n        name: \"\u9577\u6FF1\u9109\",\n        lat: \"23.3451824\",\n        lng: \"121.4341900\"\n    }, {\n        id: 355,\n        name: \"\u5927\u6B66\u9109\",\n        lat: \"22.4141954\",\n        lng: \"120.9073040\"\n    }, {\n        id: 343,\n        name: \"\u862D\u5DBC\u9109\",\n        lat: \"22.0269018\",\n        lng: \"121.5415968\"\n    }, {\n        id: 342,\n        name: \"\u7DA0\u5CF6\u9109\",\n        lat: \"22.6620886\",\n        lng: \"121.4901443\"\n    }, {\n        id: 348,\n        name: \"\u6D77\u7AEF\u9109\",\n        lat: \"23.1305611\",\n        lng: \"121.1756856\"\n    }, {\n        id: 354,\n        name: \"\u91D1\u5CF0\u9109\",\n        lat: \"22.5604145\",\n        lng: \"120.8728615\"\n    }, {\n        id: 344,\n        name: \"\u5EF6\u5E73\u9109\",\n        lat: \"22.9319960\",\n        lng: \"121.0335100\"\n    }, {\n        id: 356,\n        name: \"\u9054\u4EC1\u9109\",\n        lat: \"22.3990588\",\n        lng: \"120.8269231\"\n    }]\n}, {\n    id: 23,\n    child: [{\n        id: 357,\n        name: \"\u82B1\u84EE\u5E02\",\n        lat: \"23.9910732\",\n        lng: \"121.6111949\"\n    }, {\n        id: 360,\n        name: \"\u5409\u5B89\u9109\",\n        lat: \"23.9732022\",\n        lng: \"121.5841779\"\n    }, {\n        id: 367,\n        name: \"\u7389\u91CC\u93AE\",\n        lat: \"23.3898217\",\n        lng: \"121.3770336\"\n    }, {\n        id: 358,\n        name: \"\u65B0\u57CE\u9109\",\n        lat: \"24.0327075\",\n        lng: \"121.6043742\"\n    }, {\n        id: 359,\n        name: \"\u79C0\u6797\u9109\",\n        lat: \"24.2258575\",\n        lng: \"121.5370003\"\n    }, {\n        id: 361,\n        name: \"\u58FD\u8C50\u9109\",\n        lat: \"23.8593411\",\n        lng: \"121.5598345\"\n    }, {\n        id: 363,\n        name: \"\u5149\u5FA9\u9109\",\n        lat: \"23.6350647\",\n        lng: \"121.4227610\"\n    }, {\n        id: 365,\n        name: \"\u745E\u7A57\u9109\",\n        lat: \"23.5205619\",\n        lng: \"121.4113308\"\n    }, {\n        id: 362,\n        name: \"\u9CF3\u6797\u93AE\",\n        lat: \"23.7443841\",\n        lng: \"121.4570447\"\n    }, {\n        id: 369,\n        name: \"\u5BCC\u91CC\u9109\",\n        lat: \"23.1544160\",\n        lng: \"121.2855249\"\n    }, {\n        id: 366,\n        name: \"\u842C\u69AE\u9109\",\n        lat: \"23.7245744\",\n        lng: \"121.3084088\"\n    }, {\n        id: 368,\n        name: \"\u5353\u6EAA\u9109\",\n        lat: \"23.4040070\",\n        lng: \"121.2168466\"\n    }, {\n        id: 364,\n        name: \"\u8C50\u6FF1\u9109\",\n        lat: \"23.5851901\",\n        lng: \"121.5027404\"\n    }]\n}, {\n    id: 24,\n    child: [{\n        id: 283,\n        name: \"\u99AC\u516C\u5E02\",\n        lat: \"23.5706269\",\n        lng: \"119.5774616\"\n    }, {\n        id: 288,\n        name: \"\u6E56\u897F\u9109\",\n        lat: \"23.5773682\",\n        lng: \"119.6615055\"\n    }, {\n        id: 287,\n        name: \"\u767D\u6C99\u9109\",\n        lat: \"23.6640444\",\n        lng: \"119.5948541\"\n    }, {\n        id: 284,\n        name: \"\u897F\u5DBC\u9109\",\n        lat: \"23.6054584\",\n        lng: \"119.5136711\"\n    }, {\n        id: 285,\n        name: \"\u671B\u5B89\u9109\",\n        lat: \"23.3596967\",\n        lng: \"119.5020698\"\n    }, {\n        id: 286,\n        name: \"\u4E03\u7F8E\u9109\",\n        lat: \"23.2087756\",\n        lng: \"119.4353441\"\n    }]\n}, {\n    id: 25,\n    child: [{\n        id: 292,\n        name: \"\u91D1\u57CE\u93AE\",\n        lat: \"24.4320647\",\n        lng: \"118.3155101\"\n    }, {\n        id: 291,\n        name: \"\u91D1\u5BE7\u9109\",\n        lat: \"24.4565774\",\n        lng: \"118.3058515\"\n    }, {\n        id: 290,\n        name: \"\u91D1\u6E56\u93AE\",\n        lat: \"24.4376913\",\n        lng: \"118.4279933\"\n    }, {\n        id: 289,\n        name: \"\u91D1\u6C99\u93AE\",\n        lat: \"24.4811092\",\n        lng: \"118.4279933\"\n    }, {\n        id: 293,\n        name: \"\u70C8\u5DBC\u9109\",\n        lat: \"24.4279737\",\n        lng: \"118.2351192\"\n    }, {\n        id: 294,\n        name: \"\u70CF\u5775\u9109\",\n        lat: \"24.9911547\",\n        lng: \"119.4542045\"\n    }]\n}, {\n    id: 26,\n    child: [{\n        id: 22,\n        name: \"\u5357\u7AFF\u9109\",\n        lat: \"26.1534361\",\n        lng: \"119.9306863\"\n    }, {\n        id: 23,\n        name: \"\u5317\u7AFF\u9109\",\n        lat: \"26.2245753\",\n        lng: \"119.9982607\"\n    }, {\n        id: 25,\n        name: \"\u6771\u5F15\u9109\",\n        lat: \"26.3766670\",\n        lng: \"120.5066670\"\n    }, {\n        id: 24,\n        name: \"\u8392\u5149\u9109\",\n        lat: \"25.9604777\",\n        lng: \"119.9723303\"\n    }, {\n        id: 256,\n        name: \"\u6771\u6C99\",\n        lat: \"25.9606469\",\n        lng: \"119.9726081\"\n    }, {\n        id: 257,\n        name: \"\u5357\u6C99\",\n        lat: \"26.1602430\",\n        lng: \"119.9516652\"\n    }]\n}];\n\nexport function getSectionList(state: State): FilterOption[] {\n    const { region } = state;\n    const key = 'section';\n    const target = SECTION.find(section => section.id.toString() === region);\n    if (!target)\n        return [];\n    return getFilterAllOption(key).concat(target.child.map(e => {\n        return {\n            id: e.id.toString(),\n            key: key,\n            name: e.name\n        };\n    }));\n}", "import type { State } from '@/state';\nimport type { FilterOption } from './option';\nimport { getFilterAllOption } from './function';\n\ninterface MetroFilter {\n    id: number;\n    name: string;\n    lat: string,\n    lng: string,\n    child: StationFilter[]\n}\n\ninterface StationFilter {\n    id: number,\n    name: string,\n    lat: string,\n    lng: string\n}\n\ninterface MetroMap {\n    regionName: string,\n    regionId: number,\n    metroLineIds: number[]\n}\n\nconst METRO: MetroFilter[] = [{\n    id: 100,\n    name: \"\u6587\u6E56\u7DDA\",\n    lat: \"25.0416040\",\n    lng: \"121.5437750\",\n    child: [{\n        id: 4257,\n        name: \"\u5357\u6E2F\u5C55\u89BD\u9928\",\n        lat: \"25.0552650\",\n        lng: \"121.6173590\"\n    }, {\n        id: 4314,\n        name: \"\u5357\u6E2F\u8EDF\u9AD4\u5712\u5340\",\n        lat: \"25.0595760\",\n        lng: \"121.6159210\"\n    }, {\n        id: 4315,\n        name: \"\u6771\u6E56\",\n        lat: \"25.0671810\",\n        lng: \"121.6114790\"\n    }, {\n        id: 4316,\n        name: \"\u846B\u6D32\",\n        lat: \"25.0727900\",\n        lng: \"121.6070030\"\n    }, {\n        id: 4317,\n        name: \"\u5927\u6E56\u516C\u5712\",\n        lat: \"25.0837440\",\n        lng: \"121.6023380\"\n    }, {\n        id: 4318,\n        name: \"\u5167\u6E56\",\n        lat: \"25.0837830\",\n        lng: \"121.5945520\"\n    }, {\n        id: 4319,\n        name: \"\u6587\u5FB7\",\n        lat: \"25.0785300\",\n        lng: \"121.5847270\"\n    }, {\n        id: 4320,\n        name: \"\u6E2F\u5898\",\n        lat: \"25.0800440\",\n        lng: \"121.5751010\"\n    }, {\n        id: 4321,\n        name: \"\u897F\u6E56\",\n        lat: \"25.0821500\",\n        lng: \"121.5671430\"\n    }, {\n        id: 4282,\n        name: \"\u528D\u5357\u8DEF\",\n        lat: \"25.0848000\",\n        lng: \"121.5558750\"\n    }, {\n        id: 4323,\n        name: \"\u5927\u76F4\",\n        lat: \"25.0794919\",\n        lng: \"121.5469110\"\n    }, {\n        id: 4324,\n        name: \"\u677E\u5C71\u6A5F\u5834\",\n        lat: \"25.0629100\",\n        lng: \"121.5521900\"\n    }, {\n        id: 4185,\n        name: \"\u4E2D\u5C71\u570B\u4E2D\",\n        lat: \"25.0608340\",\n        lng: \"121.5441830\"\n    }, {\n        id: 4186,\n        name: \"\u5357\u4EAC\u5FA9\u8208\",\n        lat: \"25.0525280\",\n        lng: \"121.5440670\"\n    }, {\n        id: 4187,\n        name: \"\u5FE0\u5B5D\u5FA9\u8208\",\n        lat: \"25.0416040\",\n        lng: \"121.5437750\"\n    }, {\n        id: 4188,\n        name: \"\u5927\u5B89\",\n        lat: \"25.0329920\",\n        lng: \"121.5435820\"\n    }, {\n        id: 4189,\n        name: \"\u79D1\u6280\u5927\u6A13\",\n        lat: \"25.0261190\",\n        lng: \"121.5434370\"\n    }, {\n        id: 4190,\n        name: \"\u516D\u5F35\u7281\",\n        lat: \"25.0237870\",\n        lng: \"121.5531280\"\n    }, {\n        id: 4191,\n        name: \"\u9E9F\u5149\",\n        lat: \"25.0185250\",\n        lng: \"121.5587720\"\n    }, {\n        id: 4192,\n        name: \"\u8F9B\u4EA5\",\n        lat: \"25.0054780\",\n        lng: \"121.5571030\"\n    }, {\n        id: 4193,\n        name: \"\u842C\u82B3\u91AB\u9662\",\n        lat: \"24.9993490\",\n        lng: \"121.5580850\"\n    }, {\n        id: 4194,\n        name: \"\u842C\u82B3\u793E\u5340\",\n        lat: \"24.9985620\",\n        lng: \"121.5680980\"\n    }, {\n        id: 4195,\n        name: \"\u6728\u67F5\",\n        lat: \"24.9982340\",\n        lng: \"121.5731460\"\n    }, {\n        id: 4196,\n        name: \"\u52D5\u7269\u5712\",\n        lat: \"24.9982650\",\n        lng: \"121.5794760\"\n    }]\n}, {\n    id: 125,\n    name: \"\u6DE1\u6C34\u4FE1\u7FA9\u7DDA\",\n    lat: \"25.0622190\",\n    lng: \"121.5196140\",\n    child: [{\n        id: 4198,\n        name: \"\u65B0\u5317\u6295\",\n        lat: \"25.1369380\",\n        lng: \"121.5025330\"\n    }, {\n        id: 4163,\n        name: \"\u6DE1\u6C34\",\n        lat: \"25.1679890\",\n        lng: \"121.4455130\"\n    }, {\n        id: 4164,\n        name: \"\u7D05\u6A39\u6797\",\n        lat: \"25.1548020\",\n        lng: \"121.4588300\"\n    }, {\n        id: 4165,\n        name: \"\u7AF9\u570D\",\n        lat: \"25.1373690\",\n        lng: \"121.4598230\"\n    }, {\n        id: 4166,\n        name: \"\u95DC\u6E21\",\n        lat: \"25.1257790\",\n        lng: \"121.4671340\"\n    }, {\n        id: 4167,\n        name: \"\u5FE0\u7FA9\",\n        lat: \"25.1315510\",\n        lng: \"121.4733840\"\n    }, {\n        id: 4168,\n        name: \"\u5FA9\u8208\u5D17\",\n        lat: \"25.1379610\",\n        lng: \"121.4888120\"\n    }, {\n        id: 4169,\n        name: \"\u5317\u6295\",\n        lat: \"25.1318340\",\n        lng: \"121.4983650\"\n    }, {\n        id: 4170,\n        name: \"\u5947\u5CA9\",\n        lat: \"25.1252870\",\n        lng: \"121.5011280\"\n    }, {\n        id: 4171,\n        name: \"\u552D\u54E9\u5CB8\",\n        lat: \"25.1208790\",\n        lng: \"121.5062460\"\n    }, {\n        id: 4172,\n        name: \"\u77F3\u724C\",\n        lat: \"25.1145210\",\n        lng: \"121.5155500\"\n    }, {\n        id: 4173,\n        name: \"\u660E\u5FB7\",\n        lat: \"25.1096560\",\n        lng: \"121.5189190\"\n    }, {\n        id: 4174,\n        name: \"\u829D\u5C71\",\n        lat: \"25.1030550\",\n        lng: \"121.5225110\"\n    }, {\n        id: 4175,\n        name: \"\u58EB\u6797\",\n        lat: \"25.0935290\",\n        lng: \"121.5262170\"\n    }, {\n        id: 4176,\n        name: \"\u528D\u6F6D\",\n        lat: \"25.0843370\",\n        lng: \"121.5250210\"\n    }, {\n        id: 4177,\n        name: \"\u5713\u5C71\",\n        lat: \"25.0716410\",\n        lng: \"121.5201180\"\n    }, {\n        id: 4178,\n        name: \"\u6C11\u6B0A\u897F\u8DEF\",\n        lat: \"25.0622190\",\n        lng: \"121.5196140\"\n    }, {\n        id: 4179,\n        name: \"\u96D9\u9023\",\n        lat: \"25.0577970\",\n        lng: \"121.5206650\"\n    }, {\n        id: 4180,\n        name: \"\u4E2D\u5C71\",\n        lat: \"25.0526360\",\n        lng: \"121.5203700\"\n    }, {\n        id: 4181,\n        name: \"\u53F0\u5317\u8ECA\u7AD9\",\n        lat: \"25.0462700\",\n        lng: \"121.5175050\"\n    }, {\n        id: 4182,\n        name: \"\u53F0\u5927\u91AB\u9662\",\n        lat: \"25.0421970\",\n        lng: \"121.5163200\"\n    }, {\n        id: 4183,\n        name: \"\u4E2D\u6B63\u7D00\u5FF5\u5802\",\n        lat: \"25.0339300\",\n        lng: \"121.5173820\"\n    }, {\n        id: 4200,\n        name: \"\u6771\u9580\",\n        lat: \"25.0338845\",\n        lng: \"121.5284819\"\n    }, {\n        id: 4201,\n        name: \"\u5927\u5B89\u68EE\u6797\u516C\u5712\",\n        lat: \"25.0335989\",\n        lng: \"121.5351496\"\n    }, {\n        id: 4188,\n        name: \"\u5927\u5B89\",\n        lat: \"25.0329920\",\n        lng: \"121.5435820\"\n    }, {\n        id: 66300,\n        name: \"\u4FE1\u7FA9\u5B89\u548C\",\n        lat: \"25.0332827\",\n        lng: \"121.5524300\"\n    }, {\n        id: 66301,\n        name: \"\u53F0\u5317101/\u4E16\u8CBF\",\n        lat: \"25.0329368\",\n        lng: \"121.5628530\"\n    }, {\n        id: 4205,\n        name: \"\u8C61\u5C71\",\n        lat: \"25.0329121\",\n        lng: \"121.5693137\"\n    }]\n}, {\n    id: 195,\n    name: \"\u65B0\u5317\u6295\u652F\u7DDA\",\n    lat: \"25.1369380\",\n    lng: \"121.5025330\",\n    child: [{\n        id: 4169,\n        name: \"\u5317\u6295\",\n        lat: \"25.1318340\",\n        lng: \"121.4983650\"\n    }, {\n        id: 4198,\n        name: \"\u65B0\u5317\u6295\",\n        lat: \"25.1369380\",\n        lng: \"121.5025330\"\n    }]\n}, {\n    id: 148,\n    name: \"\u677E\u5C71\u65B0\u5E97\u7DDA\",\n    lat: \"25.0422280\",\n    lng: \"121.5083110\",\n    child: [{\n        id: 4235,\n        name: \"\u677E\u5C71\",\n        lat: \"25.0501397\",\n        lng: \"121.5781343\"\n    }, {\n        id: 4236,\n        name: \"\u5357\u4EAC\u4E09\u6C11\",\n        lat: \"25.0515122\",\n        lng: \"121.5639883\"\n    }, {\n        id: 66305,\n        name: \"\u53F0\u5317\u5C0F\u5DE8\u86CB\",\n        lat: \"25.0517392\",\n        lng: \"121.5516207\"\n    }, {\n        id: 4186,\n        name: \"\u5357\u4EAC\u5FA9\u8208\",\n        lat: \"25.0525280\",\n        lng: \"121.5440670\"\n    }, {\n        id: 66266,\n        name: \"\u677E\u6C5F\u5357\u4EAC\",\n        lat: \"25.0520698\",\n        lng: \"121.5327819\"\n    }, {\n        id: 4180,\n        name: \"\u4E2D\u5C71\",\n        lat: \"25.0526360\",\n        lng: \"121.5203700\"\n    }, {\n        id: 4241,\n        name: \"\u5317\u9580\",\n        lat: \"25.0501713\",\n        lng: \"121.5103855\"\n    }, {\n        id: 4242,\n        name: \"\u897F\u9580\",\n        lat: \"25.0422280\",\n        lng: \"121.5083110\"\n    }, {\n        id: 4255,\n        name: \"\u5C0F\u5357\u9580\",\n        lat: \"25.0355920\",\n        lng: \"121.5107840\"\n    }, {\n        id: 4183,\n        name: \"\u4E2D\u6B63\u7D00\u5FF5\u5802\",\n        lat: \"25.0339300\",\n        lng: \"121.5173820\"\n    }, {\n        id: 4184,\n        name: \"\u53E4\u4EAD\",\n        lat: \"25.0270570\",\n        lng: \"121.5223660\"\n    }, {\n        id: 4244,\n        name: \"\u53F0\u96FB\u5927\u6A13\",\n        lat: \"25.0204950\",\n        lng: \"121.5283310\"\n    }, {\n        id: 4245,\n        name: \"\u516C\u9928\",\n        lat: \"25.0147680\",\n        lng: \"121.5342910\"\n    }, {\n        id: 4246,\n        name: \"\u842C\u9686\",\n        lat: \"25.0019100\",\n        lng: \"121.5390330\"\n    }, {\n        id: 4247,\n        name: \"\u666F\u7F8E\",\n        lat: \"24.9925600\",\n        lng: \"121.5406310\"\n    }, {\n        id: 4248,\n        name: \"\u5927\u576A\u6797\",\n        lat: \"24.9830010\",\n        lng: \"121.5414040\"\n    }, {\n        id: 4249,\n        name: \"\u4E03\u5F35\",\n        lat: \"24.9750210\",\n        lng: \"121.5430670\"\n    }, {\n        id: 4251,\n        name: \"\u65B0\u5E97\u5340\u516C\u6240\",\n        lat: \"24.9677900\",\n        lng: \"121.5414570\"\n    }, {\n        id: 4250,\n        name: \"\u65B0\u5E97\",\n        lat: \"24.9575190\",\n        lng: \"121.5375310\"\n    }, {\n        id: 4253,\n        name: \"\u5C0F\u78A7\u6F6D\",\n        lat: \"24.9718600\",\n        lng: \"121.5304100\"\n    }]\n}, {\n    id: 192,\n    name: \"\u5C0F\u78A7\u6F6D\u652F\u7DDA\",\n    lat: \"24.9718600\",\n    lng: \"121.5304100\",\n    child: [{\n        id: 4253,\n        name: \"\u5C0F\u78A7\u6F6D\",\n        lat: \"24.9718600\",\n        lng: \"121.5304100\"\n    }, {\n        id: 4249,\n        name: \"\u4E03\u5F35\",\n        lat: \"24.9750210\",\n        lng: \"121.5430670\"\n    }]\n}, {\n    id: 162,\n    name: \"\u4E2D\u548C\u65B0\u8606\u7DDA\",\n    lat: \"25.0520698\",\n    lng: \"121.5327819\",\n    child: [{\n        id: 66258,\n        name: \"\u8606\u6D32\",\n        lat: \"25.0917625\",\n        lng: \"121.4639818\"\n    }, {\n        id: 66259,\n        name: \"\u4E09\u6C11\u9AD8\u4E2D\",\n        lat: \"25.0854674\",\n        lng: \"121.4733363\"\n    }, {\n        id: 66260,\n        name: \"\u5F90\u532F\u4E2D\u5B78\",\n        lat: \"25.0807711\",\n        lng: \"121.4795041\"\n    }, {\n        id: 66261,\n        name: \"\u4E09\u548C\u570B\u4E2D\",\n        lat: \"25.0768671\",\n        lng: \"121.4862494\"\n    }, {\n        id: 66262,\n        name: \"\u4E09\u91CD\u570B\u5C0F\",\n        lat: \"25.0702588\",\n        lng: \"121.4970673\"\n    }, {\n        id: 4207,\n        name: \"\u8FF4\u9F8D\",\n        lat: \"25.0223802\",\n        lng: \"121.4122956\"\n    }, {\n        id: 4208,\n        name: \"\u4E39\u9CF3\",\n        lat: \"25.0289433\",\n        lng: \"121.4220879\"\n    }, {\n        id: 4209,\n        name: \"\u8F14\u5927\",\n        lat: \"25.0328224\",\n        lng: \"121.4356373\"\n    }, {\n        id: 4210,\n        name: \"\u65B0\u838A\",\n        lat: \"25.0360967\",\n        lng: \"121.4517618\"\n    }, {\n        id: 4211,\n        name: \"\u982D\u524D\u5E84\",\n        lat: \"25.0397140\",\n        lng: \"121.4615264\"\n    }, {\n        id: 4212,\n        name: \"\u5148\u55C7\u5BAE\",\n        lat: \"25.0465075\",\n        lng: \"121.4716406\"\n    }, {\n        id: 4213,\n        name: \"\u4E09\u91CD\",\n        lat: \"25.0558033\",\n        lng: \"121.4838470\"\n    }, {\n        id: 4214,\n        name: \"\u83DC\u5BEE\",\n        lat: \"25.0596624\",\n        lng: \"121.4908597\"\n    }, {\n        id: 4215,\n        name: \"\u53F0\u5317\u6A4B\",\n        lat: \"25.0633142\",\n        lng: \"121.5003498\"\n    }, {\n        id: 66263,\n        name: \"\u5927\u6A4B\u982D\",\n        lat: \"25.0631600\",\n        lng: \"121.5131400\"\n    }, {\n        id: 4178,\n        name: \"\u6C11\u6B0A\u897F\u8DEF\",\n        lat: \"25.0622190\",\n        lng: \"121.5196140\"\n    }, {\n        id: 66264,\n        name: \"\u4E2D\u5C71\u570B\u5C0F\",\n        lat: \"25.0627700\",\n        lng: \"121.5265000\"\n    }, {\n        id: 66265,\n        name: \"\u884C\u5929\u5BAE\",\n        lat: \"25.0590000\",\n        lng: \"121.5332100\"\n    }, {\n        id: 66266,\n        name: \"\u677E\u6C5F\u5357\u4EAC\",\n        lat: \"25.0520698\",\n        lng: \"121.5327819\"\n    }, {\n        id: 4221,\n        name: \"\u5FE0\u5B5D\u65B0\u751F\",\n        lat: \"25.0423570\",\n        lng: \"121.5329040\"\n    }, {\n        id: 4200,\n        name: \"\u6771\u9580\",\n        lat: \"25.0338845\",\n        lng: \"121.5284819\"\n    }, {\n        id: 4184,\n        name: \"\u53E4\u4EAD\",\n        lat: \"25.0270570\",\n        lng: \"121.5223660\"\n    }, {\n        id: 4231,\n        name: \"\u9802\u6EAA\",\n        lat: \"25.0135190\",\n        lng: \"121.5154290\"\n    }, {\n        id: 4232,\n        name: \"\u6C38\u5B89\u5E02\u5834\",\n        lat: \"25.0025860\",\n        lng: \"121.5109880\"\n    }, {\n        id: 4233,\n        name: \"\u666F\u5B89\",\n        lat: \"24.9939019\",\n        lng: \"121.5050870\"\n    }, {\n        id: 4234,\n        name: \"\u5357\u52E2\u89D2\",\n        lat: \"24.9897210\",\n        lng: \"121.5097700\"\n    }]\n}, {\n    id: 168,\n    name: \"\u677F\u5357\u7DDA\",\n    lat: \"25.0423570\",\n    lng: \"121.5329040\",\n    child: [{\n        id: 4257,\n        name: \"\u5357\u6E2F\u5C55\u89BD\u9928\",\n        lat: \"25.0552650\",\n        lng: \"121.6173590\"\n    }, {\n        id: 4258,\n        name: \"\u5357\u6E2F\",\n        lat: \"25.0521400\",\n        lng: \"121.6070590\"\n    }, {\n        id: 4259,\n        name: \"\u6606\u967D\",\n        lat: \"25.0504120\",\n        lng: \"121.5932620\"\n    }, {\n        id: 4260,\n        name: \"\u5F8C\u5C71\u57E4\",\n        lat: \"25.0448650\",\n        lng: \"121.5823700\"\n    }, {\n        id: 4261,\n        name: \"\u6C38\u6625\",\n        lat: \"25.0408769\",\n        lng: \"121.5755860\"\n    }, {\n        id: 4262,\n        name: \"\u5E02\u653F\u5E9C\",\n        lat: \"25.0411440\",\n        lng: \"121.5659710\"\n    }, {\n        id: 4263,\n        name: \"\u570B\u7236\u7D00\u5FF5\u9928\",\n        lat: \"25.0413310\",\n        lng: \"121.5577420\"\n    }, {\n        id: 4264,\n        name: \"\u5FE0\u5B5D\u6566\u5316\",\n        lat: \"25.0414990\",\n        lng: \"121.5505080\"\n    }, {\n        id: 4187,\n        name: \"\u5FE0\u5B5D\u5FA9\u8208\",\n        lat: \"25.0416040\",\n        lng: \"121.5437750\"\n    }, {\n        id: 4221,\n        name: \"\u5FE0\u5B5D\u65B0\u751F\",\n        lat: \"25.0423570\",\n        lng: \"121.5329040\"\n    }, {\n        id: 4267,\n        name: \"\u5584\u5C0E\u5BFA\",\n        lat: \"25.0447580\",\n        lng: \"121.5236800\"\n    }, {\n        id: 4181,\n        name: \"\u53F0\u5317\u8ECA\u7AD9\",\n        lat: \"25.0462700\",\n        lng: \"121.5175050\"\n    }, {\n        id: 4242,\n        name: \"\u897F\u9580\",\n        lat: \"25.0422280\",\n        lng: \"121.5083110\"\n    }, {\n        id: 4271,\n        name: \"\u9F8D\u5C71\u5BFA\",\n        lat: \"25.0352810\",\n        lng: \"121.4998350\"\n    }, {\n        id: 4272,\n        name: \"\u6C5F\u5B50\u7FE0\",\n        lat: \"25.0304790\",\n        lng: \"121.4728090\"\n    }, {\n        id: 4273,\n        name: \"\u65B0\u57D4\",\n        lat: \"25.0234110\",\n        lng: \"121.4681960\"\n    }, {\n        id: 4274,\n        name: \"\u677F\u6A4B\",\n        lat: \"25.0138300\",\n        lng: \"121.4625250\"\n    }, {\n        id: 4275,\n        name: \"\u5E9C\u4E2D\",\n        lat: \"25.0085650\",\n        lng: \"121.4591780\"\n    }, {\n        id: 4277,\n        name: \"\u4E9E\u6771\u91AB\u9662\",\n        lat: \"24.9984430\",\n        lng: \"121.4525580\"\n    }, {\n        id: 4278,\n        name: \"\u6D77\u5C71\",\n        lat: \"24.9853060\",\n        lng: \"121.4488190\"\n    }, {\n        id: 4279,\n        name: \"\u571F\u57CE\",\n        lat: \"24.9731510\",\n        lng: \"121.4443400\"\n    }, {\n        id: 4280,\n        name: \"\u6C38\u5BE7\",\n        lat: \"24.9667980\",\n        lng: \"121.4363040\"\n    }, {\n        id: 4281,\n        name: \"\u9802\u57D4\",\n        lat: \"24.9593915\",\n        lng: \"121.4194736\"\n    }]\n}, {\n    id: 238,\n    name: \"\u9AD8\u96C4\u7D05\u7DDA\",\n    lat: \"22.6313980\",\n    lng: \"120.3019600\",\n    child: [{\n        id: 4329,\n        name: \"\u5C0F\u6E2F\",\n        lat: \"22.5648200\",\n        lng: \"120.3538340\"\n    }, {\n        id: 4330,\n        name: \"\u9AD8\u96C4\u570B\u969B\u6A5F\u5834\",\n        lat: \"22.5701259\",\n        lng: \"120.3421350\"\n    }, {\n        id: 4331,\n        name: \"\u8349\u8859\",\n        lat: \"22.5803690\",\n        lng: \"120.3284450\"\n    }, {\n        id: 4332,\n        name: \"\u524D\u93AE\u9AD8\u4E2D\",\n        lat: \"22.5883240\",\n        lng: \"120.3217660\"\n    }, {\n        id: 4333,\n        name: \"\u51F1\u65CB\",\n        lat: \"22.5968430\",\n        lng: \"120.3151410\"\n    }, {\n        id: 4334,\n        name: \"\u7345\u7532\",\n        lat: \"22.6058810\",\n        lng: \"120.3081990\"\n    }, {\n        id: 4335,\n        name: \"\u4E09\u591A\u5546\u5708\",\n        lat: \"22.6138489\",\n        lng: \"120.3046160\"\n    }, {\n        id: 4336,\n        name: \"\u4E2D\u592E\u516C\u5712\",\n        lat: \"22.6246290\",\n        lng: \"120.3011930\"\n    }, {\n        id: 4337,\n        name: \"\u7F8E\u9E97\u5CF6\",\n        lat: \"22.6313980\",\n        lng: \"120.3019600\"\n    }, {\n        id: 4338,\n        name: \"\u9AD8\u96C4\u8ECA\u7AD9\",\n        lat: \"22.6396760\",\n        lng: \"120.3026690\"\n    }, {\n        id: 4339,\n        name: \"\u5F8C\u9A5B\",\n        lat: \"22.6483199\",\n        lng: \"120.3033440\"\n    }, {\n        id: 4340,\n        name: \"\u51F9\u5B50\u5E95\",\n        lat: \"22.6572310\",\n        lng: \"120.3030650\"\n    }, {\n        id: 4341,\n        name: \"\u5DE8\u86CB\",\n        lat: \"22.6662560\",\n        lng: \"120.3033550\"\n    }, {\n        id: 4342,\n        name: \"\u751F\u614B\u5712\u5340\",\n        lat: \"22.6768340\",\n        lng: \"120.3066760\"\n    }, {\n        id: 4343,\n        name: \"\u5DE6\u71DF\",\n        lat: \"22.6880250\",\n        lng: \"120.3091760\"\n    }, {\n        id: 4344,\n        name: \"\u4E16\u904B\",\n        lat: \"22.7016150\",\n        lng: \"120.3025130\"\n    }, {\n        id: 4345,\n        name: \"\u6CB9\u5EE0\u570B\u5C0F\",\n        lat: \"22.7086170\",\n        lng: \"120.3023090\"\n    }, {\n        id: 4346,\n        name: \"\u6960\u6893\u52A0\u5DE5\u5340\",\n        lat: \"22.7187010\",\n        lng: \"120.3071990\"\n    }, {\n        id: 4347,\n        name: \"\u5F8C\u52C1\",\n        lat: \"22.7223490\",\n        lng: \"120.3163320\"\n    }, {\n        id: 4348,\n        name: \"\u90FD\u6703\u516C\u5712\",\n        lat: \"22.7293400\",\n        lng: \"120.3209930\"\n    }, {\n        id: 4349,\n        name: \"\u9752\u57D4\",\n        lat: \"22.7446730\",\n        lng: \"120.3177050\"\n    }, {\n        id: 4350,\n        name: \"\u6A4B\u982D\u7CD6\u5EE0\",\n        lat: \"22.7534640\",\n        lng: \"120.3144920\"\n    }, {\n        id: 4351,\n        name: \"\u6A4B\u982D\u706B\u8ECA\u7AD9\",\n        lat: \"22.7604340\",\n        lng: \"120.3108920\"\n    }, {\n        id: 4352,\n        name: \"\u5357\u5CA1\u5C71\",\n        lat: \"22.7808620\",\n        lng: \"120.3016560\"\n    }]\n}, {\n    id: 263,\n    name: \"\u9AD8\u96C4\u6A58\u7DDA\",\n    lat: \"22.6313980\",\n    lng: \"120.3019600\",\n    child: [{\n        id: 4353,\n        name: \"\u897F\u5B50\u7063\",\n        lat: \"22.6215440\",\n        lng: \"120.2745430\"\n    }, {\n        id: 4354,\n        name: \"\u9E7D\u57D5\u57D4\",\n        lat: \"22.6235100\",\n        lng: \"120.2837500\"\n    }, {\n        id: 4355,\n        name: \"\u5E02\u8B70\u6703\",\n        lat: \"22.6290260\",\n        lng: \"120.2948900\"\n    }, {\n        id: 4337,\n        name: \"\u7F8E\u9E97\u5CF6\",\n        lat: \"22.6313980\",\n        lng: \"120.3019600\"\n    }, {\n        id: 4357,\n        name: \"\u4FE1\u7FA9\u570B\u5C0F\",\n        lat: \"22.6307540\",\n        lng: \"120.3116320\"\n    }, {\n        id: 4358,\n        name: \"\u6587\u5316\u4E2D\u5FC3\",\n        lat: \"22.6302940\",\n        lng: \"120.3175920\"\n    }, {\n        id: 4359,\n        name: \"\u4E94\u584A\u539D\",\n        lat: \"22.6295569\",\n        lng: \"120.3276890\"\n    }, {\n        id: 4360,\n        name: \"\u6280\u64CA\u9928\",\n        lat: \"22.6273280\",\n        lng: \"120.3343240\"\n    }, {\n        id: 4361,\n        name: \"\u885B\u6B66\u71DF\",\n        lat: \"22.6251290\",\n        lng: \"120.3410560\"\n    }, {\n        id: 4362,\n        name: \"\u9CF3\u5C71\u897F\",\n        lat: \"22.6253470\",\n        lng: \"120.3480460\"\n    }, {\n        id: 4363,\n        name: \"\u9CF3\u5C71\",\n        lat: \"22.6259510\",\n        lng: \"120.3553740\"\n    }, {\n        id: 4364,\n        name: \"\u5927\u6771\",\n        lat: \"22.6253439\",\n        lng: \"120.3633910\"\n    }, {\n        id: 4365,\n        name: \"\u9CF3\u5C71\u570B\u4E2D\",\n        lat: \"22.6249060\",\n        lng: \"120.3724760\"\n    }, {\n        id: 4366,\n        name: \"\u5927\u5BEE\",\n        lat: \"22.6223800\",\n        lng: \"120.3902800\"\n    }]\n}, {\n    id: 307,\n    name: \"\u9AD8\u96C4\u8F15\u8ECC\",\n    lat: \"22.5936310\",\n    lng: \"120.3105190\",\n    child: [{\n        id: 66386,\n        name: \"\u51F1\u65CB\u516C\u5712\",\n        lat: \"22.629375\",\n        lng: \"120.322858\"\n    }, {\n        id: 66387,\n        name: \"\u885B\u751F\u5C40\",\n        lat: \"22.625182\",\n        lng: \"120.323516\"\n    }, {\n        id: 66388,\n        name: \"\u4E94\u6B0A\u570B\u5C0F\",\n        lat: \"22.621166\",\n        lng: \"120.325077\"\n    }, {\n        id: 66389,\n        name: \"\u51F1\u65CB\u6B66\u660C\",\n        lat: \"22.616885\",\n        lng: \"120.326737\"\n    }, {\n        id: 66390,\n        name: \"\u51F1\u65CB\u4E8C\u8056\",\n        lat: \"22.612557\",\n        lng: \"120.327067\"\n    }, {\n        id: 66391,\n        name: \"\u8F15\u8ECC\u6A5F\u5EE0\",\n        lat: \"22.608484\",\n        lng: \"120.326147\"\n    }, {\n        id: 66338,\n        name: \"\u7C6C\u4ED4\u5167\",\n        lat: \"22.6047130\",\n        lng: \"120.324650\"\n    }, {\n        id: 66339,\n        name: \"\u51F1\u65CB\u745E\u7530\",\n        lat: \"22.5991710\",\n        lng: \"120.319388\"\n    }, {\n        id: 66340,\n        name: \"\u524D\u93AE\u4E4B\u661F\",\n        lat: \"22.5930560\",\n        lng: \"120.311667\"\n    }, {\n        id: 66341,\n        name: \"\u51F1\u65CB\u4E2D\u83EF\",\n        lat: \"22.5936310\",\n        lng: \"120.310519\"\n    }, {\n        id: 66342,\n        name: \"\u5922\u6642\u4EE3\",\n        lat: \"22.5952480\",\n        lng: \"120.304888\"\n    }, {\n        id: 66343,\n        name: \"\u7D93\u8CBF\u5712\u5340\",\n        lat: \"22.6009720\",\n        lng: \"120.302633\"\n    }, {\n        id: 66344,\n        name: \"\u8EDF\u9AD4\u5712\u5340\",\n        lat: \"22.6054420\",\n        lng: \"120.300916\"\n    }, {\n        id: 66345,\n        name: \"\u9AD8\u96C4\u5C55\u89BD\u9928\",\n        lat: \"22.6100030\",\n        lng: \"120.297732\"\n    }, {\n        id: 66392,\n        name: \"\u65C5\u904B\u4E2D\u5FC3\",\n        lat: \"22.611739\",\n        lng: \"120.293572\"\n    }, {\n        id: 66393,\n        name: \"\u5149\u69AE\u78BC\u982D\",\n        lat: \"22.616622\",\n        lng: \"120.293261\"\n    }, {\n        id: 66394,\n        name: \"\u771F\u611B\u78BC\u982D\",\n        lat: \"22.619702\",\n        lng: \"120.289141\"\n    }, {\n        id: 66395,\n        name: \"\u99C1\u4E8C\u5927\u7FA9\",\n        lat: \"22.618672\",\n        lng: \"120.284184\"\n    }, {\n        id: 66396,\n        name: \"\u99C1\u4E8C\u84EC\u840A\",\n        lat: \"22.620563\",\n        lng: \"120.279914\"\n    }, {\n        id: 66397,\n        name: \"\u54C8\u746A\u661F\",\n        lat: \"22.621554\",\n        lng: \"120.275548\"\n    }, {\n        id: 66398,\n        name: \"\u58FD\u5C71\u516C\u5712\",\n        lat: \"22.626505\",\n        lng: \"120.278766\"\n    }, {\n        id: 66399,\n        name: \"\u6587\u6B66\u8056\u6BBF\",\n        lat: \"22.629704\",\n        lng: \"120.280622\"\n    }, {\n        id: 66400,\n        name: \"\u9F13\u5C71\u5340\u516C\u6240\",\n        lat: \"22.635951\",\n        lng: \"120.282652\"\n    }]\n}, {\n    id: 278,\n    name: \"\u6A5F\u5834\u7DDA\",\n    lat: \"25.0922943\",\n    lng: \"121.2687982\",\n    child: [{\n        id: 4181,\n        name: \"\u53F0\u5317\u8ECA\u7AD9\",\n        lat: \"25.0462700\",\n        lng: \"121.5175050\"\n    }, {\n        id: 4213,\n        name: \"\u4E09\u91CD\",\n        lat: \"25.0558033\",\n        lng: \"121.4838470\"\n    }, {\n        id: 66317,\n        name: \"\u65B0\u5317\u7522\u696D\u5712\u5340\",\n        lat: \"25.0610671\",\n        lng: \"121.4596494\"\n    }, {\n        id: 66318,\n        name: \"\u65B0\u838A\u526F\u90FD\u5FC3\",\n        lat: \"25.0595239\",\n        lng: \"121.4465962\"\n    }, {\n        id: 66319,\n        name: \"\u6CF0\u5C71\",\n        lat: \"25.0522850\",\n        lng: \"121.4386015\"\n    }, {\n        id: 66320,\n        name: \"\u6CF0\u5C71\u8CB4\u548C\",\n        lat: \"25.0329510\",\n        lng: \"121.4221587\"\n    }, {\n        id: 66321,\n        name: \"\u9AD4\u80B2\u5927\u5B78\",\n        lat: \"25.0402868\",\n        lng: \"121.3852263\"\n    }, {\n        id: 66335,\n        name: \"\u9577\u5E9A\u91AB\u9662\",\n        lat: \"25.0611263\",\n        lng: \"121.3700473\"\n    }, {\n        id: 66322,\n        name: \"\u6797\u53E3\",\n        lat: \"25.0679191\",\n        lng: \"121.3612459\"\n    }, {\n        id: 66323,\n        name: \"\u5C71\u9F3B\",\n        lat: \"25.0852469\",\n        lng: \"121.2861713\"\n    }, {\n        id: 66324,\n        name: \"\u5751\u53E3\",\n        lat: \"25.0922943\",\n        lng: \"121.2687982\"\n    }, {\n        id: 66325,\n        name: \"\u6A5F\u5834\u7B2C\u4E00\u822A\u5EC8\",\n        lat: \"25.0864668\",\n        lng: \"121.2451907\"\n    }, {\n        id: 66326,\n        name: \"\u6A5F\u5834\u7B2C\u4E8C\u822A\u5EC8\",\n        lat: \"25.0759422\",\n        lng: \"121.2325605\"\n    }, {\n        id: 66327,\n        name: \"\u6A5F\u5834\u65C5\u9928\",\n        lat: \"25.0686500\",\n        lng: \"121.2207920\"\n    }, {\n        id: 66328,\n        name: \"\u5927\u5712\",\n        lat: \"25.0607090\",\n        lng: \"121.2104530\"\n    }, {\n        id: 66329,\n        name: \"\u6A6B\u5C71\",\n        lat: \"25.0380260\",\n        lng: \"121.2157430\"\n    }, {\n        id: 66330,\n        name: \"\u9818\u822A\",\n        lat: \"25.0245240\",\n        lng: \"121.2205930\"\n    }, {\n        id: 66331,\n        name: \"\u9AD8\u9435\u6843\u5712\u7AD9\",\n        lat: \"25.0133300\",\n        lng: \"121.2148720\"\n    }, {\n        id: 66332,\n        name: \"\u6843\u5712\u9AD4\u80B2\u5712\u5340\",\n        lat: \"25.0014810\",\n        lng: \"121.2031580\"\n    }, {\n        id: 66333,\n        name: \"\u8208\u5357\",\n        lat: \"24.9802250\",\n        lng: \"121.2161610\"\n    }, {\n        id: 66334,\n        name: \"\u74B0\u5317\",\n        lat: \"24.9670580\",\n        lng: \"121.2210420\"\n    }]\n}, {\n    id: 316,\n    name: \"\u6DE1\u6D77\u8F15\u8ECC\",\n    lat: \"25.1837790\",\n    lng: \"121.4482800\",\n    child: [{\n        id: 4164,\n        name: \"\u7D05\u6A39\u6797\",\n        lat: \"25.1548020\",\n        lng: \"121.4588300\"\n    }, {\n        id: 66346,\n        name: \"\u7AFF\u84C1\u6797\",\n        lat: \"25.1597220\",\n        lng: \"121.451944\"\n    }, {\n        id: 66347,\n        name: \"\u6DE1\u91D1\u9127\u516C\",\n        lat: \"25.1693130\",\n        lng: \"121.460841\"\n    }, {\n        id: 66348,\n        name: \"\u6DE1\u6C5F\u5927\u5B78\",\n        lat: \"25.1757340\",\n        lng: \"121.456770\"\n    }, {\n        id: 66349,\n        name: \"\u6DE1\u91D1\u5317\u65B0\",\n        lat: \"25.1836110\",\n        lng: \"121.450556\"\n    }, {\n        id: 66350,\n        name: \"\u65B0\u5E02\u4E00\u8DEF\",\n        lat: \"25.1837790\",\n        lng: \"121.448280\"\n    }, {\n        id: 66351,\n        name: \"\u6DE1\u6C34\u884C\u653F\u4E2D\u5FC3\",\n        lat: \"25.1893770\",\n        lng: \"121.443436\"\n    }, {\n        id: 66352,\n        name: \"\u6FF1\u6D77\u7FA9\u5C71\",\n        lat: \"25.1901250\",\n        lng: \"121.437532\"\n    }, {\n        id: 66353,\n        name: \"\u6FF1\u6D77\u6C99\u5D19\",\n        lat: \"25.1908350\",\n        lng: \"121.431603\"\n    }, {\n        id: 66354,\n        name: \"\u6DE1\u6D77\u65B0\u5E02\u93AE\",\n        lat: \"25.1944510\",\n        lng: \"121.432256\"\n    }, {\n        id: 66355,\n        name: \"\u5D01\u9802\",\n        lat: \"25.2009820\",\n        lng: \"121.434628\"\n    }, {\n        id: 66383,\n        name: \"\u53F0\u5317\u6D77\u6D0B\u5927\u5B78\",\n        lat: \"25.190966\",\n        lng: \"121.426462\"\n    }, {\n        id: 66384,\n        name: \"\u6C99\u5D19\",\n        lat: \"25.187311\",\n        lng: \"121.417181\"\n    }, {\n        id: 66385,\n        name: \"\u6DE1\u6C34\u6F01\u4EBA\u78BC\u982D\",\n        lat: \"25.182250\",\n        lng: \"121.418640\"\n    }]\n}, {\n    id: 346,\n    name: \"\u74B0\u72C0\u7DDA\",\n    lat: \"25.0044790\",\n    lng: \"121.4905150\",\n    child: [{\n        id: 4248,\n        name: \"\u5927\u576A\u6797\",\n        lat: \"24.9829038\",\n        lng: \"121.5391623\"\n    }, {\n        id: 4306,\n        name: \"\u5341\u56DB\u5F35\",\n        lat: \"24.984625\",\n        lng: \"121.527729\"\n    }, {\n        id: 66358,\n        name: \"\u79C0\u6717\u6A4B\",\n        lat: \"24.990466\",\n        lng: \"121.524989\"\n    }, {\n        id: 66359,\n        name: \"\u666F\u5E73\",\n        lat: \"24.9920701\",\n        lng: \"121.5141418\"\n    }, {\n        id: 4233,\n        name: \"\u666F\u5B89\",\n        lat: \"24.9938633\",\n        lng: \"121.5025998\"\n    }, {\n        id: 66360,\n        name: \"\u4E2D\u548C\",\n        lat: \"25.002556\",\n        lng: \"121.495611\"\n    }, {\n        id: 66361,\n        name: \"\u6A4B\u548C\",\n        lat: \"25.004479\",\n        lng: \"121.490515\"\n    }, {\n        id: 66362,\n        name: \"\u4E2D\u539F\",\n        lat: \"25.008345\",\n        lng: \"121.484494\"\n    }, {\n        id: 4299,\n        name: \"\u677F\u65B0\",\n        lat: \"25.014702\",\n        lng: \"121.472552\"\n    }, {\n        id: 4298,\n        name: \"\u677F\u6A4B\",\n        lat: \"25.015478\",\n        lng: \"121.464620\"\n    }, {\n        id: 66363,\n        name: \"\u65B0\u57D4\u6C11\u751F\",\n        lat: \"25.026311\",\n        lng: \"121.466642\"\n    }, {\n        id: 4211,\n        name: \"\u982D\u524D\u5E84\",\n        lat: \"25.0398568\",\n        lng: \"121.4583356\"\n    }, {\n        id: 66364,\n        name: \"\u5E78\u798F\",\n        lat: \"25.050246\",\n        lng: \"121.459971\"\n    }, {\n        id: 66365,\n        name: \"\u65B0\u5317\u7522\u696D\u5712\u5340\",\n        lat: \"25.0615991\",\n        lng: \"121.4572774\"\n    }]\n}, {\n    id: 361,\n    name: \"\u53F0\u4E2D\u7DA0\u7DDA\",\n    lat: \"24.1611130\",\n    lng: \"120.6487510\",\n    child: [{\n        id: 66366,\n        name: \"\u5317\u5C6F\u7E3D\u7AD9\",\n        lat: \"24.188722\",\n        lng: \"120.707287\"\n    }, {\n        id: 66367,\n        name: \"\u820A\u793E\",\n        lat: \"24.182262\",\n        lng: \"120.706814\"\n    }, {\n        id: 66368,\n        name: \"\u677E\u7AF9\",\n        lat: \"24.182562\",\n        lng: \"120.701369\"\n    }, {\n        id: 66369,\n        name: \"\u56DB\u7DAD\u570B\u5C0F\",\n        lat: \"24.170945\",\n        lng: \"120.696549\"\n    }, {\n        id: 66370,\n        name: \"\u6587\u5FC3\u5D07\u5FB7\",\n        lat: \"24.172589\",\n        lng: \"120.684751\"\n    }, {\n        id: 66371,\n        name: \"\u6587\u5FC3\u4E2D\u6E05\",\n        lat: \"24.174127\",\n        lng: \"120.670859\"\n    }, {\n        id: 66372,\n        name: \"\u6587\u83EF\u9AD8\u4E2D\",\n        lat: \"24.171596\",\n        lng: \"120.659561\"\n    }, {\n        id: 66373,\n        name: \"\u6587\u5FC3\u6AFB\u82B1\",\n        lat: \"24.167521\",\n        lng: \"120.653283\"\n    }, {\n        id: 66374,\n        name: \"\u5E02\u653F\u5E9C\",\n        lat: \"24.161113\",\n        lng: \"120.648751\"\n    }, {\n        id: 66375,\n        name: \"\u6C34\u5B89\u5BAE\",\n        lat: \"24.152871\",\n        lng: \"120.646636\"\n    }, {\n        id: 66376,\n        name: \"\u6587\u5FC3\u68EE\u6797\u516C\u5712\",\n        lat: \"24.146614\",\n        lng: \"120.646532\"\n    }, {\n        id: 66377,\n        name: \"\u5357\u5C6F\",\n        lat: \"24.139912\",\n        lng: \"120.646465\"\n    }, {\n        id: 66378,\n        name: \"\u8C50\u6A02\u516C\u5712\",\n        lat: \"24.134018\",\n        lng: \"120.646626\"\n    }, {\n        id: 66379,\n        name: \"\u5927\u6176\",\n        lat: \"24.119939\",\n        lng: \"120.648896\"\n    }, {\n        id: 66380,\n        name: \"\u4E5D\u5F35\u7281\",\n        lat: \"24.115038\",\n        lng: \"120.640422\"\n    }, {\n        id: 66381,\n        name: \"\u4E5D\u5FB7\",\n        lat: \"24.111224\",\n        lng: \"120.634310\"\n    }, {\n        id: 66382,\n        name: \"\u70CF\u65E5\",\n        lat: \"24.109151\",\n        lng: \"120.622536\"\n    }, {\n        id: 4383,\n        name: \"\u9AD8\u9435\u53F0\u4E2D\u7AD9\",\n        lat: \"24.110042\",\n        lng: \"120.614200\"\n    }]\n}];\n\nconst METRO_MAP: MetroMap[] = [{\n    regionName: \"\u53F0\u5317\u5E02\",\n    regionId: 1,\n    metroLineIds: [100, 125, 195, 148]\n}, {\n    regionName: \"\u65B0\u5317\u5E02\",\n    regionId: 3,\n    metroLineIds: [192, 162, 168, 316, 346]\n}, {\n    regionName: \"\u9AD8\u96C4\u5E02\",\n    regionId: 17,\n    metroLineIds: [238, 263, 307]\n}, {\n    regionName: \"\u6843\u5712\u5E02\",\n    regionId: 6,\n    metroLineIds: [278]\n}, {\n    regionName: \"\u53F0\u4E2D\u5E02\",\n    regionId: 8,\n    metroLineIds: [361]\n}];\n\nexport function getMetroList(state: State): FilterOption[] {\n    const { region } = state;\n    const key = \"station\";\n    const metroLineIds = METRO_MAP.find(metroLine => metroLine.regionId.toString() === region)?.metroLineIds;\n    if (!metroLineIds)\n        return [];\n    return METRO.filter(metro => metroLineIds.includes(metro.id))\n        .map(metro => ({\n            id: metro.id.toString(),\n            key: \"metro\",\n            name: metro.name,\n            child: getFilterAllOption(key).concat(metro.child.map( child => ({\n                id: child.id.toString(),\n                key: key,\n                name: child.name\n            })))\n        }));\n}", "import type { State } from '@/state';\nimport type { FilterOption } from './option';\n\ninterface SchoolCategory {\n    regionId: number,\n    regionName: string,\n    schools: SchoolFilter[]\n}\n\ninterface SchoolFilter {\n    id: number;\n    name: string;\n}\n\nconst SCHOOL: SchoolCategory[] = [{\n    regionId: 1,\n    regionName: \"\u53F0\u5317\u5E02\",\n    schools: [{\n        id: 191,\n        name: \"\u53F0\u7063\u5927\u5B78\"\n    }, {\n        id: 272,\n        name: \"\u6771\u5433\u5927\u5B78\"\n    }, {\n        id: 401,\n        name: \"\u653F\u6CBB\u5927\u5B78\"\n    }, {\n        id: 137,\n        name: \"\u5927\u540C\u5927\u5B78\"\n    }, {\n        id: 314,\n        name: \"\u967D\u660E\u5927\u5B78\"\n    }, {\n        id: 273,\n        name: \"\u9298\u50B3\u5927\u5B78\"\n    }, {\n        id: 397,\n        name: \"\u4E16\u65B0\u5927\u5B78\"\n    }, {\n        id: 140,\n        name: \"\u5BE6\u8E10\u5927\u5B78\"\n    }, {\n        id: 233,\n        name: \"\u53F0\u5317\u91AB\u5B78\u5927\u5B78\"\n    }, {\n        id: 269,\n        name: \"\u4E2D\u570B\u6587\u5316\u5927\u5B78\"\n    }, {\n        id: 4869,\n        name: \"\u4E2D\u570B\u79D1\u6280\u5927\u5B78\"\n    }, {\n        id: 193,\n        name: \"\u53F0\u7063\u5E2B\u7BC4\u5927\u5B78\"\n    }, {\n        id: 192,\n        name: \"\u53F0\u7063\u79D1\u6280\u5927\u5B78\"\n    }, {\n        id: 189,\n        name: \"\u53F0\u5317\u79D1\u6280\u5927\u5B78\"\n    }, {\n        id: 308,\n        name: \"\u53F0\u5317\u85DD\u8853\u5927\u5B78\"\n    }, {\n        id: 7429,\n        name: \"\u53F0\u7063\u6232\u66F2\u5B78\u9662\"\n    }, {\n        id: 7404,\n        name: \"\u570B\u7ACB\u53F0\u5317\u6559\u80B2\u5927\u5B78\"\n    }, {\n        id: 94,\n        name: \"\u53F0\u5317\u5546\u696D\u5927\u5B78\"\n    }]\n}, {\n    regionId: 8,\n    regionName: \"\u53F0\u4E2D\u5E02\",\n    schools: [{\n        id: 1398,\n        name: \"\u4E2D\u8208\u5927\u5B78\"\n    }, {\n        id: 1480,\n        name: \"\u6771\u6D77\u5927\u5B78\"\n    }, {\n        id: 1481,\n        name: \"\u9022\u7532\u5927\u5B78\"\n    }, {\n        id: 1430,\n        name: \"\u4E2D\u570B\u91AB\u85E5\u5927\u5B78\"\n    }, {\n        id: 1397,\n        name: \"\u4E2D\u5C71\u91AB\u5B78\u5927\u5B78\"\n    }, {\n        id: 1482,\n        name: \"\u50D1\u5149\u79D1\u6280\u5927\u5B78\"\n    }, {\n        id: 7400,\n        name: \"\u53F0\u4E2D\u6559\u80B2\u5927\u5B78\"\n    }, {\n        id: 1432,\n        name: \"\u53F0\u7063\u9AD4\u80B2\u904B\u52D5\u5927\u5B78\"\n    }, {\n        id: 6657,\n        name: \"\u5DBA\u6771\u79D1\u6280\u5927\u5B78\"\n    }, {\n        id: 1431,\n        name: \"\u53F0\u4E2D\u79D1\u6280\u5927\u5B78\"\n    }, {\n        id: 28891,\n        name: \"\u4E2D\u53F0\u79D1\u6280\u5927\u5B78\"\n    }, {\n        id: 7432,\n        name: \"\u4E9E\u6D32\u5927\u5B78\"\n    }, {\n        id: 1682,\n        name: \"\u5F18\u5149\u79D1\u6280\u5927\u5B78\"\n    }, {\n        id: 1683,\n        name: \"\u975C\u5B9C\u5927\u5B78\"\n    }, {\n        id: 1521,\n        name: \"\u52E4\u76CA\u79D1\u6280\u5927\u5B78\"\n    }, {\n        id: 66356,\n        name: \"\u4E2D\u570B\u91AB\u85E5\u5927\u5B78\u6C34\u6E73\u6821\u5340\"\n    }]\n}, {\n    regionId: 15,\n    regionName: \"\u53F0\u5357\u5E02\",\n    schools: [{\n        id: 2670,\n        name: \"\u6210\u529F\u5927\u5B78\"\n    }, {\n        id: 7410,\n        name: \"\u570B\u7ACB\u53F0\u5357\u5927\u5B78\"\n    }, {\n        id: 2745,\n        name: \"\u5EB7\u5BE7\u5927\u5B78\"\n    }, {\n        id: 2774,\n        name: \"\u9577\u69AE\u5927\u5B78\"\n    }, {\n        id: 2846,\n        name: \"\u53F0\u7063\u9996\u5E9C\u5927\u5B78\"\n    }, {\n        id: 2765,\n        name: \"\u5357\u53F0\u79D1\u6280\u5927\u5B78\"\n    }, {\n        id: 2766,\n        name: \"\u5D11\u5C71\u79D1\u6280\u5927\u5B78\"\n    }, {\n        id: 7434,\n        name: \"\u53F0\u5357\u61C9\u7528\u79D1\u6280\u5927\u5B78\"\n    }, {\n        id: 2815,\n        name: \"\u5609\u5357\u85E5\u7406\u5927\u5B78\"\n    }, {\n        id: 37481,\n        name: \"\u4E2D\u83EF\u91AB\u4E8B\u79D1\u6280\u5927\u5B78\"\n    }]\n}, {\n    regionId: 17,\n    regionName: \"\u9AD8\u96C4\u5E02\",\n    schools: [{\n        id: 3065,\n        name: \"\u4E2D\u5C71\u5927\u5B78\"\n    }, {\n        id: 3159,\n        name: \"\u9AD8\u96C4\u9910\u65C5\u5927\u5B78\"\n    }, {\n        id: 3120,\n        name: \"\u9AD8\u96C4\u91AB\u5B78\u5927\u5B78\"\n    }, {\n        id: 3046,\n        name: \"\u9AD8\u96C4\u5E2B\u7BC4\u5927\u5B78\"\n    }, {\n        id: 3138,\n        name: \"\u570B\u7ACB\u9AD8\u96C4\u5927\u5B78\"\n    }, {\n        id: 27632,\n        name: \"\u6587\u85FB\u5916\u8A9E\u5B78\u9662\"\n    }, {\n        id: 3137,\n        name: \"\u9AD8\u96C4\u7B2C\u4E00\u79D1\u6280\u5927\u5B78\"\n    }, {\n        id: 3119,\n        name: \"\u9AD8\u96C4\u61C9\u7528\u79D1\u6280\u5927\u5B78\"\n    }, {\n        id: 7574,\n        name: \"\u570B\u7ACB\u9AD8\u96C4\u6D77\u6D0B\u79D1\u6280\u5927\u5B78\"\n    }, {\n        id: 3355,\n        name: \"\u7FA9\u5B88\u5927\u5B78\"\n    }, {\n        id: 3245,\n        name: \"\u6A39\u5FB7\u79D1\u6280\u5927\u5B78\"\n    }, {\n        id: 3326,\n        name: \"\u8F14\u82F1\u79D1\u6280\u5927\u5B78\"\n    }, {\n        id: 3340,\n        name: \"\u6B63\u4FEE\u79D1\u6280\u5927\u5B78\"\n    }, {\n        id: 66296,\n        name: \"\u9AD8\u82D1\u79D1\u6280\u5927\u5B78\"\n    }, {\n        id: 66297,\n        name: \"\u6771\u65B9\u8A2D\u8A08\u5B78\u9662\"\n    }]\n}, {\n    regionId: 6,\n    regionName: \"\u6843\u5712\u5E02\",\n    schools: [{\n        id: 837,\n        name: \"\u4E2D\u539F\u5927\u5B78\"\n    }, {\n        id: 836,\n        name: \"\u4E2D\u592E\u5927\u5B78\"\n    }, {\n        id: 956,\n        name: \"\u9577\u5E9A\u5927\u5B78\"\n    }, {\n        id: 958,\n        name: \"\u9298\u50B3\u5927\u5B78\u6843\u5712\u6821\u5340\"\n    }, {\n        id: 960,\n        name: \"\u9AD4\u80B2\u5927\u5B78\"\n    }, {\n        id: 838,\n        name: \"\u5143\u667A\u5927\u5B78\"\n    }, {\n        id: 7425,\n        name: \"\u958B\u5357\u5927\u5B78\"\n    }, {\n        id: 839,\n        name: \"\u6843\u5712\u5275\u65B0\u6280\u8853\u5B78\u9662\"\n    }, {\n        id: 959,\n        name: \"\u9F8D\u83EF\u79D1\u6280\u5927\u5B78\"\n    }, {\n        id: 841,\n        name: \"\u842C\u80FD\u79D1\u6280\u5927\u5B78\"\n    }, {\n        id: 840,\n        name: \"\u5065\u884C\u79D1\u6280\u5927\u5B78\"\n    }]\n}, {\n    regionId: 4,\n    regionName: \"\u65B0\u7AF9\u5E02\",\n    schools: [{\n        id: 1070,\n        name: \"\u6E05\u83EF\u5927\u5B78\"\n    }, {\n        id: 1068,\n        name: \"\u4EA4\u901A\u5927\u5B78\"\n    }, {\n        id: 1097,\n        name: \"\u4E2D\u83EF\u5927\u5B78\"\n    }, {\n        id: 1099,\n        name: \"\u7384\u5958\u5927\u5B78\"\n    }, {\n        id: 6743,\n        name: \"\u570B\u7ACB\u6E05\u83EF\u5927\u5B78\u5357\u5927\u6821\u5340\"\n    }, {\n        id: 7424,\n        name: \"\u5143\u57F9\u91AB\u4E8B\u79D1\u6280\u5927\u5B78\"\n    }]\n}, {\n    regionId: 3,\n    regionName: \"\u65B0\u5317\u5E02\",\n    schools: [{\n        id: 755,\n        name: \"\u6DE1\u6C5F\u5927\u5B78\"\n    }, {\n        id: 687,\n        name: \"\u8F14\u4EC1\u5927\u5B78\"\n    }, {\n        id: 480,\n        name: \"\u83EF\u68B5\u5927\u5B78\"\n    }, {\n        id: 753,\n        name: \"\u771F\u7406\u5927\u5B78\"\n    }, {\n        id: 450,\n        name: \"\u53F0\u7063\u85DD\u8853\u5927\u5B78\"\n    }, {\n        id: 6237,\n        name: \"\u660E\u5FD7\u79D1\u6280\u5927\u5B78\"\n    }, {\n        id: 7430,\n        name: \"\u666F\u6587\u79D1\u6280\u5927\u5B78\"\n    }, {\n        id: 452,\n        name: \"\u81F4\u7406\u6280\u8853\u5B78\u9662\"\n    }, {\n        id: 709,\n        name: \"\u9192\u543E\u79D1\u6280\u5927\u5B78\"\n    }, {\n        id: 451,\n        name: \"\u4E9E\u6771\u6280\u8853\u5B78\u9662\"\n    }, {\n        id: 473,\n        name: \"\u6771\u5357\u79D1\u6280\u5927\u5B78\"\n    }, {\n        id: 592,\n        name: \"\u5FB7\u9716\u6280\u8853\u5B78\u9662\"\n    }, {\n        id: 696,\n        name: \"\u9ECE\u660E\u6280\u8853\u5B78\u9662\"\n    }, {\n        id: 6208,\n        name: \"\u83EF\u590F\u79D1\u6280\u5927\u5B78\"\n    }, {\n        id: 8245,\n        name: \"\u53F0\u5317\u5927\u5B78\u4E09\u5CFD\u6821\u5340\"\n    }]\n}, {\n    regionId: 2,\n    regionName: \"\u57FA\u9686\u5E02\",\n    schools: [{\n        id: 30,\n        name: \"\u53F0\u7063\u6D77\u6D0B\u5927\u5B78\"\n    }]\n}, {\n    regionId: 10,\n    regionName: \"\u5F70\u5316\u7E23\",\n    schools: [{\n        id: 1770,\n        name: \"\u5F70\u5316\u5E2B\u7BC4\u5927\u5B78\"\n    }, {\n        id: 1769,\n        name: \"\u5EFA\u570B\u79D1\u6280\u5927\u5B78\"\n    }, {\n        id: 1888,\n        name: \"\u5927\u8449\u5927\u5B78\"\n    }, {\n        id: 35664,\n        name: \"\u660E\u9053\u5927\u5B78\"\n    }]\n}, {\n    regionId: 23,\n    regionName: \"\u82B1\u84EE\u7E23\",\n    schools: [{\n        id: 3834,\n        name: \"\u6148\u6FDF\u5927\u5B78\"\n    }, {\n        id: 3884,\n        name: \"\u6771\u83EF\u5927\u5B78\"\n    }, {\n        id: 3835,\n        name: \"\u6148\u6FDF\u6280\u8853\u5B78\u9662\"\n    }]\n}, {\n    regionId: 19,\n    regionName: \"\u5C4F\u6771\u7E23\",\n    schools: [{\n        id: 3537,\n        name: \"\u5C4F\u6771\u79D1\u6280\u5927\u5B78\"\n    }, {\n        id: 7414,\n        name: \"\u5C4F\u6771\u5927\u5B78\"\n    }]\n}, {\n    regionId: 12,\n    regionName: \"\u5609\u7FA9\u5E02\",\n    schools: [{\n        id: 2441,\n        name: \"\u5609\u7FA9\u5927\u5B78\"\n    }]\n}, {\n    regionId: 22,\n    regionName: \"\u53F0\u6771\u7E23\",\n    schools: [{\n        id: 7423,\n        name: \"\u53F0\u6771\u5927\u5B78\"\n    }]\n}, {\n    regionId: 13,\n    regionName: \"\u5609\u7FA9\u7E23\",\n    schools: [{\n        id: 2604,\n        name: \"\u4E2D\u6B63\u5927\u5B78\"\n    }]\n}, {\n    regionId: 11,\n    regionName: \"\u5357\u6295\u7E23\",\n    schools: [{\n        id: 2072,\n        name: \"\u66A8\u5357\u570B\u969B\u5927\u5B78\"\n    }]\n}, {\n    regionId: 14,\n    regionName: \"\u96F2\u6797\u7E23\",\n    schools: [{\n        id: 2277,\n        name: \"\u96F2\u6797\u79D1\u6280\u5927\u5B78\"\n    }, {\n        id: 7427,\n        name: \"\u864E\u5C3E\u79D1\u6280\u5927\u5B78\"\n    }]\n}, {\n    regionId: 21,\n    regionName: \"\u5B9C\u862D\u7E23\",\n    schools: [{\n        id: 3696,\n        name: \"\u5B9C\u862D\u5927\u5B78\"\n    }, {\n        id: 7433,\n        name: \"\u4F5B\u5149\u5927\u5B78\"\n    }]\n}, {\n    regionId: 7,\n    regionName: \"\u82D7\u6817\u7E23\",\n    schools: [{\n        id: 7426,\n        name: \"\u806F\u5408\u5927\u5B78\"\n    }]\n}, {\n    regionId: 5,\n    regionName: \"\u65B0\u7AF9\u7E23\",\n    schools: [{\n        id: 1140,\n        name: \"\u660E\u65B0\u79D1\u6280\u5927\u5B78\"\n    }]\n}];\n\nexport function getSchoolList(state: State): FilterOption[] {\n    const { region } = state;\n    return SCHOOL.filter(school => school.regionId.toFixed() === region)\n        .map(school => school.schools)\n        .flat()\n        .map(school => {\n            return {\n                id: school.id.toString(),\n                key: 'school',\n                name: school.name\n            };\n        });\n}", "import type { State } from '@/state';\nimport type { FilterOption } from './option';\nimport { getFilterAllOption } from './function';\n\ninterface CircleCategory {\n    regionId: number,\n    regionName: string,\n    circles: CircleFilter[]\n}\n\ninterface CircleFilter {\n    id: number;\n    name: string;\n}\n\nconst NEW_CIRCLES: CircleCategory[] = [\n    {\n        \"regionId\": 1,\n        \"regionName\": \"\u53F0\u5317\u5E02\",\n        \"circles\": [\n            {\n                \"id\": 1,\n                \"name\": \"\u4FE1\u7FA9\u57FA\u9686\u5340\"\n            },\n            {\n                \"id\": 2,\n                \"name\": \"\u6C11\u751F\u6566\u5317\u5340\"\n            },\n            {\n                \"id\": 3,\n                \"name\": \"\u5357\u6E2F\u7D93\u8CBF\u5712\u5340\"\n            },\n            {\n                \"id\": 4,\n                \"name\": \"\u53F0\u5317\u8ECA\u7AD9\u5340\"\n            },\n            {\n                \"id\": 5,\n                \"name\": \"\u53E4\u4EAD\u5546\u5708\"\n            },\n            {\n                \"id\": 6,\n                \"name\": \"\u5357\u4EAC\u677E\u6C5F\u5340\"\n            },\n            {\n                \"id\": 7,\n                \"name\": \"\u5357\u4EAC\u5149\u5FA9\u5340\"\n            },\n            {\n                \"id\": 8,\n                \"name\": \"\u5167\u6E56\u79D1\u5B78\u5712\u5340\"\n            },\n            {\n                \"id\": 9,\n                \"name\": \"\u5167\u6E56\u7B2C\u4E94\u671F\u91CD\u5283\u5340\"\n            },\n            {\n                \"id\": 10,\n                \"name\": \"\u5927\u7063\u5357\u6BB5\u5DE5\u696D\u5340\"\n            },\n            {\n                \"id\": 11,\n                \"name\": \"\u6566\u5316\u5357\u8DEF\u5340\"\n            },\n            {\n                \"id\": 12,\n                \"name\": \"\u4E2D\u5C71\u5317\u8DEF\u5340\"\n            }\n        ]\n    }\n];\n\nconst CIRCLES: CircleCategory[] = [{\n    regionId: 1,\n    regionName: \"\u53F0\u5317\u5E02\",\n    circles: [{\n        id: 22309,\n        name: \"\u5167\u6E56\u79D1\u6280\u5712\u5340\"\n    }, {\n        id: 22310,\n        name: \"\u5357\u6E2F\u8EDF\u9AD4\u5DE5\u696D\u5712\u5340\"\n    }, {\n        id: 22175,\n        name: \"\u842C\u83EF\u5546\u5708\"\n    }, {\n        id: 22180,\n        name: \"\u5929\u6BCD\u5546\u5708\"\n    }, {\n        id: 22184,\n        name: \"\u901A\u5316\u5546\u5708\"\n    }, {\n        id: 22187,\n        name: \"\u96D9\u57CE\u5546\u5708\"\n    }, {\n        id: 22415,\n        name: \"\u666F\u7F8E\u5546\u5708\"\n    }, {\n        id: 26499,\n        name: \"\u4FE1\u7FA9\u5546\u5708\"\n    }, {\n        id: 46300,\n        name: \"\u5E2B\u5927\u5546\u5708\"\n    }, {\n        id: 22186,\n        name: \"\u4E94\u5206\u57D4\u5546\u5708\"\n    }, {\n        id: 22183,\n        name: \"\u5FE0\u5B5DSOGO\u5546\u5708\"\n    }, {\n        id: 22173,\n        name: \"\u653F\u5927\u842C\u8208\u5546\u5708\"\n    }, {\n        id: 22179,\n        name: \"\u5E2B\u5927\u6C38\u5EB7\u5546\u5708\"\n    }, {\n        id: 22181,\n        name: \"\u58EB\u6797\u591C\u5E02\u5546\u5708\"\n    }, {\n        id: 22185,\n        name: \"\u53F0\u5927\u516C\u9928\u5546\u5708\"\n    }, {\n        id: 22189,\n        name: \"\u56DB\u5E73\u967D\u5149\u5546\u5708\"\n    }, {\n        id: 22190,\n        name: \"\u5357\u660C\u5BB6\u5177\u5546\u5708\"\n    }, {\n        id: 52828,\n        name: \"\u6C11\u751F\u6771\u8DEF\u5546\u5708\"\n    }, {\n        id: 22176,\n        name: \"\u897F\u9580\u5F92\u6B65\u5340\u5546\u5708\"\n    }, {\n        id: 22178,\n        name: \"\u6C85\u9675\u8857\u57CE\u5167\u5546\u5708\"\n    }, {\n        id: 22182,\n        name: \"\u65B0\u5317\u6295\u6EAB\u6CC9\u5546\u5708\"\n    }, {\n        id: 26498,\n        name: \"\u5357\u6E2F\u5BB6\u6A02\u798F\u5546\u5708\"\n    }, {\n        id: 22174,\n        name: \"\u83EF\u9670\u5F8C\u706B\u8ECA\u7AD9\u5546\u5708\"\n    }, {\n        id: 22177,\n        name: \"\u4E2D\u5C71\u5317\u8DEF\u5A5A\u7D17\u5546\u5708\"\n    }, {\n        id: 22188,\n        name: \"\u611B\u570B\u6771\u8DEF\u5A5A\u7D17\u5546\u5708\"\n    }]\n}, {\n    regionId: 8,\n    regionName: \"\u53F0\u4E2D\u5E02\",\n    circles: [{\n        id: 22356,\n        name: \"\u53F0\u4E2D\u5DE5\u696D\u5340\"\n    }, {\n        id: 22316,\n        name: \"\u4E2D\u79D1\u53F0\u4E2D\u5712\u5340\"\n    }, {\n        id: 22238,\n        name: \"\u4E00\u4E2D\u5546\u5708\"\n    }, {\n        id: 22233,\n        name: \"\u5927\u9686\u8DEF\u5546\u5708\"\n    }, {\n        id: 22240,\n        name: \"\u81EA\u7531\u8DEF\u5546\u5708\"\n    }, {\n        id: 22232,\n        name: \"\u5927\u5751\u5713\u74B0\u5546\u5708\"\n    }, {\n        id: 22234,\n        name: \"\u7CBE\u660E\u4E00\u8857\u5546\u5708\"\n    }, {\n        id: 22236,\n        name: \"\u7F8E\u8853\u5712\u9053\u5546\u5708\"\n    }, {\n        id: 22239,\n        name: \"\u9022\u7532\u591C\u5E02\u5546\u5708\"\n    }, {\n        id: 22241,\n        name: \"\u53F0\u4E2D\u5927\u58A9\u5546\u5708\"\n    }, {\n        id: 22242,\n        name: \"\u53F0\u4E2D\u4E2D\u79D1\u5546\u5708\"\n    }, {\n        id: 22231,\n        name: \"\u5929\u6D25\u8DEF\u670D\u98FE\u5546\u5708\"\n    }, {\n        id: 22235,\n        name: \"\u53F0\u4E2D\u96FB\u5B50\u8857\u5546\u5708\"\n    }, {\n        id: 22237,\n        name: \"\u7E7C\u5149\u5546\u5E97\u8857\u5546\u5708\"\n    }, {\n        id: 22353,\n        name: \"\u5927\u91CC\u5DE5\u696D\u5340\"\n    }, {\n        id: 22317,\n        name: \"\u4E2D\u79D1\u53F0\u4E2D\u5712\u5340\"\n    }, {\n        id: 22318,\n        name: \"\u4E2D\u79D1\u540E\u91CC\u5712\u5340\"\n    }, {\n        id: 40890,\n        name: \"\u540E\u91CC\u79D1\u5B78\u5712\u5340\"\n    }, {\n        id: 22354,\n        name: \"\u53F0\u4E2D\u5E7C\u7345\u5DE5\u696D\u5340\"\n    }, {\n        id: 22355,\n        name: \"\u53F0\u4E2D\u6E2F\u95DC\u9023\u5DE5\u696D\u5340\"\n    }, {\n        id: 22246,\n        name: \"\u9727\u5CF0\u9109\u5546\u5708\"\n    }, {\n        id: 22247,\n        name: \"\u6771\u52E2\u93AE\u5546\u5708\"\n    }, {\n        id: 22243,\n        name: \"\u8C50\u539F\u5FA9\u8208\u8DEF\u5546\u5708\"\n    }, {\n        id: 22244,\n        name: \"\u592A\u5E73\u5E02\u6A39\u5B5D\u8DEF\u5546\u5708\"\n    }, {\n        id: 22245,\n        name: \"\u68A7\u68F2\u93AE\u8236\u4F86\u54C1\u5546\u5708\"\n    }, {\n        id: 66295,\n        name: \"\u975C\u5B9C\u5546\u5708\"\n    }]\n}, {\n    regionId: 15,\n    regionName: \"\u53F0\u5357\u5E02\",\n    circles: [{\n        id: 22375,\n        name: \"\u5B89\u5E73\u5DE5\u696D\u5340\"\n    }, {\n        id: 22320,\n        name: \"\u53F0\u5357\u79D1\u6280\u5DE5\u696D\u5340\"\n    }, {\n        id: 22250,\n        name: \"\u5B89\u5E73\u5546\u5708\"\n    }, {\n        id: 22248,\n        name: \"\u4E09\u661F\u4E16\u754C\u5546\u5708\"\n    }, {\n        id: 22249,\n        name: \"\u53F0\u5357\u4E2D\u6B63\u8DEF\u5546\u5708\"\n    }, {\n        id: 22372,\n        name: \"\u6C38\u5EB7\u5DE5\u696D\u5340\"\n    }, {\n        id: 22373,\n        name: \"\u5B98\u7530\u5DE5\u696D\u5340\"\n    }, {\n        id: 22374,\n        name: \"\u65B0\u71DF\u5DE5\u696D\u5340\"\n    }, {\n        id: 22321,\n        name: \"\u53F0\u5357\u79D1\u5B78\u5712\u5340\"\n    }, {\n        id: 22252,\n        name: \"\u9EBB\u8C46\u93AE\u5546\u5708\"\n    }, {\n        id: 22253,\n        name: \"\u65B0\u71DF\u5E02\u9B45\u529B\u5546\u5708\"\n    }, {\n        id: 22251,\n        name: \"\u65B0\u5316\u93AE\u5927\u76EE\u964D\u5546\u5708\"\n    }]\n}, {\n    regionId: 17,\n    regionName: \"\u9AD8\u96C4\u5E02\",\n    circles: [{\n        id: 22378,\n        name: \"\u9CF3\u5C71\u5DE5\u696D\u5340\"\n    }, {\n        id: 22383,\n        name: \"\u9AD8\u96C4\u5E02\u81E8\u6D77\u5DE5\u696D\u5340\"\n    }, {\n        id: 22258,\n        name: \"\u9577\u660E\u5546\u5708\"\n    }, {\n        id: 22261,\n        name: \"\u5F8C\u9A5B\u5546\u5708\"\n    }, {\n        id: 22267,\n        name: \"\u660E\u8AA0\u5546\u5708\"\n    }, {\n        id: 22268,\n        name: \"\u745E\u5CF0\u5546\u5708\"\n    }, {\n        id: 22270,\n        name: \"\u5D07\u5FB7\u5546\u5708\"\n    }, {\n        id: 22271,\n        name: \"\u611B\u6CB3\u5546\u5708\"\n    }, {\n        id: 22273,\n        name: \"\u4E09\u591A\u5546\u5708\"\n    }, {\n        id: 22255,\n        name: \"\u65B0\u5800\u6C5F\u5546\u5708\"\n    }, {\n        id: 22269,\n        name: \"\u7F8E\u8853\u9928\u5546\u5708\"\n    }, {\n        id: 22257,\n        name: \"\u4E2D\u5FC3\u9B45\u529B\u5546\u5708\"\n    }, {\n        id: 22262,\n        name: \"\u5357\u83EF\u89C0\u5149\u5546\u5834\"\n    }, {\n        id: 22272,\n        name: \"\u6F22\u795E\u5927\u7ACB\u5546\u5708\"\n    }, {\n        id: 22256,\n        name: \"\u5927\u9023\u8857\u5F62\u8C61\u5546\u5708\"\n    }, {\n        id: 22259,\n        name: \"\u8208\u4E2D\u82B1\u5349\u8857\u5546\u5708\"\n    }, {\n        id: 22254,\n        name: \"\u4E09\u9CF3\u4E2D\u8857\u5F62\u8C61\u5546\u5708\"\n    }, {\n        id: 22260,\n        name: \"\u9E7D\u57D5\u5800\u6C5F\u5546\u5834\u5546\u5708\"\n    }, {\n        id: 22263,\n        name: \"\u516D\u5408\u89C0\u5149\u591C\u5E02\u5546\u5708\"\n    }, {\n        id: 22264,\n        name: \"\u8208\u4E2D\u89C0\u5149\u591C\u5E02\u5546\u5708\"\n    }, {\n        id: 22265,\n        name: \"\u5149\u83EF\u89C0\u5149\u591C\u5E02\u5546\u5708\"\n    }, {\n        id: 22266,\n        name: \"\u5FE0\u5B5D\u89C0\u5149\u591C\u5E02\u5546\u5708\"\n    }, {\n        id: 22376,\n        name: \"\u5927\u767C\u5DE5\u696D\u5340\"\n    }, {\n        id: 22377,\n        name: \"\u9CF3\u5C71\u5DE5\u696D\u5340\"\n    }, {\n        id: 22379,\n        name: \"\u5927\u793E\u5DE5\u696D\u5340\"\n    }, {\n        id: 22380,\n        name: \"\u4EC1\u6B66\u5DE5\u696D\u5340\"\n    }, {\n        id: 22381,\n        name: \"\u6C38\u5B89\u5DE5\u696D\u5340\"\n    }, {\n        id: 22382,\n        name: \"\u6797\u5712\u5DE5\u696D\u5340\"\n    }, {\n        id: 22322,\n        name: \"\u9AD8\u96C4\u79D1\u5B78\u5712\u5340\"\n    }, {\n        id: 22275,\n        name: \"\u7532\u4ED9\u9109\u5F62\u8C61\u5546\u5708\"\n    }, {\n        id: 22274,\n        name: \"\u65D7\u5C71\u93AE\u4E2D\u5C71\u8DEF\u5546\u5708\"\n    }, {\n        id: 22276,\n        name: \"\u9CF3\u5C71\u5E02\u4E09\u6C11\u8DEF\u5546\u5708\"\n    }]\n}, {\n    regionId: 6,\n    regionName: \"\u6843\u5712\u5E02\",\n    circles: [{\n        id: 22337,\n        name: \"\u5927\u5712\u5DE5\u696D\u5340\"\n    }, {\n        id: 22338,\n        name: \"\u4E2D\u58E2\u5DE5\u696D\u5340\"\n    }, {\n        id: 22339,\n        name: \"\u5E73\u93AE\u5DE5\u696D\u5340\"\n    }, {\n        id: 22341,\n        name: \"\u89C0\u97F3\u5DE5\u696D\u5340\"\n    }, {\n        id: 22342,\n        name: \"\u9F9C\u5C71\u5DE5\u696D\u5340\"\n    }, {\n        id: 22324,\n        name: \"\u9F8D\u6F6D\u6E34\u671B\u5712\u5340\"\n    }, {\n        id: 22340,\n        name: \"\u6843\u5712\u5E7C\u7345\u5DE5\u696D\u5340\"\n    }, {\n        id: 22345,\n        name: \"\u6797\u53E3\u5DE5[\u4E09]\u5DE5\u696D\u5340\"\n    }, {\n        id: 22346,\n        name: \"\u6797\u53E3\u5DE5[\u56DB]\u5DE5\u696D\u5340\"\n    }, {\n        id: 22312,\n        name: \"\u6797\u53E3\u83EF\u4E9E\u79D1\u6280\u5712\u5340\"\n    }, {\n        id: 22216,\n        name: \"\u96C5\u5178\u5546\u5708\"\n    }, {\n        id: 22217,\n        name: \"\u5927\u6EAA\u5546\u5708\"\n    }, {\n        id: 22218,\n        name: \"\u89D2\u677F\u5C71\u5546\u5708\"\n    }, {\n        id: 22219,\n        name: \"\u5927\u5712\u9109\u5546\u5708\"\n    }, {\n        id: 26501,\n        name: \"\u4E2D\u539F\u5927\u5B78\u5546\u5708\"\n    }, {\n        id: 26503,\n        name: \"\u4E2D\u58E2\u591C\u5E02\u5546\u5708\"\n    }, {\n        id: 52829,\n        name: \"\u6797\u53E3\u9577\u5E9A\u5546\u5708\"\n    }]\n}, {\n    regionId: 4,\n    regionName: \"\u65B0\u7AF9\u5E02\",\n    circles: [{\n        id: 22313,\n        name: \"\u7AF9\u79D1\u5DE5\u696D\u5712\u5340\"\n    }, {\n        id: 22221,\n        name: \"\u6771\u9580\u5F62\u8C61\u5546\u5708\"\n    }, {\n        id: 22223,\n        name: \"\u5317\u9580\u5927\u8857\u5546\u5708\"\n    }, {\n        id: 22224,\n        name: \"\u6E05\u5927\u591C\u5E02\u5546\u5708\"\n    }, {\n        id: 22222,\n        name: \"\u65B0\u7AF9\u820A\u57CE\u5340\u5546\u5708\"\n    }, {\n        id: 22225,\n        name: \"\u65B0\u7AF9SOGO\u7AD9\u524D\u5546\u5708\"\n    }, {\n        id: 22226,\n        name: \"\u6E73\u96C5\u8857\u5927\u6F64\u767C\u5546\u5708\"\n    }]\n}, {\n    regionId: 3,\n    regionName: \"\u65B0\u5317\u5E02\",\n    circles: [{\n        id: 22408,\n        name: \"\u6E6F\u57CE\u5712\u5340\"\n    }, {\n        id: 22326,\n        name: \"\u4E2D\u548C\u5DE5\u696D\u5340\"\n    }, {\n        id: 22327,\n        name: \"\u65B0\u5E97\u5DE5\u696D\u5340\"\n    }, {\n        id: 22333,\n        name: \"\u571F\u57CE\u5DE5\u696D\u5340\"\n    }, {\n        id: 22334,\n        name: \"\u4E94\u80A1\u5DE5\u696D\u5340\"\n    }, {\n        id: 22335,\n        name: \"\u745E\u82B3\u5DE5\u696D\u5340\"\n    }, {\n        id: 22336,\n        name: \"\u6A39\u6797\u5DE5\u696D\u5340\"\n    }, {\n        id: 22343,\n        name: \"\u9F9C\u5C71\u5DE5\u696D\u5340\"\n    }, {\n        id: 22344,\n        name: \"\u6797\u53E3\u5DE5[\u4E8C]\u5DE5\u696D\u5340\"\n    }, {\n        id: 22311,\n        name: \"\u5357\u6E2F\u8EDF\u9AD4\u5DE5\u696D\u5712\u5340\"\n    }, {\n        id: 22414,\n        name: \"\u6C50\u6B62\u6771\u65B9\u79D1\u5B78\u5712\u5340\"\n    }, {\n        id: 22192,\n        name: \"\u70CF\u4F86\u5546\u5708\"\n    }, {\n        id: 22195,\n        name: \"\u576A\u6797\u5546\u5708\"\n    }, {\n        id: 22199,\n        name: \"\u5E78\u798F\u5546\u5708\"\n    }, {\n        id: 22205,\n        name: \"\u91D1\u570B\u5546\u5708\"\n    }, {\n        id: 22206,\n        name: \"\u5929\u53F0\u5546\u5708\"\n    }, {\n        id: 22213,\n        name: \"\u78A7\u6F6D\u5546\u5708\"\n    }, {\n        id: 22214,\n        name: \"\u6DE1\u6C34\u5546\u5708\"\n    }, {\n        id: 22197,\n        name: \"\u9D3B\u91D1\u5BF6\u5546\u5708\"\n    }, {\n        id: 22212,\n        name: \"\u6A1F\u6A39\u7063\u5546\u5708\"\n    }, {\n        id: 22194,\n        name: \"\u9DAF\u6B4C\u8001\u8857\u5546\u5708\"\n    }, {\n        id: 22196,\n        name: \"\u65B0\u838A\u591C\u5E02\u5546\u5708\"\n    }, {\n        id: 22200,\n        name: \"\u677F\u6A4B\u5F8C\u7AD9\u5546\u5708\"\n    }, {\n        id: 22201,\n        name: \"\u677F\u6A4B\u65B0\u7AD9\u5546\u5708\"\n    }, {\n        id: 22202,\n        name: \"\u4E2D\u548C\u6377\u904B\u5546\u5708\"\n    }, {\n        id: 22203,\n        name: \"\u4E2D\u548C\u7A4D\u7A57\u5546\u5708\"\n    }, {\n        id: 22204,\n        name: \"\u6C38\u548C\u9802\u6EAA\u5546\u5708\"\n    }, {\n        id: 22208,\n        name: \"\u5FE0\u5B5D\u6771\u8DEF\u5546\u5708\"\n    }, {\n        id: 22209,\n        name: \"\u570B\u6CF0\u5EFA\u6210\u5546\u5708\"\n    }, {\n        id: 22211,\n        name: \"\u660E\u5CF0\u5E02\u5834\u5546\u5708\"\n    }, {\n        id: 22215,\n        name: \"\u571F\u57CE\u5EF6\u5409\u5546\u5708\"\n    }, {\n        id: 22418,\n        name: \"\u4E09\u548C\u591C\u5E02\u5546\u5708\"\n    }, {\n        id: 22191,\n        name: \"\u8606\u6D32\u5E02\u5EDF\u8857\u5546\u5708\"\n    }, {\n        id: 22193,\n        name: \"\u745E\u82B3\u93AE\u4E5D\u4EFD\u5546\u5708\"\n    }, {\n        id: 22207,\n        name: \"\u6C50\u6B62\u9EA5\u7576\u52DE\u5546\u5708\"\n    }, {\n        id: 22210,\n        name: \"\u5927\u6C50\u6B62\u767E\u8CA8\u5546\u5708\"\n    }]\n}, {\n    regionId: 2,\n    regionName: \"\u57FA\u9686\u5E02\",\n    circles: [{\n        id: 22332,\n        name: \"\u5927\u6B66\u5D19\u5DE5\u696D\u5340\"\n    }, {\n        id: 22220,\n        name: \"\u54E8\u8239\u982D\u7FA9\u4E8C\u8DEF\u5546\u5708\"\n    }]\n}, {\n    regionId: 10,\n    regionName: \"\u5F70\u5316\u7E23\",\n    circles: [{\n        id: 22358,\n        name: \"\u5168\u8208\u5DE5\u696D\u5340\"\n    }, {\n        id: 22359,\n        name: \"\u82B3\u82D1\u5DE5\u696D\u5340\"\n    }, {\n        id: 22360,\n        name: \"\u798F\u8208\u5DE5\u696D\u5340\"\n    }, {\n        id: 22361,\n        name: \"\u57D4\u982D\u5DE5\u696D\u5340\"\n    }, {\n        id: 22362,\n        name: \"\u7530\u4E2D\u5DE5\u696D\u5340\"\n    }, {\n        id: 22363,\n        name: \"\u5F70\u6FF1\u5DE5\u696D\u5340\"\n    }, {\n        id: 22279,\n        name: \"\u7530\u5C3E\u5546\u5708\"\n    }, {\n        id: 22280,\n        name: \"\u82B3\u82D1\u738B\u529F\u5546\u5708\"\n    }, {\n        id: 22277,\n        name: \"\u6C38\u6A02\u8857\u5F62\u8C61\u5546\u5708\"\n    }, {\n        id: 22278,\n        name: \"\u516B\u5366\u5C71\u98A8\u666F\u5340\u5546\u5708\"\n    }]\n}, {\n    regionId: 23,\n    regionName: \"\u82B1\u84EE\u7E23\",\n    circles: [{\n        id: 22330,\n        name: \"\u5149\u83EF\u5DE5\u696D\u5340\"\n    }, {\n        id: 22281,\n        name: \"\u745E\u7A57\u9109\u821E\u9DB4\u5546\u5708\"\n    }, {\n        id: 22282,\n        name: \"\u82B1\u84EE\u5E02\u5F62\u8C61\u5546\u5708\"\n    }]\n}, {\n    regionId: 24,\n    regionName: \"\u6F8E\u6E56\u7E23\",\n    circles: [{\n        id: 22296,\n        name: \"\u99AC\u516C\u5546\u5708\"\n    }]\n}, {\n    regionId: 19,\n    regionName: \"\u5C4F\u6771\u7E23\",\n    circles: [{\n        id: 22384,\n        name: \"\u5167\u57D4\u5DE5\u696D\u5340\"\n    }, {\n        id: 22385,\n        name: \"\u5C4F\u6771\u5DE5\u696D\u5340\"\n    }, {\n        id: 22386,\n        name: \"\u5C4F\u5357\u5DE5\u696D\u5340\"\n    }, {\n        id: 22290,\n        name: \"\u6046\u6625\u5C0F\u93AE\u5546\u5708\"\n    }, {\n        id: 22289,\n        name: \"\u6046\u6625\u93AE\u58BE\u4E01\u5546\u5708\"\n    }]\n}, {\n    regionId: 12,\n    regionName: \"\u5609\u7FA9\u5E02\",\n    circles: [{\n        id: 22286,\n        name: \"\u5609\u7FA9\u6587\u5316\u8DEF\u5546\u5708\"\n    }, {\n        id: 22287,\n        name: \"\u5609\u7FA9\u5E02\u5927\u96C5\u8DEF\u5546\u5708\"\n    }]\n}, {\n    regionId: 22,\n    regionName: \"\u53F0\u6771\u7E23\",\n    circles: [{\n        id: 22331,\n        name: \"\u8C50\u6A02\u5DE5\u696D\u5340\"\n    }, {\n        id: 22295,\n        name: \"\u77E5\u672C\u6EAB\u6CC9\u5546\u5708\"\n    }]\n}, {\n    regionId: 13,\n    regionName: \"\u5609\u7FA9\u7E23\",\n    circles: [{\n        id: 22367,\n        name: \"\u6C11\u96C4\u5DE5\u696D\u5340\"\n    }, {\n        id: 22368,\n        name: \"\u6A4B\u982D\u5DE5\u696D\u5340\"\n    }, {\n        id: 22369,\n        name: \"\u6734\u5B50\u5DE5\u696D\u5340\"\n    }, {\n        id: 22370,\n        name: \"\u7FA9\u7AF9\u5DE5\u696D\u5340\"\n    }, {\n        id: 22371,\n        name: \"\u5609\u592A\u5DE5\u696D\u5340\"\n    }, {\n        id: 22288,\n        name: \"\u6734\u5B50\u5E02\u5546\u5708\"\n    }]\n}, {\n    regionId: 11,\n    regionName: \"\u5357\u6295\u7E23\",\n    circles: [{\n        id: 22357,\n        name: \"\u5357\u5D17\u53CA\u7AF9\u5C71\u5DE5\u696D\u5340\"\n    }, {\n        id: 22298,\n        name: \"\u7AF9\u5C71\u93AE\u5546\u5708\"\n    }, {\n        id: 22299,\n        name: \"\u9E7F\u8C37\u9109\u5546\u5708\"\n    }, {\n        id: 22300,\n        name: \"\u8349\u5C6F\u93AE\u5546\u5708\"\n    }, {\n        id: 22301,\n        name: \"\u570B\u59D3\u9109\u5546\u5708\"\n    }, {\n        id: 22302,\n        name: \"\u96C6\u96C6\u93AE\u5546\u5708\"\n    }, {\n        id: 22303,\n        name: \"\u5357\u6295\u5E02\u5546\u5708\"\n    }, {\n        id: 22304,\n        name: \"\u4E2D\u5BEE\u9109\u5546\u5708\"\n    }, {\n        id: 22305,\n        name: \"\u6C34\u91CC\u9109\u5546\u5708\"\n    }, {\n        id: 22306,\n        name: \"\u57D4\u91CC\u93AE\u5546\u5708\"\n    }, {\n        id: 22308,\n        name: \"\u4EC1\u611B\u9109\u5546\u5708\"\n    }, {\n        id: 22307,\n        name: \"\u540D\u9593\u9109\u677E\u67CF\u5DBA\u5546\u5708\"\n    }]\n}, {\n    regionId: 14,\n    regionName: \"\u96F2\u6797\u7E23\",\n    circles: [{\n        id: 22364,\n        name: \"\u5143\u9577\u5DE5\u696D\u5340\"\n    }, {\n        id: 22365,\n        name: \"\u8C50\u7530\u5DE5\u696D\u5340\"\n    }, {\n        id: 22366,\n        name: \"\u6597\u516D\u5DE5\u696D\u5340\"\n    }, {\n        id: 22319,\n        name: \"\u4E2D\u79D1\u864E\u5C3E\u5712\u5340\"\n    }, {\n        id: 22323,\n        name: \"\u96F2\u6797\u79D1\u6280\u5DE5\u696D\u5340\"\n    }, {\n        id: 22297,\n        name: \"\u5317\u6E2F\u93AE\u5546\u5708\"\n    }]\n}, {\n    regionId: 21,\n    regionName: \"\u5B9C\u862D\u7E23\",\n    circles: [{\n        id: 22328,\n        name: \"\u9F8D\u5FB7\u5DE5\u696D\u5340\"\n    }, {\n        id: 22329,\n        name: \"\u5229\u6FA4\u5DE5\u696D\u5340\"\n    }, {\n        id: 22293,\n        name: \"\u7901\u6EAA\u5546\u5708\"\n    }, {\n        id: 22294,\n        name: \"\u7F85\u6771\u5546\u5708\"\n    }, {\n        id: 22291,\n        name: \"\u51AC\u5C71\u9109\u5546\u5708\"\n    }, {\n        id: 22292,\n        name: \"\u8607\u6FB3\u4E2D\u5C71\u8DEF\u5546\u5708\"\n    }]\n}, {\n    regionId: 7,\n    regionName: \"\u82D7\u6817\u7E23\",\n    circles: [{\n        id: 22347,\n        name: \"\u7AF9\u5357\u5DE5\u696D\u5340\"\n    }, {\n        id: 22348,\n        name: \"\u9285\u947C\u5DE5\u696D\u5340\"\n    }, {\n        id: 22349,\n        name: \"\u982D\u4EFD\u5DE5\u696D\u5340\"\n    }, {\n        id: 22350,\n        name: \"\u4E2D\u8208\u5DE5\u696D\u5340\"\n    }, {\n        id: 22352,\n        name: \"\u4E09\u7FA9\u5DE5\u696D\u5340\"\n    }, {\n        id: 22315,\n        name: \"\u7AF9\u79D1\u7AF9\u5357\u57FA\u5730\"\n    }, {\n        id: 22351,\n        name: \"\u5EE3\u6E90\u79D1\u6280\u5712\u5340\"\n    }, {\n        id: 22283,\n        name: \"\u4E09\u7FA9\u6C34\u7F8E\u8857\u5546\u5708\"\n    }, {\n        id: 22285,\n        name: \"\u5357\u5E84\u9109\u9B45\u529B\u5546\u5708\"\n    }, {\n        id: 22284,\n        name: \"\u82D7\u6817\u5E02\u5149\u5FA9\u8DEF\u5546\u5708\"\n    }]\n}, {\n    regionId: 5,\n    regionName: \"\u65B0\u7AF9\u7E23\",\n    circles: [{\n        id: 22325,\n        name: \"\u65B0\u7AF9\u5DE5\u696D\u5340\"\n    }, {\n        id: 22314,\n        name: \"\u7AF9\u79D1\u5DE5\u696D\u5712\u5340\"\n    }, {\n        id: 22227,\n        name: \"\u5167\u7063\u5546\u5708\"\n    }, {\n        id: 22228,\n        name: \"\u95DC\u897F\u5546\u5708\"\n    }, {\n        id: 22230,\n        name: \"\u7AF9\u5317\u5149\u660E\u5546\u5708\"\n    }, {\n        id: 22229,\n        name: \"\u5317\u57D4\u9109\u9B45\u529B\u5546\u5708\"\n    }]\n}];\n\nexport function getCircleList(state: State): FilterOption[] {\n    const { region, kind } = state;\n    const key = 'shopping';\n    return getFilterAllOption(key).concat(\n        ((region === \"1\" && kind) ? NEW_CIRCLES : CIRCLES).filter(circles => circles.regionId.toString() === region)\n            .map(circles => circles.circles).flat()\n            .map(circle => {\n                return {\n                    id: circle.id.toString(),\n                    key: key,\n                    name: circle.name\n                }\n            })\n    );\n}", "import type { State } from '@/state';\nimport type { FilterOption } from './option';\nimport { getSectionList } from \"./section\";\nimport { getMetroList } from \"./metro_station\";\nimport { getSchoolList } from \"./school\";\nimport { getCircleList } from \"./circles\";\n\nexport function getLocationList(state: State): FilterOption[] {\n    return [\n        {\n            id: \"\",\n            key: \"\",\n            name: \"\u4F9D\u9109\u93AE\",\n            child: getSectionList(state)\n        },\n        {\n            id: \"\",\n            key: \"\",\n            name: \"\u4F9D\u6377\u904B\",\n            child: getMetroList(state)\n        },\n        {\n            id: \"\",\n            key: \"\",\n            name: \"\u4F9D\u5B78\u6821\",\n            child: getSchoolList(state)\n        },\n        {\n            id: \"\",\n            key: \"\",\n            name: \"\u4F9D\u5546\u5708\",\n            child: getCircleList(state)\n        }\n    ]\n}", "import type { State } from '@/state';\nimport type { FilterOption } from './filters';\nimport { getKindList, getRegionList, getTypeList, getLocationList } from './filters';\n\ninterface FilterCategory {\n    name: string,\n    getter: (state: State) => FilterOption[]\n}\n\nfunction getCategoryList(state: State): FilterCategory[] {\n    const categories = [\n        {\n            name: \"\u7A2E\u985E\",\n            getter: getTypeList\n        },\n        {\n            name: \"\u985E\u5225\",\n            getter: getKindList\n        },\n        {\n            name: \"\u5730\u5340\",\n            getter: getRegionList\n        },\n        {\n            name: \"\u4F4D\u7F6E\",\n            getter: getLocationList\n        }\n    ];\n\n    return categories;\n}\n\nexport {\n    FilterCategory,\n    getCategoryList\n}", "import type { FilterOption } from './filters/option';\n\ninterface State {\n    [key: string]: string\n}\n\nfunction hasRecord(options: FilterOption[], state: State): boolean {\n    return options.some(option => {\n        if (option.key)\n            return option.id === state[option.key];\n        else if (option.child)\n            return hasRecord(option.child, state);\n        else\n            throw new Error(`Invalid filter option: ${JSON.stringify(option)}`);\n    });\n}\n\nfunction updateState(options: FilterOption[], newState: State, state: State) {\n    options.forEach(option => {\n        if (hasRecord([option], state)) {\n            if (option.key)\n                newState[option.key] = option.id;\n            if (option.child)\n                updateState(option.child, newState, state);\n        }\n    })\n}\n\nexport {\n    hasRecord,\n    updateState,\n    State\n}", "import { getCategoryList } from './category';\nimport { getEndpont } from './filters';\nimport { hasRecord, updateState } from './state';\nimport type { State } from './state';\nimport type { FilterCategory } from './category';\nimport type { FilterOption } from './filters';\n\nfunction getOptions(newState: State, state: State): FilterCategory[] {\n    const categories = getCategoryList(newState);\n\n    for (let i = 0; i < categories.length; i++) {\n        const category = categories[i];\n        const options = category.getter(newState);\n        if (hasRecord(options, newState)) {\n            updateState(options, newState, newState);\n        } else if (hasRecord(options, state)) {\n            updateState(options, newState, state);\n        } else {\n            let target = options[0];\n            while (target.child) {\n                target = target.child[0];\n                if (target.key)\n                    newState[target.key] = target.id;\n            }\n            if (!target.key)\n                throw new Error(`Key not found for target ${JSON.stringify(target)}`);\n            newState[target.key] = target.id;\n            return getOptions(newState, state);\n        }\n    }\n    return categories;\n}\n\nexport {\n    getEndpont, getOptions,\n    FilterOption, State,\n    hasRecord\n};", "const { saltLength, algorithm, chunkSize, key } = {\n  key: \"5f0d5ff448\",\n  algorithm: \"SHA-256\",\n  saltLength: 16,\n  chunkSize: 8\n};\n\nfunction splitBySize(str, size) {\n  const e = [];\n  for (let n = 0; n < str.length; n += size)\n    e.push(str.slice(n, n + size));\n  return e;\n}\n\nexport default async function getSign(params) {\n  // Generate random salt\n  const random_bytes = new Uint8Array(saltLength / 2);\n  crypto.getRandomValues(random_bytes);\n  const salt = Array.from(random_bytes).map(e => e.toString(16).padStart(2, \"0\")).join(\"\");\n\n  // Create query from param\n  params['___salt___'] = salt;\n  const param_str = Object.keys(params)\n    .sort((t, e) => t < e ? 1 : t > e ? -1 : 0).map(t => `${t}=${params[t]}`).join(\"&\")\n\n  // Hash query\n  const hashed_buffer = await crypto.subtle.digest(algorithm, new TextEncoder().encode(param_str));\n  const hashed_params = Array.from(new Uint8Array(hashed_buffer)).map(s => s.toString(16).padStart(2, \"0\")).join(\"\");\n\n  const chunck_num = salt.length / chunkSize;\n  // Split salt into chunks\n  const splitted_salt = [];\n  for (let n = 0; n < salt.length; n += chunck_num)\n    splitted_salt.push(salt.slice(n, n + chunck_num));\n\n  // Generate random positions\n  let positions = new Set;\n  while (positions.size < chunkSize)\n    positions.add(Math.floor(Math.random() * hashed_params.length));\n  positions = Array.from(positions).sort((n, a) => n - a);\n  // Insert salt into hashed result\n  let encoded_hash = hashed_params.split(\"\");\n  positions.forEach((position, index) => {\n    encoded_hash.splice(position + index, 0, splitted_salt[index])\n  });\n  encoded_hash = encoded_hash.join(\"\");\n\n  const encoded_position = positions.map(w => w.toString().padStart(2, \"0\")).join(\"\");\n  const [p, y] = splitBySize(encoded_position, encoded_position.length / 2)\n  const [m, S] = splitBySize(key, key.length / 2);\n  return m + p + encoded_hash + y + S;\n}", "import * as filters from 'housing';\nimport getSign from './encrypt.js';\nconst USER_AGENT = \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3\";\n\nexport interface Option {\n    id: string,\n    type: string\n}\n\nconst OPTION_CONVERTOR = [{\n    from: \"region\",\n    to: \"regionid\"\n}, {\n    from: \"section\",\n    to: \"sectionid\"\n}, {\n    from: \"metro\",\n    to: \"mrtline\",\n    convert: (o: Record<string, string>, { value: p, key: d }: { value: string, key: string }) => {\n        o[d] = p,\n            o.searchtype = \"4\"\n    }\n}, {\n    from: \"station\",\n    to: \"mrtcoods\",\n    convert: (o: Record<string, string>, { value: p, key: d }: { value: string, key: string }) => {\n        o[d] = p,\n            o.searchtype = \"4\"\n    }\n}, {\n    from: \"school\",\n    to: \"school\",\n    convert: (o: Record<string, string>, { value: p, key: d }: { value: string, key: string }) => {\n        o[d] = p,\n            o.searchtype = \"3\"\n    }\n}, {\n    from: \"shopping\",\n    to: \"?\",\n    convert: (o: Record<string, string>, { value: p, key: d }: { value: string, key: string }) => {\n        o[d] = p,\n            o.searchtype = \"2\";\n    },\n    keyPicker: (o: Record<string, string[]>) => {\n        if (o[\"region\"] && o[\"kind\"] && o[\"region\"].includes(\"1\"))\n            return \"business_circle_id\";\n        return \"busness\";\n    }\n}, {\n    from: \"price\",\n    to: \"multiPrice\",\n    convert: (o: Record<string, string>, { value: p, key: d }: { value: string, key: string }) => {\n        if (p.includes(\"$\")) {\n            const v = p.replace(\"$\", \"\").replace(\"_\", \",\");\n            o.rentprice = v\n        } else\n            o[d] = p\n    }\n}, {\n    from: \"acreage\",\n    to: \"multiArea\",\n    convert: (o: Record<string, string>, { value: p, key: d }: { value: string, key: string }) => {\n        if (p.includes(\"$\")) {\n            const v = p.replace(\"$\", \"\").replace(\"_\", \",\");\n            o.area = v\n        } else\n            o[d] = p\n    }\n}, {\n    from: \"source\",\n    to: \"role\"\n}, {\n    from: \"layout\",\n    to: \"multiRoom\"\n}, {\n    from: \"floor\",\n    to: \"multiFloor\"\n}, {\n    from: \"bathroom\",\n    to: \"multiToilet\"\n}, {\n    from: \"notice\",\n    to: \"multiNotice\"\n}, {\n    from: \"page\",\n    to: \"firstRow\",\n    convert: (o: Record<string, string>, { value: p, key: d }: { value: string, key: string }) => o[d] = String((+p - 1) * 30)\n}, {\n    from: \"sort\",\n    to: \"order\",\n    convert: (o: Record<string, string>, { value: p, key: d }: { value: string, key: string }) => {\n        const l = p.split(\"_\");\n        o[d] = l[0] || \"\",\n            o.orderType = l[1] || \"\"\n    }\n}, {\n    from: \"other\",\n    to: \"shType\",\n    convert: (o: Record<string, string>, { value: p, key: d }: { value: string, key: string }) => {\n        const l = p.split(\",\")\n            , v = [\"best_house\", \"video\", \"host\", \"18\"];\n        v == null || v.forEach(i => {\n            l.includes(i) && (o[d] = [o[d], i].filter(m => m).join(\",\"),\n                l.splice(l.indexOf(i), 1))\n        }\n        ),\n            o.other = l.join(\",\")\n    }\n}];\n\nfunction joinUrl(options: Option[]) {\n    const params: Record<string, string> = {};\n    // create option set\n    const option_set: Record<string, string[]> = {};\n    options.forEach(option => {\n        if (!(option.type in option_set))\n            option_set[option.type] = [];\n        option_set[option.type].push(option.id);\n    });\n    option_set['timestamp'] = [new Date().getTime().toString()];\n\n    // merge option set\n    Object.keys(option_set).forEach(option_name_target => {\n        const convertor = OPTION_CONVERTOR.find(v => v.from === option_name_target);\n        const option_name = convertor == null ? option_name_target : convertor.keyPicker ? convertor.keyPicker(option_set) : convertor.to;\n        const option_val = option_set[option_name_target].toString();\n        if (!option_val) return;\n        if (convertor != null && convertor.convert)\n            convertor.convert(params, {\n                key: option_name,\n                value: option_val\n            })\n        else if (option_name_target !== \"regionid\") {\n            params[option_name] = option_val\n        }\n    });\n    return params;\n}\n\nasync function fetchData(endpoint: string, params: Record<string, string>) {\n    // generate url with search params\n    const url = endpoint + \"?\" + new URLSearchParams(params).toString();\n    const sign = await getSign(params);\n    const headers = {\n        device: \"pc\",\n        sign: sign,\n        \"User-Agent\": USER_AGENT\n    };\n\n    return {\n        url,\n        headers\n    }\n}\n\nexport function query(endpoint: string, options: Option[]) {\n    return fetchData(endpoint, joinUrl(options));\n}", "function t(t){return null===t?\"null\":typeof t}function r(t){return!!t&&\"object\"==typeof t}function e(t){if(void 0===t)return\"\";if(null===t)return\"Object\";if(\"object\"==typeof t&&!t.constructor)return\"Object\";var r=/function ([^(]*)/.exec(t.constructor.toString());return r&&r.length>1?r[1]:\"\"}function n(t,r,e){return\"null\"===t||\"undefined\"===t?t:(\"string\"!==t&&\"stringifiable\"!==t||(e='\"'+(e.replace(/\"/g,'\\\\\"')+'\"')),\"function\"===t?r.toString().replace(/[\\r\\n]/g,\"\").replace(/\\{.*\\}/,\"\")+\"{\u2026}\":e)}function o(o){var i=\"\";return r(o)?(i=e(o),Array.isArray(o)&&(i+=\"[\"+o.length+\"]\")):i=n(t(o),o,o),i}function i(t){return\"json-formatter-\".concat(t)}function s(t,r,e){var n=document.createElement(t);return r&&n.classList.add(i(r)),void 0!==e&&(e instanceof Node?n.appendChild(e):n.appendChild(document.createTextNode(String(e)))),n}!function(t){if(t&&\"undefined\"!=typeof window){var r=document.createElement(\"style\");r.setAttribute(\"media\",\"screen\"),r.innerHTML=t,document.head.appendChild(r)}}('.json-formatter-row {\\n  font-family: monospace;\\n}\\n.json-formatter-row,\\n.json-formatter-row a,\\n.json-formatter-row a:hover {\\n  color: black;\\n  text-decoration: none;\\n}\\n.json-formatter-row .json-formatter-row {\\n  margin-left: 1rem;\\n}\\n.json-formatter-row .json-formatter-children.json-formatter-empty {\\n  opacity: 0.5;\\n  margin-left: 1rem;\\n}\\n.json-formatter-row .json-formatter-children.json-formatter-empty:after {\\n  display: none;\\n}\\n.json-formatter-row .json-formatter-children.json-formatter-empty.json-formatter-object:after {\\n  content: \"No properties\";\\n}\\n.json-formatter-row .json-formatter-children.json-formatter-empty.json-formatter-array:after {\\n  content: \"[]\";\\n}\\n.json-formatter-row .json-formatter-string,\\n.json-formatter-row .json-formatter-stringifiable {\\n  color: green;\\n  white-space: pre;\\n  word-wrap: break-word;\\n}\\n.json-formatter-row .json-formatter-number {\\n  color: blue;\\n}\\n.json-formatter-row .json-formatter-boolean {\\n  color: red;\\n}\\n.json-formatter-row .json-formatter-null {\\n  color: #855a00;\\n}\\n.json-formatter-row .json-formatter-undefined {\\n  color: #ca0b69;\\n}\\n.json-formatter-row .json-formatter-function {\\n  color: #FF20ED;\\n}\\n.json-formatter-row .json-formatter-date {\\n  background-color: rgba(0, 0, 0, 0.05);\\n}\\n.json-formatter-row .json-formatter-url {\\n  text-decoration: underline;\\n  color: blue;\\n  cursor: pointer;\\n}\\n.json-formatter-row .json-formatter-bracket {\\n  color: blue;\\n}\\n.json-formatter-row .json-formatter-key {\\n  color: #00008b;\\n  padding-right: 0.2rem;\\n}\\n.json-formatter-row .json-formatter-toggler-link {\\n  cursor: pointer;\\n}\\n.json-formatter-row .json-formatter-toggler {\\n  line-height: 1.2rem;\\n  font-size: 0.7rem;\\n  vertical-align: middle;\\n  opacity: 0.6;\\n  cursor: pointer;\\n  padding-right: 0.2rem;\\n}\\n.json-formatter-row .json-formatter-toggler:after {\\n  display: inline-block;\\n  transition: transform 100ms ease-in;\\n  content: \"\u25BA\";\\n}\\n.json-formatter-row > a > .json-formatter-preview-text {\\n  opacity: 0;\\n  transition: opacity 0.15s ease-in;\\n  font-style: italic;\\n}\\n.json-formatter-row:hover > a > .json-formatter-preview-text {\\n  opacity: 0.6;\\n}\\n.json-formatter-row.json-formatter-open > .json-formatter-toggler-link .json-formatter-toggler:after {\\n  transform: rotate(90deg);\\n}\\n.json-formatter-row.json-formatter-open > .json-formatter-children:after {\\n  display: inline-block;\\n}\\n.json-formatter-row.json-formatter-open > a > .json-formatter-preview-text {\\n  display: none;\\n}\\n.json-formatter-row.json-formatter-open.json-formatter-empty:after {\\n  display: block;\\n}\\n.json-formatter-dark.json-formatter-row {\\n  font-family: monospace;\\n}\\n.json-formatter-dark.json-formatter-row,\\n.json-formatter-dark.json-formatter-row a,\\n.json-formatter-dark.json-formatter-row a:hover {\\n  color: white;\\n  text-decoration: none;\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-row {\\n  margin-left: 1rem;\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-children.json-formatter-empty {\\n  opacity: 0.5;\\n  margin-left: 1rem;\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-children.json-formatter-empty:after {\\n  display: none;\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-children.json-formatter-empty.json-formatter-object:after {\\n  content: \"No properties\";\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-children.json-formatter-empty.json-formatter-array:after {\\n  content: \"[]\";\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-string,\\n.json-formatter-dark.json-formatter-row .json-formatter-stringifiable {\\n  color: #31f031;\\n  white-space: pre;\\n  word-wrap: break-word;\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-number {\\n  color: #66c2ff;\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-boolean {\\n  color: #EC4242;\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-null {\\n  color: #EEC97D;\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-undefined {\\n  color: #ef8fbe;\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-function {\\n  color: #FD48CB;\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-date {\\n  background-color: rgba(255, 255, 255, 0.05);\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-url {\\n  text-decoration: underline;\\n  color: #027bff;\\n  cursor: pointer;\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-bracket {\\n  color: #9494ff;\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-key {\\n  color: #23a0db;\\n  padding-right: 0.2rem;\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-toggler-link {\\n  cursor: pointer;\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-toggler {\\n  line-height: 1.2rem;\\n  font-size: 0.7rem;\\n  vertical-align: middle;\\n  opacity: 0.6;\\n  cursor: pointer;\\n  padding-right: 0.2rem;\\n}\\n.json-formatter-dark.json-formatter-row .json-formatter-toggler:after {\\n  display: inline-block;\\n  transition: transform 100ms ease-in;\\n  content: \"\u25BA\";\\n}\\n.json-formatter-dark.json-formatter-row > a > .json-formatter-preview-text {\\n  opacity: 0;\\n  transition: opacity 0.15s ease-in;\\n  font-style: italic;\\n}\\n.json-formatter-dark.json-formatter-row:hover > a > .json-formatter-preview-text {\\n  opacity: 0.6;\\n}\\n.json-formatter-dark.json-formatter-row.json-formatter-open > .json-formatter-toggler-link .json-formatter-toggler:after {\\n  transform: rotate(90deg);\\n}\\n.json-formatter-dark.json-formatter-row.json-formatter-open > .json-formatter-children:after {\\n  display: inline-block;\\n}\\n.json-formatter-dark.json-formatter-row.json-formatter-open > a > .json-formatter-preview-text {\\n  display: none;\\n}\\n.json-formatter-dark.json-formatter-row.json-formatter-open.json-formatter-empty:after {\\n  display: block;\\n}\\n');var a=/(^\\d{1,4}[\\.|\\\\/|-]\\d{1,2}[\\.|\\\\/|-]\\d{1,4})(\\s*(?:0?[1-9]:[0-5]|1(?=[012])\\d:[0-5])\\d\\s*[ap]m)?$/,f=/\\d{2}:\\d{2}:\\d{2} GMT-\\d{4}/,m=/\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z/,c=/^https?:\\/\\//,l=window.requestAnimationFrame||function(t){return t(),0},h={hoverPreviewEnabled:!1,hoverPreviewArrayCount:100,hoverPreviewFieldCount:5,animateOpen:!0,animateClose:!0,theme:null,useToJSON:!0,sortPropertiesBy:null,maxArrayItems:100,exposePath:!1},d=function(){function d(t,r,e,n,o,i,s){void 0===r&&(r=1),void 0===e&&(e=h),void 0===i&&(i=[]),this.json=t,this.open=r,this.config=e,this.key=n,this.displayKey=o,this.path=i,this.arrayRange=s,this._isOpen=null,void 0===this.config.hoverPreviewEnabled&&(this.config.hoverPreviewEnabled=h.hoverPreviewEnabled),void 0===this.config.hoverPreviewArrayCount&&(this.config.hoverPreviewArrayCount=h.hoverPreviewArrayCount),void 0===this.config.hoverPreviewFieldCount&&(this.config.hoverPreviewFieldCount=h.hoverPreviewFieldCount),void 0===this.config.useToJSON&&(this.config.useToJSON=h.useToJSON),void 0===this.config.maxArrayItems&&(this.config.maxArrayItems=h.maxArrayItems),\"\"===this.key&&(this.key='\"\"'),void 0===this.displayKey&&(this.displayKey=this.key)}return Object.defineProperty(d.prototype,\"isOpen\",{get:function(){return null!==this._isOpen?this._isOpen:this.open>0},set:function(t){this._isOpen=t},enumerable:!1,configurable:!0}),Object.defineProperty(d.prototype,\"isDate\",{get:function(){return this.json instanceof Date||\"string\"===this.type&&(a.test(this.json)||m.test(this.json)||f.test(this.json))},enumerable:!1,configurable:!0}),Object.defineProperty(d.prototype,\"isUrl\",{get:function(){return\"string\"===this.type&&c.test(this.json)},enumerable:!1,configurable:!0}),Object.defineProperty(d.prototype,\"isArray\",{get:function(){return Array.isArray(this.json)},enumerable:!1,configurable:!0}),Object.defineProperty(d.prototype,\"isLargeArray\",{get:function(){return this.isArray&&this.json.length>this.config.maxArrayItems},enumerable:!1,configurable:!0}),Object.defineProperty(d.prototype,\"isArrayRange\",{get:function(){return this.isArray&&void 0!==this.arrayRange&&2==this.arrayRange.length},enumerable:!1,configurable:!0}),Object.defineProperty(d.prototype,\"isObject\",{get:function(){return r(this.json)},enumerable:!1,configurable:!0}),Object.defineProperty(d.prototype,\"isEmptyObject\",{get:function(){return!this.keys.length&&!this.isArray},enumerable:!1,configurable:!0}),Object.defineProperty(d.prototype,\"isEmpty\",{get:function(){return this.isEmptyObject||this.keys&&!this.keys.length&&this.isArray},enumerable:!1,configurable:!0}),Object.defineProperty(d.prototype,\"useToJSON\",{get:function(){return this.config.useToJSON&&\"stringifiable\"===this.type},enumerable:!1,configurable:!0}),Object.defineProperty(d.prototype,\"hasKey\",{get:function(){return void 0!==this.key},enumerable:!1,configurable:!0}),Object.defineProperty(d.prototype,\"constructorName\",{get:function(){return e(this.json)},enumerable:!1,configurable:!0}),Object.defineProperty(d.prototype,\"type\",{get:function(){return this.config.useToJSON&&this.json&&this.json.toJSON?\"stringifiable\":t(this.json)},enumerable:!1,configurable:!0}),Object.defineProperty(d.prototype,\"keys\",{get:function(){if(this.isObject){var t=Object.keys(this.json);if(this.isLargeArray){var r=Math.ceil(this.json.length/this.config.maxArrayItems);t=[];for(var e=0;e<r;e++){var n=e*this.config.maxArrayItems,o=Math.min(this.json.length-1,n+(this.config.maxArrayItems-1));t.push(\"\".concat(n,\" \u2026 \").concat(o))}}return!this.isArray&&this.config.sortPropertiesBy?t.sort(this.config.sortPropertiesBy):t}return[]},enumerable:!1,configurable:!0}),d.prototype.toggleOpen=function(){this.isOpen=!this.isOpen,this.element&&(this.isOpen?this.appendChildren(this.config.animateOpen):this.removeChildren(this.config.animateClose),this.element.classList.toggle(i(\"open\")))},d.prototype.openAtDepth=function(t){void 0===t&&(t=1),t<0||(this.open=t,this.isOpen=0!==t,this.element&&(this.removeChildren(!1),0===t?this.element.classList.remove(i(\"open\")):(this.appendChildren(this.config.animateOpen),this.element.classList.add(i(\"open\")))))},d.prototype.getInlinepreview=function(){var t=this;if(this.isArray)return this.json.length>this.config.hoverPreviewArrayCount?\"Array[\".concat(this.json.length,\"]\"):\"[\".concat(this.json.map(o).join(\", \"),\"]\");var r=this.keys,e=r.slice(0,this.config.hoverPreviewFieldCount).map((function(r){return\"\".concat(r,\":\").concat(o(t.json[r]))})),n=r.length>=this.config.hoverPreviewFieldCount?\"\u2026\":\"\";return\"{\".concat(e.join(\", \")).concat(n,\"}\")},d.prototype.render=function(){this.element=s(\"div\",\"row\");var t=this.isObject?s(\"a\",\"toggler-link\"):s(\"span\");if(this.isObject&&!this.useToJSON&&t.appendChild(s(\"span\",\"toggler\")),this.isArrayRange?t.appendChild(s(\"span\",\"range\",\"[\".concat(this.displayKey,\"]\"))):this.hasKey&&(t.appendChild(s(\"span\",\"key\",\"\".concat(this.displayKey,\":\"))),this.config.exposePath&&(this.element.dataset.path=JSON.stringify(this.path))),this.isObject&&!this.useToJSON){var r=s(\"span\",\"value\"),e=s(\"span\");if(!this.isArrayRange){var o=s(\"span\",\"constructor-name\",this.constructorName);e.appendChild(o)}if(this.isArray&&!this.isArrayRange){var a=s(\"span\");a.appendChild(s(\"span\",\"bracket\",\"[\")),a.appendChild(s(\"span\",\"number\",this.json.length)),a.appendChild(s(\"span\",\"bracket\",\"]\")),e.appendChild(a)}r.appendChild(e),t.appendChild(r)}else{(r=this.isUrl?s(\"a\"):s(\"span\")).classList.add(i(this.type)),this.isDate&&r.classList.add(i(\"date\")),this.isUrl&&(r.classList.add(i(\"url\")),r.setAttribute(\"href\",this.json));var f=n(this.type,this.json,this.useToJSON?this.json.toJSON():this.json);r.appendChild(document.createTextNode(f)),t.appendChild(r)}if(this.isObject&&this.config.hoverPreviewEnabled){var m=s(\"span\",\"preview-text\");m.appendChild(document.createTextNode(this.getInlinepreview())),t.appendChild(m)}var c=s(\"div\",\"children\");return this.isObject&&c.classList.add(i(\"object\")),this.isArray&&c.classList.add(i(\"array\")),this.isEmpty&&c.classList.add(i(\"empty\")),this.config&&this.config.theme&&this.element.classList.add(i(this.config.theme)),this.isOpen&&this.element.classList.add(i(\"open\")),this.element.appendChild(t),this.element.appendChild(c),this.isObject&&this.isOpen&&this.appendChildren(),this.isObject&&!this.useToJSON&&t.addEventListener(\"click\",this.toggleOpen.bind(this)),this.element},d.prototype.appendChildren=function(t){var r=this;void 0===t&&(t=!1);var e=this.element.querySelector(\"div.\".concat(i(\"children\")));if(e&&!this.isEmpty){var n=function(t,n){var o=r.isLargeArray?[n*r.config.maxArrayItems,Math.min(r.json.length-1,n*r.config.maxArrayItems+(r.config.maxArrayItems-1))]:void 0,i=r.isArrayRange?(r.arrayRange[0]+n).toString():t,s=new d(o?r.json.slice(o[0],o[1]+1):r.json[t],r.open-1,r.config,t,i,o?r.path:r.path.concat(i),o);e.appendChild(s.render())};if(t){var o=0,s=function(){var t=r.keys[o];n(t,o),(o+=1)<r.keys.length&&(o>10?s():l(s))};l(s)}else this.keys.forEach((function(t,r){return n(t,r)}))}},d.prototype.removeChildren=function(t){void 0===t&&(t=!1);var r=this.element.querySelector(\"div.\".concat(i(\"children\")));if(t){var e=0,n=function(){r&&r.children.length&&(r.removeChild(r.children[0]),(e+=1)>10?n():l(n))};l(n)}else r&&(r.innerHTML=\"\")},d}();export{d as default};\n", "const config = {\n  \"algorithm\": \"AES-GCM\",\n  \"keyLength\": 128,\n  \"ivLength\": 12,\n  \"tagLength\": 128\n}\n\nfunction toBuffer(encoded) {\n  const str = atob(encoded);\n  const buffer_array = new Uint8Array(str.length);\n  for (let r = 0; r < str.length; r++)\n    buffer_array[r] = str.charCodeAt(r);\n  return buffer_array.buffer\n}\n\nfunction decodeText(str) {\n  const t = atob(str);\n  const n = new Uint8Array(t.length);\n  for (let i = 0; i < t.length; i++)\n    n[i] = t.charCodeAt(i);\n  return new TextDecoder().decode(n)\n}\n\nfunction mergeBuffer(buffer, tag) {\n  const n = new Uint8Array(buffer.byteLength + tag.byteLength);\n  n.set(new Uint8Array(buffer), 0);\n  n.set(new Uint8Array(tag), buffer.byteLength);\n  return n.buffer;\n}\n\nexport default async function decrypt(text) {\n  // extract key\n  const key_str_len = config.keyLength / 4;\n  const key_str = text.slice(0, key_str_len);\n  text = text.slice(key_str_len + 6);\n\n  // extract tag, iv\n  const cipher_range_len = Number.parseInt(text.slice(0, 4));\n  const [start, end] = decodeText(text.slice(-cipher_range_len)).split(\"-\").map(Number);\n  text = text.slice(4, -cipher_range_len);\n\n  const tag_str = text.slice(0, start);\n  const iv_str = text.slice(-end);\n  text = text.slice(start, -end);\n\n  // Create decrypt key\n  const key_buffer = new Uint8Array(key_str.length / 2);\n  for (let n = 0; n < key_str.length; n += 2)\n    key_buffer[n / 2] = Number.parseInt(key_str.slice(n, n + 2), 16);\n  const key = await crypto.subtle.importKey(\"raw\", key_buffer, {\n    name: config.algorithm,\n    length: config.keyLength\n  }, true, [\"decrypt\"]);\n\n  // decrypt\n  const iv = toBuffer(iv_str)\n  const tag = toBuffer(tag_str);\n  const buffer = toBuffer(text);\n  const result = await crypto.subtle.decrypt({\n    name: config.algorithm,\n    iv: iv,\n    tagLength: config.tagLength\n  }, key, mergeBuffer(buffer, tag))\n\n  return JSON.parse(new TextDecoder(\"utf-8\").decode(new Uint8Array(result)));\n}", "import * as filters from 'housing';\nimport { query } from './rent/query';\nimport type { Option } from './rent/query';\n\nimport type { State, FilterOption } from 'housing';\nimport JSONFormatter from 'json-formatter-js';\nimport decrypt from './rent/decrypt';\n\n// --- DOM Elements ---\nconst filterForm = document.getElementById('filter-form');\nconst tabEncodeBtn = document.getElementById('tab-encode');\nconst tabDecodeBtn = document.getElementById('tab-decode');\nconst encodingPanel = document.getElementById('encoding-panel');\nconst decodingPanel = document.getElementById('decoding-panel');\nconst decodingInputArea = document.getElementById('decoding-input-textarea');\nconst codeSubTabs = document.querySelectorAll('#encoding-panel button');\nconst codeBlocks = document.querySelectorAll('#encoding-panel div[id^=\"code-\"]');\nconst togglePanelBtn = document.getElementById('toggle-panel-btn');\nconst rightPanel = document.getElementById('right-panel');\n\n// --- Functions ---\n\n/**\n * Updates the JSON viewer with an interactive tree.\n * @param {string} jsonString - The JSON string to parse and display.\n */\nfunction updateJsonViewer(decodedObject: Object) {\n    const jsonContainer = document.getElementById('decoded-json');\n    if (!jsonContainer) return;\n    jsonContainer.innerHTML = ''; // Clear previous content\n\n    try {\n        const formatter = new JSONFormatter(decodedObject, 1, {\n            theme: 'dark'\n        });\n        jsonContainer.appendChild(formatter.render());\n    } catch (e) {\n        console.error(e)\n        jsonContainer.innerHTML = '<pre class=\"text-red-400\">Invalid JSON input.</pre>';\n    }\n}\n\nfunction handleDecodingInput(this: HTMLInputElement) {\n    const text = this.value;\n    decrypt(text)\n        .then(result => {\n            updateJsonViewer(result);\n        }).catch(e => {\n            console.error(e);\n            updateJsonViewer('.');\n        })\n}\n\nfunction generateCode(url: string, headers: Record<string, string>) {\n    // Convert headers object to a string for different formats\n    const headerStrNode = JSON.stringify(headers, null, 2);\n    const headerStrPython = JSON.stringify(headers, null, 4);\n    const headerStrCurl = Object.keys(headers)\n        .map(key => `-H \"${key}: ${headers[key]}\"`)\n        .join(' \\\\\\n');\n\n    // Node.js code using `node-fetch`\n    const nodejsCode = `\nconst axios = require('axios');\n\nconst url = '${url}';\nconst headers = ${headerStrNode};\nconst result = await axios.get(url, { headers: headers })\n .then( (response) => response.data);\n  `;\n\n    // Python code using `requests`\n    const pythonCode = `\nimport requests\n\nurl = \"${url}\"\nheaders = ${headerStrPython}\n\nresponse = requests.get(url, headers=headers)\nresult = response.text\n  `;\n\n    // cURL code for Bash\n    const curlBashCode = `\ncurl -X GET \"${url}\" \\\\\n${headerStrCurl}\n  `;\n\n    // cURL code for Windows Command Prompt\n    const curlCmdCode = `\ncurl -X GET \"${url}\" ^\n${Object.keys(headers).map(key => `-H \"${key}: ${headers[key]}\"`).join(' ^\\n')}\n  `;\n\n    const generatedCode: Record<string, string> = {\n        js: nodejsCode,\n        py: pythonCode,\n        curl_cmd: curlCmdCode,\n        curl_bash: curlBashCode,\n    };\n\n    codeBlocks.forEach(block => {\n        const pre = document.createElement('pre');\n        pre.classList.add('overflow-x-auto');\n        pre.textContent = generatedCode[block.id.split('-')[1]].trim();\n\n        const button = document.createElement('button');\n        button.classList.add(\n            'absolute',\n            'top-2',\n            'right-2',\n            'px-2',\n            'py-1',\n            'text-white',\n            'text-xs',\n            'rounded-md',\n            'bg-gray-700',\n            'hover:bg-gray-600',\n            'transition-colors'\n        );\n        button.innerText = 'Copy';\n\n        button.addEventListener('click', () => {\n            const textToCopy = pre.innerText;\n            navigator.clipboard.writeText(textToCopy).then(() => {\n                button.innerText = 'Copied!';\n                button.classList.remove('bg-gray-700', 'hover:bg-gray-600', 'text-white');\n                button.classList.add('bg-green-500', 'hover:bg-green-400', 'text-black');\n                setTimeout(() => {\n                    button.innerText = 'Copy';\n                    button.classList.remove('bg-green-500', 'hover:bg-green-400', 'text-black');\n                    button.classList.add('bg-gray-700', 'hover:bg-gray-600', 'text-white');\n                }, 800);\n            }).catch(err => {\n                console.error('Failed to copy text: ', err);\n            });\n        });\n\n        block.innerHTML = '';\n        block.appendChild(pre);\n        block.appendChild(button);\n    });\n}\n\nfunction updateCommand(state: State) {\n    const params: Option[] = [];\n    Object.keys(state).forEach(k => {\n        params.push({\n            id: state[k],\n            type: k\n        })\n    })\n    query(filters.getEndpont(state), params)\n        .then(result => {\n            generateCode(result.url, result.headers);\n        })\n        .catch(error => {\n            console.error(error);\n        })\n}\n\n/**\n * Generates the filter form dynamically.\n */\nfunction fillOption(holder: HTMLElement, state: State, option: FilterOption) {\n    const btn = document.createElement('button');\n    btn.type = 'button';\n\n    const normalBtnClass = 'transition-colors text-gray-900 bg-white border border-gray-300 focus:outline-none hover:bg-gray-100 focus:ring-4 focus:ring-gray-100 font-medium rounded-full text-sm px-5 py-2.5 me-2 mb-2 dark:bg-gray-800 dark:text-white dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-600 dark:focus:ring-gray-700';\n    const activeBtnClass = 'transition-colors text-white bg-blue-700 hover:bg-blue-800 focus:outline-none focus:ring-4 focus:ring-blue-300 font-medium rounded-full text-sm px-5 py-2.5 text-center me-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800';\n    if (filters.hasRecord([option], state))\n        btn.className = activeBtnClass;\n    else\n        btn.className = normalBtnClass;\n    btn.textContent = option.name;\n\n    // Add click event listener to toggle selection\n    btn.addEventListener('click', () => {\n        let target = option;\n        const newState: State = {};\n        if (target.key)\n            newState[target.key] = target.id;\n\n        while (true) {\n            if (target.key)\n                newState[target.key] = target.id;\n            if (target.child)\n                target = target.child[0];\n            else\n                break;\n        }\n\n        target = option;\n        console.log(\"parent\", target.parent);\n        while (target.parent) {\n            target = target.parent;\n            if (target.key)\n                newState[target.key] = target.id;\n        }\n        console.log(\"newState\", newState)\n        generateForm(state, newState);\n    });\n    holder.appendChild(btn);\n}\n\nfunction dumpOption(state: State, options: FilterOption[], parentOption?: FilterOption): HTMLElement {\n    const result = document.createElement('div');\n    const categories = document.createElement('div');\n    const subCategories = document.createElement('div');\n    subCategories.className = 'box-border p-4 border-4 border-gray-700 rounded-lg';\n    for (let option of options) {\n        option.parent = parentOption;\n        if (option.child) {\n            if (option.child && option.child.length > 0) {\n                fillOption(categories, state, option);\n                if (filters.hasRecord([option], state)) {\n                    subCategories.appendChild(dumpOption(state, option.child, option));\n                }\n            }\n        } else {\n            fillOption(categories, state, option);\n        }\n    }\n    result.appendChild(categories);\n    if (subCategories.children.length > 0)\n        result.appendChild(subCategories);\n    return result;\n}\n\nfunction generateForm(state: State, newState: State) {\n    if (!filterForm) return;\n    filterForm.innerHTML = '';\n    const filterCategories = filters.getOptions(newState, state);\n    state = newState;\n    console.log(\"New state\", state);\n    filterCategories.forEach(category => {\n        const categoryDiv = document.createElement('div');\n        categoryDiv.className = 'bg-gray-800 p-6 rounded-lg flex items-start';\n        const titleDiv = document.createElement('div');\n        titleDiv.className = 'w-1/4 pr-4 shrink-0';\n\n        const title = document.createElement('h3');\n        title.className = 'text-lg font-semibold text-gray-200';\n        title.textContent = category.name;\n        titleDiv.appendChild(title)\n        categoryDiv.appendChild(titleDiv);\n\n        categoryDiv.appendChild(dumpOption(state, category.getter(state)));\n        filterForm.appendChild(categoryDiv);\n    });\n    updateCommand(state);\n}\n\n/**\n * Handles main tab switching.\n * @param {string} activeTab - The ID of the tab to activate ('encoding' or 'decoding').\n */\nfunction switchMainTab(activeTab: string) {\n    if (!tabEncodeBtn || !tabDecodeBtn || !encodingPanel || !decodingPanel) return;\n    if (activeTab === 'encoding') {\n        tabEncodeBtn.classList.add('bg-gray-700', 'text-white');\n        tabEncodeBtn.classList.remove('bg-gray-800', 'text-gray-400');\n        tabDecodeBtn.classList.add('bg-gray-800', 'text-gray-400');\n        tabDecodeBtn.classList.remove('bg-gray-700', 'text-white');\n        encodingPanel.classList.remove('hidden');\n        decodingPanel.classList.add('hidden');\n    } else {\n        tabDecodeBtn.classList.add('bg-gray-700', 'text-white');\n        tabDecodeBtn.classList.remove('bg-gray-800', 'text-gray-400');\n        tabEncodeBtn.classList.add('bg-gray-800', 'text-gray-400');\n        tabEncodeBtn.classList.remove('bg-gray-700', 'text-white');\n        decodingPanel.classList.remove('hidden');\n        encodingPanel.classList.add('hidden');\n    }\n}\n\n/**\n * Handles sub-tab switching for code blocks.\n * @param {string} tabId - The ID of the sub-tab to activate ('sub-tab-js', etc.).\n */\nfunction switchSubTab(tabId: string) {\n    codeSubTabs.forEach(btn => {\n        if (btn.id === tabId) {\n            btn.classList.add('bg-gray-700', 'text-white');\n            btn.classList.remove('bg-gray-800', 'text-gray-400');\n        } else {\n            btn.classList.remove('bg-gray-700', 'text-white');\n            btn.classList.add('bg-gray-800', 'text-gray-400');\n        }\n    });\n\n    codeBlocks.forEach(block => {\n        if (block.id === `code-${tabId.split('-')[2]}`) {\n            block.classList.remove('hidden');\n        } else {\n            block.classList.add('hidden');\n        }\n    });\n}\n\n/**\n * Toggles the mobile drawer visibility.\n */\nfunction toggleMobilePanel() {\n    if (rightPanel)\n        rightPanel.classList.toggle('translate-x-full');\n}\n\n\n\n// --- Event Listeners ---\ndocument.addEventListener('DOMContentLoaded', () => {\n    if (!tabEncodeBtn || !tabDecodeBtn || !togglePanelBtn || !decodingInputArea) return;\n    generateForm({}, {});\n\n    tabEncodeBtn.addEventListener('click', () => switchMainTab('encoding'));\n    tabDecodeBtn.addEventListener('click', () => switchMainTab('decoding'));\n\n    codeSubTabs.forEach(btn => {\n        btn.addEventListener('click', () => switchSubTab(btn.id));\n    });\n\n    togglePanelBtn.addEventListener('click', toggleMobilePanel);\n    decodingInputArea.addEventListener('input', handleDecodingInput);\n});\n"],
  "mappings": "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IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;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IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;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AM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MAAM;IACN,KAAK;IACL,KAAK;EACT,GAAG;IACC,IAAI;IACJ,MA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",
  "names": ["e", "key", "i", "e", "n", "t", "s", "a", "m", "o", "d", "l", "i", "m", "t", "r", "e", "o", "i", "n", "d", "s", "a", "f", "m", "c", "r", "t", "n", "i", "key", "e", "key"]
}
